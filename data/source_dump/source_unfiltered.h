#pragma once
#include "datatypes_unfiltered.h"



void __cdecl lego::front::Advisor_Initialise(char *gameName,LegoCamera *cameraMain,Viewport *viewMain);
void __cdecl lego::front::Advisor_Stop(void);
void __cdecl lego::front::Advisor_InitViewport(float param_unused);
float10 __cdecl lego::math::Maths_Vector2DDistance(Point2F *a,Point2F *b);
void __cdecl lego::front::Advisor_LoadAnims(Config *config,char *gameName);
BOOL __cdecl lego::front::Advisor_GetAdvisorType(char *advisorName,Advisor_Type *out_advisorType);
Vector3F * __cdecl lego::math::Maths_Vector3DCrossProduct(Vector3F *out_vector,Vector3F *a,Vector3F *b);
BOOL __cdecl lego::front::Advisor_GetAnimType(char *animName,Advisor_Anim *out_animType);
Vector3F * __cdecl lego::math::Maths_Vector3DAdd(Vector3F *out_vector,Vector3F *a,Vector3F *b);
void __cdecl lego::front::Advisor_LoadPositions(Config *config,char *gameName,int screenWidth,int screenHeight);
Vector3F * __cdecl lego::math::Maths_Vector3DSubtract(Vector3F *out_vector,Vector3F *a,Vector3F *b);
Vector3F * __cdecl lego::math::Maths_Vector3DScale(Vector3F *out_vector,Vector3F *a,float scalar);
Vector3F * __cdecl lego::math::Maths_Vector3DNormalize(Vector3F *ref_vector);
void __cdecl lego::front::Advisor_AddPosition(Advisor_Type advisorType,Advisor_Anim animType,Text_Type textType,SFX_ID sfxID,Panel_Type panelType,float x,float y);
void __cdecl lego::front::Advisor_SetParameters(Advisor_Type advisorType,Panel_Type panelType,float x,float y);
void __cdecl lego::front::Advisor_GetOrigPos(Advisor_Type advisorType,float *out_origX,float *out_origY);
BOOL __cdecl lego::front::Advisor_Start(Advisor_Type advisorType,BOOL loop);
void __cdecl lego::front::Advisor_PlaySFX(Advisor_Type advisorType);
void __cdecl lego::front::Advisor_Update(float elapsed);
BOOL __cdecl lego::front::Advisor_MoveAnimation(Advisor_Anim animType,float elapsed);
void __cdecl lego::front::Advisor_End(void);
void __cdecl lego::front::Advisor_ViewportTransform(Advisor_Type advisorType);
ProgrammerMode __cdecl lego::main::Main_ProgrammerMode(void);
char * __cdecl lego::main::Main_GetStartLevel(void);
BOOL __cdecl lego::front::Advisor_IsAnimating(void);
int __cdecl lego::main::appWidth(void);
int __cdecl lego::main::appHeight(void);
uint __cdecl lego::image::Font_GetStringWidth(Font *font,char *msg,...);
void __cdecl lego::image::Font_GetStringInfo(Font *font,uint *out_width,uint *out_lineCount,char *msg,...);
BOOL __cdecl lego::ai::AIPriority_GetType(char *aiPriorityName,AI_Priority *out_priorityType);
void __cdecl lego::ai::AITask_Initialise(void);
void __cdecl lego::ai::AITask_FUN_00401f40(AITask_Type taskType,LegoObject *liveObj,Point2I *opt_blockPos);
void __cdecl lego::ai::AITask_SetPriorityType(AITask *aiTask,AI_Priority priorityType);
void __cdecl lego::ai::AITask_Game_SetPriorityValue(AI_Priority priorityType,int aiTaskValue);
void __cdecl lego::ai::AITask_Game_SetPriorityOff(AI_Priority priorityType,BOOL off);
BOOL __cdecl lego::ai::AITask_Game_IsPriorityOff(AI_Priority priorityType);
void __cdecl lego::ai::AITask_Shutdown(void);
void __cdecl lego::ai::AITask_CleanupLevel(BOOL end);
void __cdecl lego::ai::AITask_Game_SetNoGather(BOOL noGather);
BOOL __cdecl lego::ai::AITask_Callback_Remove(AITask *aiTask);
void __cdecl lego::util::free2(undefined *param_1);
void __cdecl lego::ai::AITask_UpdateAll(float elapsedGame);
void __cdecl lego::ai::AITask_FUN_00402240(AITask **ref_aiTask);
void __cdecl lego::ai::AITask_DoDig_AtBlockPos(Point2I *blockPos,BOOL param_2,BOOL param_3);
void __cdecl lego::ai::AITask_UnkInitRouting_FUN_00402530(AITask *aiTask,BOOL dropCarried);
void __cdecl lego::ai::AITask_DoAttackRockMonster_Target(LegoObject *targetObj);
void __cdecl lego::ai::AITask_LiveObject_FUN_004025f0(LegoObject *liveObj);
BOOL __cdecl lego::ai::AITask_IsCollectAndSameTarget(AITask *aiTask,LegoObject *liveObj);
void __cdecl lego::ai::AITask_DoCollect(LegoObject *liveObj,float param_2);
void __cdecl lego::ai::AITask_DoBuildPath_AtPosition(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoGather_Count(int count);
void __cdecl lego::ai::AITask_DoCollect_Target(LegoObject *targetObj);
void __cdecl lego::ai::AITask_DoTrain_Target(LegoObject *targetObj,LegoObject_AbilityFlags trainFlags,BOOL param_3);
void __cdecl lego::ai::AITask_DoFindDriver_Target(LegoObject *targetObj);
BOOL __cdecl lego::ai::AITask_RemoveAttackPathReferences(Point2I *blockPos);
BOOL __cdecl lego::ai::AITask_Callback_RemoveAttackPathReference(AITask *aiTask,Point2I **pBlockPos);
void __cdecl lego::ai::AITask_RemoveAttackRockMonsterReferences(LegoObject *targetObj);
BOOL __cdecl lego::ai::AITask_Callback_RemoveAttackRockMonsterReference(AITask *aiTask,LegoObject *targetObj);
void __cdecl lego::ai::AITask_RemoveDigReferences(Point2I *blockPos,BOOL digConnection);
BOOL __cdecl lego::ai::AITask_RemoveReinforceReferences(Point2I *blockPos);
BOOL __cdecl lego::ai::AITask_DelayOrRemoveClearReferences(Point2I *blockPos,BOOL delay);
BOOL __cdecl lego::ai::AITask_Callback_RemoveWallReference(AITask *aiTask,SearchAITaskDeselect_8 *search);
BOOL __cdecl lego::ai::AITask_Callback_RemoveReinforceReference(AITask *aiTask,Point2I **pBlockPos);
BOOL __cdecl lego::ai::AITask_Callback_RemoveClearReference(AITask *aiTask,Point2I **pBlockPos);
BOOL __cdecl lego::ai::AITask_Callback_DelayClearReference(AITask *aiTask,Point2I **pBlockPos);
void __cdecl lego::ai::AITask_RemoveGetToolReferences(AITask *aiTask);
BOOL __cdecl lego::ai::AITask_Callback_FindGetToolReference(AITask *aiTask,AITask *otherTask);
BOOL __cdecl lego::ai::AITask_DoDynamite_AtBlockPos(Point2I *blockPos,BOOL noRoutingUnk);
void __cdecl lego::ai::AITask_DoBirdScarer_AtPosition(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoFindLoad(LegoObject *targetObj);
void __cdecl lego::ai::AITask_DoRepair_Target(LegoObject *targetObj,BOOL condition);
void __cdecl lego::ai::AITask_QueueGotoEat_Target(LegoObject *liveObj,LegoObject *targetObj);
void __cdecl lego::ai::AITask_DoElecFence(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoReinforce_AtBlockPos(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoClear_AtPosition(Point2I *blockPos,Message_Type completeAction);
void __cdecl lego::ai::AITask_DoGetTool_FromTask(AITask *aiTask);
BOOL __cdecl lego::ai::AITask_DoGetTool(LegoObject_ToolType toolType);
BOOL __cdecl lego::ai::AITask_Game_SelectedUnits_UnkEquippedTool_FUN_00403110(LegoObject_ToolType toolType);
void __cdecl lego::ai::AITask_QueueGotoBlock_Group(LegoObject **unitList,uint unitCount,Point2I *blockPos,BOOL reevalTasks);
void __cdecl lego::ai::AITask_DoUpgrade(LegoObject *liveObj,uint newObjLevel);
void __cdecl lego::ai::AITask_DoDock(LegoObject *liveObj);
void __cdecl lego::ai::AITask_DoGoto_Congregate(Point2I *blockPos);
void __cdecl lego::ai::AITask_StopGoto_Congregate(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoAttackObject(LegoObject *liveObj);
void __cdecl lego::ai::AITask_DoAttackPath(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoRepair(LegoObject *liveObj);
void __cdecl lego::ai::AITask_StopRepairForObject(LegoObject *liveObj);
void __cdecl lego::ai::AITask_Game_PTL_GotoOrRMGoto(LegoObject *liveObj,Point2I *blockPos,AITask *opt_referrerTask);
void __cdecl lego::ai::AITask_QueueDepositInObject(LegoObject *liveObj,LegoObject *targetObj);
void __cdecl lego::ai::AITask_PushFollowObject_Group(LegoObject **unitList,uint unitCount,LegoObject *targetObj);
void __cdecl lego::ai::AITask_Game_PTL_FollowAttack(LegoObject *liveObj,LegoObject *targetObj);
void __cdecl lego::ai::AITask_Construction_FUN_00403630(uint constructHandle,BOOL checkObjType,LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::ai::AITask_DoRequest_ObjectType(LegoObject_Type objType,LegoObject_ID objID,uint objLevel,Point2I *blockPos,uint param_5,Point2F *pointFloat,BOOL param_7);
void __cdecl lego::ai::AITask_PlaceRequestObject(Point2I *blockPos,LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
AITask * __cdecl lego::ai::AITask_DoDeposit_ObjectType(LegoObject *liveObj,LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
void __cdecl lego::ai::AITask_DoRequestObjectCallbacks(LegoObject *liveObj);
void __cdecl lego::ai::AITask_LiveObject_FUN_004038d0(LegoObject *liveObj);
void __cdecl lego::ai::AITask_DoGotoEat(LegoObject *liveObj);
BOOL __cdecl lego::ai::AITask_LiveObject_FUN_00403940(LegoObject *liveObj);
BOOL __cdecl lego::ai::AITask_Callback_FUN_00403960(AITask *aiTask,LegoObject *liveObj);
void __cdecl lego::ai::AITask_RemoveTargetObjectReferences(LegoObject *targetObj);
BOOL __cdecl lego::ai::AITask_Callback_RemoveTargetObjectReference(AITask *aiTask,LegoObject *targetObj);
void __cdecl lego::ai::AITask_Route_End(LegoObject *liveObj,BOOL completed);
void __cdecl lego::ai::AITask_LiveObject_FUN_00403a70(LegoObject *liveObj);
void __cdecl lego::ai::AITask_VariousGatherTasks_FUN_00403a90(LegoObject *liveObj);
void __cdecl lego::ai::AITask_LiveObject_FUN_00403b30(LegoObject *holderObj,AITask_Type taskType,LegoObject *carriedObj);
void __cdecl lego::ai::AITask_LiveObject_SetAITaskUnk(LegoObject *liveObj,AITask_Type taskType,LegoObject *liveObj2,BOOL param_4);
BOOL __cdecl lego::ai::AITask_RemoveCollectReferences(LegoObject *targetObj);
BOOL __cdecl lego::ai::AITask_Callback_RemoveCollectReference(AITask *aiTask,LegoObject *targetObj);
void __cdecl lego::ai::AITask_DoAnimationWait(LegoObject *liveObj);
void __cdecl lego::ai::AITask_LiveObject_Unk_UpdateAITask_AnimationWait(LegoObject *liveObj);
int __cdecl lego::ai::AITask_QSortCompare(AITask **task_a,AITask **task_b);
AITask * __cdecl lego::ai::AITask_InitTask_1(AITask *aiTask,AI_Priority priorityType);
void __cdecl lego::ai::AITask_Init_2_NoPriority(AITask *aiTask);
void __cdecl lego::ai::AITask_Game_UnkLiveObjectHandleDynamite(LegoObject *liveObj);
void __cdecl lego::ai::AITask_ReevaluateObjectTasks(LegoObject *liveObj);
AITask * __cdecl lego::ai::AITask_GetObjectTaskListTail(LegoObject *liveObj);
BOOL __cdecl lego::ai::AITask_LiveObject_IsCurrentTaskType(LegoObject *liveObj,AITask_Type taskType);
void __cdecl lego::ai::AITask_LiveObject_FUN_00404110(LegoObject *liveObj);
BOOL __cdecl lego::ai::AITask_Callback_UpdateTask(AITask *aiTask,float *pElapsedGame);
BOOL __cdecl lego::ai::AITask_Callback_UpdateObject(LegoObject *liveObj,float *pElapsedGame);
BOOL __cdecl lego::ai::AITask_LiveObject_FUN_00404d30(LegoObject *in_liveObj,Point2I *blockPos2,float *param_3);
BOOL __cdecl lego::ai::AITask_LiveObject_FUN_00404e00(LegoObject *liveObj);
BOOL __cdecl lego::ai::AITask_FUN_00404e40(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
BOOL __cdecl lego::ai::AITask_Callback_FUN_00404e80(AITask *aiTask,int *param_2);
BOOL __cdecl lego::ai::AITask_FUN_00404ef0(AITask *aiTask,LegoObject *liveObj_2,float *param_3,float *param_4,undefined4 *param_5,int param_6,int param_7);
void __cdecl lego::ai::AITask_FUN_00405880(void);
void __cdecl lego::ai::AITask_FUN_00405b40(void);
void __cdecl lego::ai::AITask_FUN_00406290(AITask *aiTask1,AITask *aiTask2,LegoObject *liveObj);
void __cdecl lego::ai::AITask_RemoveAssignedToObjectReferences(LegoObject *assignedToObj);
AITask * __cdecl lego::ai::AITask_Clone(AITask *aiTask);
AITask * __cdecl lego::ai::AITask_Create(AITask_Type taskType);
void __cdecl lego::ai::AITask_Remove(AITask *aiTask,BOOL levelCleanup);
void __cdecl lego::ai::AITask_AddList(void);
BOOL __cdecl lego::ai::AITask_RunThroughLists(AITask_RunThroughListsCallback callback,void *data);
IDirectDraw4 * __cdecl lego::ddraw::DirectDraw(void);
IDirectDrawSurface4 * __cdecl lego::ddraw::DirectDraw_bSurf(void);
void __cdecl lego::math::BezierCurve_Curve(Point2F *out_r,Point2F *p0,Point2F *p1,Point2F *p2,Point2F *p3,float t);
float10 __cdecl lego::math::BezierCurve_Vector2DDistance(Point2F *a,Point2F *b);
Point2F * __cdecl lego::math::BezierCurve_Vector2DChangeLength(Point2F *ref_r,float newLength);
float10 __cdecl lego::math::BezierCurve_UpdateDistances(BezierCurve *curve);
void __cdecl lego::math::BezierCurve_BuildPoints(BezierCurve *curve,Point2F *p0,Point2F *p1,Point2F *p2,Point2F *p3,uint count);
uint __cdecl lego::math::BezierCurve_Interpolate(BezierCurve *curve,float currentDist,Point2F *out_r);
BOOL __cdecl lego::gfx::Creature_IsCameraFlipDir(CreatureModel *creature);
BOOL __cdecl lego::gfx::Creature_Load(CreatureModel *creature,LegoObject_ID objID,Container *root,char *filename,char *gameName);
void __cdecl lego::gfx::Creature_SwapPolyMedium(CreatureModel *creature,BOOL swap);
void __cdecl lego::gfx::Creature_SwapPolyHigh(CreatureModel *creature,BOOL swap);
void __cdecl lego::gfx::Creature_SwapPolyFP(CreatureModel *creature,BOOL swap,uint cameraNo);
void __cdecl lego::gfx::Object_Hide(BasicObjectModel *basicObjData,BOOL hide);
void __cdecl lego::gfx::Creature_Clone(CreatureModel *srcCreature,CreatureModel *destCreature);
void __cdecl lego::gfx::Creature_SetAnimationTime(CreatureModel *creature,float time);
float10 __cdecl lego::gfx::Creature_MoveAnimation(CreatureModel *creature,float elapsed,uint repeatCount);
float10 __cdecl lego::gfx::Creature_GetAnimationTime(CreatureModel *creature);
void __cdecl lego::gfx::Creature_SetOrientation(CreatureModel *creature,float xDir,float yDir);
void __cdecl lego::gfx::Creature_SetPosition(CreatureModel *creature,float xPos,float yPos,GetWorldZCallback zCallback,Map3D *map);
Container * __cdecl lego::gfx::Object_GetActivityContainer(BasicObjectModel *basicObjData);
BOOL __cdecl lego::gfx::Creature_SetActivity(CreatureModel *creature,char *activityName,float elapsed);
void __cdecl lego::gfx::Creature_Remove(CreatureModel *creature);
Container * __cdecl lego::gfx::Object_FindNull(BasicObjectModel *basicObjData,char *name,uint frameNo);
Container * __cdecl lego::gfx::Creature_GetCameraNull(CreatureModel *creature,int cameraIndex);
Container * __cdecl lego::gfx::Creature_GetDrillNull(CreatureModel *creature);
Container * __cdecl lego::gfx::Creature_GetCarryNull(CreatureModel *creature);
Container * __cdecl lego::gfx::Creature_GetDepositNull(CreatureModel *creature);
BOOL __cdecl lego::gfx::Creature_CheckThrowNull(CreatureModel *creature);
float10 __cdecl lego::gfx::Creature_GetTransCoef(CreatureModel *creature);
void __cdecl lego::front::Bubble_Initialise(void);
void __cdecl lego::front::Bubble_LoadBubbles(Config *config);
Bubble_Type __cdecl lego::front::Bubble_GetBubbleType(char *bubbleName);
void __cdecl lego::front::Bubble_ToggleObjectUIsAlwaysVisible(void);
BOOL __cdecl lego::front::Bubble_GetObjectUIsAlwaysVisible(void);
void __cdecl lego::front::Bubble_ResetObjectBubbleImage(LegoObject *liveObj);
void __cdecl lego::front::Bubble_RemoveObjectReferences(LegoObject *liveObj);
void __cdecl lego::front::Bubble_ShowPowerOff(LegoObject *liveObj);
void __cdecl lego::front::Bubble_ShowBubble(LegoObject *liveObj);
void __cdecl lego::front::Bubble_ShowCallToArms(LegoObject *liveObj);
void __cdecl lego::front::Bubble_SetCallToArmsTimer(LegoObject *liveObj,float timer);
void __cdecl lego::front::Bubble_ShowHealthBar(LegoObject *liveObj);
void __cdecl lego::front::Bubble_DrawAllObjInfos(float elapsedAbs);
void __cdecl lego::front::Bubble_UpdateAndGetBubbleImage(LegoObject *liveObj,float elapsedAbs,Image **out_bubbleImage,Point2F *out_screenPt);
BOOL __cdecl lego::front::Bubble_Callback_DrawObjInfo(LegoObject *liveObj,float *pElapsedAbs);
void __cdecl lego::front::Bubble_EvaluateObjectBubbleImage(LegoObject *liveObj,Image **out_bubbleImage);
BOOL __cdecl lego::gfx::Building_Load(BuildingModel *building,LegoObject_ID objID,Container *root,char *filename,char *gameName);
void __cdecl lego::gfx::Building_ChangePowerLevel(BuildingModel *building,BOOL increment);
Point2I * __cdecl lego::gfx::Building_GetShapePoints(BuildingModel *building,uint *optout_shapeCount);
void __cdecl lego::gfx::Object_SetOwnerObject(BasicObjectModel *basicObjData,LegoObject *liveObj);
void __cdecl lego::gfx::Building_SetUpgradeActivity(BuildingModel *building,char *activityName);
BOOL __cdecl lego::gfx::Building_SetActivity(BuildingModel *building,char *activityName,float elapsed);
Container * __cdecl lego::gfx::Building_GetCameraNull(BuildingModel *building,uint frameNo);
void __cdecl lego::gfx::Building_Clone(BuildingModel *srcBuilding,BuildingModel *destBuilding);
void __cdecl lego::gfx::Building_Hide(BuildingModel *building,BOOL hide);
BOOL __cdecl lego::gfx::Object_IsHidden(BasicObjectModel *basicObjData);
void __cdecl lego::gfx::Building_SetOrientation(BuildingModel *building,float xDir,float yDir);
void __cdecl lego::gfx::Building_SetPosition(BuildingModel *building,float xPos,float yPos,GetWorldZCallback zCallback,Map3D *map);
Container * __cdecl lego::gfx::Building_GetCarryNull(BuildingModel *building,uint frameNo);
Container * __cdecl lego::gfx::Building_GetDepositNull(BuildingModel *building);
Container * __cdecl lego::gfx::Building_GetEntranceNull(BuildingModel *building);
Container * __cdecl lego::gfx::Building_GetToolNull(BuildingModel *building,uint frameNo);
uint __cdecl lego::gfx::Building_GetCarryNullFrames(BuildingModel *building);
float10 __cdecl lego::gfx::Building_MoveAnimation(BuildingModel *building,float elapsed,uint repeatCount);
float10 __cdecl lego::gfx::Building_GetTransCoef(BuildingModel *building);
void __cdecl lego::gfx::Building_Remove(BuildingModel *building);
BOOL __cdecl lego::gfx::Building_CanUpgradeType(BuildingModel *building,LegoObject_UpgradeType upgradeType,BOOL current);
void __cdecl lego::gfx::Building_SetUpgradeLevel(BuildingModel *building,uint objLevel);
float10 __cdecl lego::math::Collision_DistanceToLine(Point2F *point,Point2F *start,Point2F *end);
float10 __cdecl lego::math::Collision_DistanceToPolyOutline(Point2F *point,Point2F *fromList,Point2F *toList,uint count);
Point2F * __cdecl lego::math::Collision_PointOnLine(Point2F *start,Point2F *end,Point2F *point,Point2F *result);
Point2F * __cdecl lego::math::Collision_PointOnLineRay(Point2F *start,Point2F *ray,Point2F *point,Point2F *result);
uint __cdecl lego::game::Construction_GetBuildingBase(char *baseName);
void __cdecl lego::game::Construction_Zone_PlaceResource(uint constructHandle,LegoObject *placedObj);
BOOL __cdecl lego::game::Construction_Zone_NeedsMoreOfResource(uint constructHandle,LegoObject_Type objType,LegoObject_ID objID);
uint __cdecl lego::game::Construction_Zone_CountOfResourcePlaced(Construction_Zone *construct,LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::game::Construction_Zone_RequestResource(Point2I *originBlockPos,LegoObject_Type objType,LegoObject_ID objID,uint objLevel,uint count);
void __cdecl lego::game::Construction_Zone_RequestBarriers(Point2I *originBlockPos,Point2I *shapeBlocks,uint shapeCount);
BOOL __cdecl lego::game::Construction_Zone_ExistsAtBlock(Point2I *originBlockPos);
Construction_Zone * __cdecl lego::game::Construction_Zone_FindByHandleOrAtBlock(Point2I *optor_originBlockPos,uint *optor_constructHandle);
void __cdecl lego::game::Construction_Zone_CompletePath(Point2I *originBlockPos);
void __cdecl lego::game::Construction_Zone_CancelPath(Point2I *originBlockPos);
void __cdecl lego::game::Construction_UpdateAll(float elapsedGame);
BOOL __cdecl lego::game::Construction_Zone_NoForeignObjectsInside(Construction_Zone *construction);
BOOL __cdecl lego::game::Construction_Zone_ObjectCallback_IsForeignObjectInside(LegoObject *liveObj,Construction_Zone *data);
BOOL __cdecl lego::game::Construction_Zone_StartPath(Point2I *originBlockPos);
Construction_Zone * __cdecl lego::game::Construction_Zone_Create(Point2I *originBlockPos);
void __cdecl lego::game::Construction_PowerGrid_PowerAdjacentBlocks(Point2I *blockPos);
BOOL __cdecl lego::game::Construction_PowerGrid_DrainAdjacentBlocks(Point2I *blockPos,int crystalDrainedAmount);
BOOL __cdecl lego::game::Construction_PowerGrid_DrainAdjacentBlocks_Recurse(Point2I *blockPos,int crystalDrainedAmount);
void __cdecl lego::game::Construction_Zone_RequestPathResources(Construction_Zone *construct);
void __cdecl lego::game::Construction_Zone_CancelBuilding(Point2I *originBlockPos);
uint __cdecl lego::game::Construction_Zone_StartBuilding(LegoObject_ID buildingObjID,Point2I *originBlockPos,Direction direction,Point2I *shapeBlocks,uint count);
void __cdecl lego::game::Construction_FlattenGround(Point2I *blockPos);
void __cdecl lego::game::Construction_RemoveAll(void);
void __cdecl lego::game::Construction_Zone_Free(Construction_Zone *construct);
void __cdecl lego::game::Construction_Zone_ConsumePlacedResources(Construction_Zone *construct);
LegoObject * __cdecl lego::game::Construction_SpawnBuilding(LegoObject_ID objID,Point2I *originBlockPos,Direction direction,Point2I *shapeBlocks,uint shapeCount,BOOL teleportDown);
LegoObject * __cdecl lego::game::Construction_Zone_CompleteBuilding(Construction_Zone *construct,BOOL teleportDown);
void __cdecl lego::game::Construction_DeselectAdjacentDig(Point2I *blockPos);
void __cdecl lego::game::Construction_DisableCryOreDrop(BOOL disabled);
void __cdecl lego::game::Construction_CleanupBuildingFoundation(LegoObject *liveObj);
void __cdecl lego::game::Construction_GenerateCryOreDrop(LegoObject *liveObj);
void __cdecl lego::game::Construction_RemoveBuildingObject(LegoObject *liveObj);
void __cdecl lego::front::Credits_Play(char *textFile,Font *font,char *aviFile);
void __cdecl lego::effect::DamageFont_Cleanup(void);
void __cdecl lego::effect::DamageFont_LoadFrames(char *dirName,char *fileBaseName);
void __cdecl lego::effect::DamageFont_DisplayDamage_OverLiveObject(LegoObject *liveObj,uint displayNumber);
DamageFontData * __cdecl lego::effect::DamageFont_GetNextFree(void);
void __cdecl lego::effect::DamageFont_SetDisplayNumber(DamageFontData *healthFont,uint displayNumber);
void __cdecl lego::effect::DamageFont_MeshRenderCallback(Mesh *mesh,DamageFontData *healthFont,Viewport *view);
void __cdecl lego::effect::DamageFont_UpdateAll(float elapsedAbs);
void __cdecl lego::effect::DamageFont_UpdateSingle(DamageFontData *healthFont,float elapsedAbs);
BOOL __cdecl lego::front::DamageFont_LiveObject_CheckCanShowDamage_Unk(LegoObject *liveObj);
void __cdecl lego::debug::Dependencies_SetEnabled(BOOL on);
void __cdecl lego::game::Dependencies_Reset_ClearAllLevelFlags_10c(void);
void __cdecl lego::game::Dependencies_Initialise(Config *config,char *gameName);
BOOL __cdecl lego::game::Dependencies_Object_FUN_0040add0(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
BOOL __cdecl lego::game::Dependencies_LiveObject_CallbackCheck_FUN_0040ae70(LegoObject *liveObj,LegoObject *otherObj);
void __cdecl lego::game::Dependencies_Object_GetRequirements(LegoObject_Type objType,LegoObject_ID objID,uint objLevel,DependencyRequirement **out_requirements,uint *out_count);
void __cdecl lego::game::Dependencies_Object_Unlock(LegoObject_Type objType,LegoObject_ID objID,uint objLevel,DependencyUnlocks *unlocks);
void __cdecl lego::game::Dependencies_Prepare_Unk(void);
BOOL __cdecl lego::game::Dependencies_Object_IsLevelFlag4(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
void __cdecl lego::game::Dependencies_Object_AddLevelFlag_100(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
BOOL __cdecl lego::game::Dependencies_Object_GetLevelFlag_100(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
Detail_TextureSet * __cdecl lego::map::Detail_LoadTextureSet(char *textureBaseName,uint width,uint height);
void __cdecl lego::map::Detail_FreeTextureSet(Detail_TextureSet *textureSet);
float10 __cdecl lego::map::Detail_FUN_0040b3a0(Vector3F *vertPoses,Viewport *view,Point2F *viewportSize,BOOL param_4);
Detail_Mesh * __cdecl lego::map::Detail_LoadMeshes(Container *cont,char *meshName_a,char *meshName_b,float blockSize,Detail_TextureSet *textureSet);
void __cdecl lego::map::Detail_FreeMesh(Detail_Mesh *detailMesh);
void __cdecl lego::map::Detail_RemoveMesh_FUN_0040b740(Detail_Mesh *detailMesh);
Container_Texture * __cdecl lego::map::Detail_GetTexture(Detail_TextureSet *textureSet,SurfaceTexture coord_4X_0Y);
void __cdecl lego::map::Detail_FUN_0040b7b0(Detail_Mesh *detailMesh,Vector3F *vectPoses4,SurfaceTexture texture,byte direction,float scaleZ,float brightness);
void __cdecl lego::map::Detail_Sub1_Transform(Container *cont,float blockSize,Vector3F *p1,Vector3F *p2,Vector3F *p3,float scaleZ,float brightness,Container_Texture *contTexture,Detail_TransformFlags transformFlags);
void __cdecl lego::map::Detail_Sub2_FUN_0040bac0(Container *cont,float blockSize,Vector3F *p1,Vector3F *p2,Vector3F *p3);
void __cdecl lego::math::Detail_Matrix_FUN_0040bc90(Matrix4F *out_m,float blockWidth,float blockHeight,float invxP2_y,float invxP3_x,float invxP3_y);
void __cdecl lego::effect::Effect_StopAll(void);
void __cdecl lego::effect::Effect_Spawn_BoulderExplode_AtObjectOther(LegoObject *liveObj);
void __cdecl lego::effect::Effect_Spawn_BoulderExplode(Vector3F *position);
void __cdecl lego::effect::Effect_Spawn_SmashPath(LegoObject *optor_liveObj,Vector3F *optor_position);
BOOL __cdecl lego::effect::Effect_GetRockFallStyle(char *name,uint *out_index);
void __cdecl lego::effect::Effect_SetRockFallStyle(int rockFallStyleIndex);
void __cdecl lego::effect::Effect_Load_RockFallStylesAll(Config *config,char *gameName,Container *root);
BOOL __cdecl lego::effect::Effect_Load_RockFallStyle(Container *root,char *filename,int rockFallStyle,int rockFallType,char *itemName);
BOOL __cdecl lego::effect::Effect_Load_ElectricFenceBeam(Container *root,char *filename,BOOL longBeam);
BOOL __cdecl lego::effect::Effect_Spawn_RockFall(RockFallType rockFallType,int bx,int by,float x,float y,float z,float dirX,float dirY);
BOOL __cdecl lego::effect::Effect_ElectricFenceBeam_Spawn(BOOL longBeam,float xPos,float yPos,float zPos,float xDir,float yDir,float zDir);
uint __cdecl lego::effect::Effect_UpdateAll(float elapsedGame,uint **out_rockFallTypes,uint **out_rockFallSubtypes);
void __cdecl lego::effect::Effect_Update_BoulderExplode(float elapsedGame);
void __cdecl lego::effect::Effect_Update_SmashPath(float elapsedGame);
void __cdecl lego::effect::Effect_GetBlockPos_RockFall(RockFallType rockFallType,int index,uint *out_bx,uint *out_by);
Container * __cdecl lego::effect::Effect_Unk_RockFall_FUN_0040c4e0(uint bx,uint by);
void __cdecl lego::effect::Effect_RemoveAll_BoulderExplode(void);
void __cdecl lego::effect::Effect_RemoveAll_RockFall(void);
void __cdecl lego::effect::Effect_Load_Explosion(Container *root,char *filename);
void __cdecl lego::effect::Effect_Spawn_Explosion(LegoObject *optor_liveObj,Point2F *optor_position);
void __cdecl lego::effect::Effect_Update_Explosion(float elapsedGame);
EffectMisc * __cdecl lego::effect::Effect_GetMiscEffectData(MiscEffectType miscEffectType);
BOOL __cdecl lego::effect::Effect_Load_Misc(EffectMisc *effectMisc,Container *root,char *filename);
void __cdecl lego::effect::Effect_Initialise(Config *config,char *gameName,Container *root);
void __cdecl lego::effect::Effect_Update_MiscEffect(EffectMisc *miscEffect,float elapsedGame);
void __cdecl lego::effect::Effect_Update_MiscEffectsAll(float elapsedGame);
BOOL __cdecl lego::effect::Effect_Spawn_Particle(MiscEffectType miscEffectType,Vector3F *position,Vector3F *opt_dir);
void __cdecl lego::game::ElectricFence_Initialise(Lego_Level *level);
void __cdecl lego::game::ElectricFence_Shutdown(void);
void __cdecl lego::game::ElectricFence_Restart(Lego_Level *level);
void __cdecl lego::game::ElectricFence_UpdateBlockConnections(int bx,int by);
ElectricFence_Block * __cdecl lego::game::ElectricFence_CreateFence(LegoObject *liveObj);
ElectricFence_Block * __cdecl lego::game::ElectricFence_Create(LegoObject *liveObj,int bx,int by);
void __cdecl lego::game::ElectricFence_AddList(void);
void __cdecl lego::game::ElectricFence_RemoveFence(LegoObject *liveObj);
void __cdecl lego::game::ElectricFence_Remove(ElectricFence_Block *efence,int bx,int by);
BOOL __cdecl lego::game::ElectricFence_Debug_PlaceFence(int bx,int by);
BOOL __cdecl lego::game::ElectricFence_Debug_RemoveFence(int bx,int by);
BOOL __cdecl lego::game::ElectricFence_CanPlaceFenceAtBlock(int bx,int by);
BOOL __cdecl lego::game::ElectricFence_CheckBuildingAtBlock(Lego_Level *level,int bx,int by,BOOL checkPowered);
void __cdecl lego::game::ElectricFence_UpdateAll(float elapsedGame);
void __cdecl lego::game::ElectricFence_RunThroughLists(ElectricFence_RunThroughListsCallback callback,void *data);
BOOL __cdecl lego::game::ElectricFence_FUN_0040d420(LegoObject *liveObj,uint bx,uint by);
BOOL __cdecl lego::game::ElectricFence_Callback_FUN_0040d510(LegoObject *liveObj,float *pElapsedGame);
BOOL __cdecl lego::game::ElectricFence_LiveObject_Callback_FUN_0040d650(LegoObject *liveObj,void *data);
void __cdecl lego::game::ElectricFence_CallbackUpdate(ElectricFence_Block *efence,float *pElapsedGame);
void __cdecl lego::game::ElectricFence_Block_FUN_0040d780(uint bx,uint by,BOOL param_3,float param_4);
BOOL __cdecl lego::game::ElectricFence_Block_UnkAreaDistanceBetweenBlocks(uint bxFrom,uint byFrom,uint bxTo,uint byTo);
Vector3F * __cdecl lego::game::ElectricFence_Block_GetDistanceBetweenBlocks(uint bxFrom,uint byFrom,uint bxTo,uint byTo,Vector3F *out_vector);
BOOL __cdecl lego::game::ElectricFence_TrySparkObject(LegoObject *liveObj);
void __cdecl lego::game::ElectricFence_SparkObjectAndCreateBeam(LegoObject *liveObj,Point2F *objWorldPos,uint bx,uint by);
BOOL __cdecl lego::game::ElectricFence_Block_FUN_0040e110(Lego_Level *level,uint bx,uint by);
void __cdecl lego::game::ElectricFence_Block_ElecFenceStud_FUN_0040e280(Lego_Level *level,uint bx,uint by,BOOL addNew);
BOOL __cdecl lego::game::ElectricFence_Block_IsFence(int bx,int by);
void __cdecl lego::front::Encyclopedia_Initialise(Config *config,char *gameName);
void __cdecl lego::front::Encyclopedia_SelectObject(LegoObject *liveObj);
void __cdecl lego::front::Encyclopedia_ClearSelection(void);
void __cdecl lego::front::Encyclopedia_Update(float elapsedAbs);
void __cdecl lego::front::Encyclopedia_DrawSelectBox(Viewport *viewMain);
void __cdecl lego::front::Encyclopedia_RemoveCurrentReference(LegoObject *liveObj);
void __cdecl lego::game::Erode_Initialise(float triggerTime,float erodeTime,float lockTime);
BOOL __cdecl lego::game::Erode_GetFreeActiveIndex(int *out_index);
float10 __cdecl lego::game::Erode_GetBlockErodeRate(Point2I *blockPos);
void __cdecl lego::game::Erode_AddActiveBlock(Point2I *blockPos,int unkModulusNum);
void __cdecl lego::game::Erode_Update(float elapsedGame);
void __cdecl lego::game::Erode_AddLockedBlock(Point2I *blockPos);
void __cdecl lego::game::Erode_Block_FUN_0040ed80(Point2I *blockPos,BOOL doState2_else_add3);
BOOL __cdecl lego::game::Erode_IsBlockLocked(Point2I *blockPos);
BOOL __cdecl lego::game::Erode_FindAdjacentBlockPos(Point2I *blockPos,Point2I *out_adjacentblockPos);
void __cdecl lego::game::Fallin_Update(float elapsedGame);
BOOL __cdecl lego::game::Fallin_Block_FUN_0040f0c0(Point2I *blockPos,BOOL allowCaveIn);
BOOL __cdecl lego::game::Fallin_Block_UpdateFallinsUnk1(Point2I *blockPos);
void __cdecl lego::game::Fallin_Block_FUN_0040f260(Point2I *blockPos,DirectionFlags fallinDirs,BOOL allowCaveIn);
void __cdecl lego::game::Fallin_Initialise(int numLandSlidesTillCaveIn);
void __cdecl lego::game::Fallin_LandSlideDoCaveIn(Point2I *blockPos,DirectionFlags fallinDirs);
FlocksItem * __cdecl lego::game::Flocks_LiveObject_Flocks_CreateSubdata(Vector3F *vector_1,Vector3F *vector_2,float turn,float speed,float tightness,float goalUpdate,Container *cont);
void __cdecl lego::util::freeNonNull(void *ptr);
Flocks * __cdecl lego::game::Flocks_LiveObject_Flocks_CreateData(Vector3F *vector_1,Vector3F *vector_2,float turn,float speed,float tightness,Container *cont);
void __cdecl lego::game::Flocks_FreeData(Flocks *flocksData);
void __cdecl lego::game::Flocks_Subdata_MathChangeRotationX(FlocksItem *flockSubdata,Vector3F *vector);
void __cdecl lego::game::Flocks_Subdata_MathChangeRotationsYZ(FlocksItem *subdata,Vector3F *ref_vector);
void __cdecl lego::game::Flocks_Subdata_Matrix_MultRotXYZ(FlocksItem *subdata);
void __cdecl lego::game::Flocks_Callback_SubdataMoveAndTurn(Flocks *unused_flocksData,FlocksItem *subdata,float *pElapsed);
void __cdecl lego::math::Flocks_MathX_Vector3DRandomMultiply(Vector3F *out_vector,float x,float y,float z);
void __cdecl lego::game::Flocks_Callback_SubdataMoveTightness(Flocks *flocksData,FlocksItem *subData,float *pElapsed);
void __cdecl lego::game::Flocks_SetVector2(Flocks *flocksData,Vector3F *vector2);
void __cdecl lego::game::Flocks_Subdata_MoveAndTurn(FlocksItem *subdata,float elapsed);
void __cdecl lego::game::Flocks_Subdata_UpdateMove(Flocks *flocksData,float elapsed);
void __cdecl lego::game::Flocks_LiveObject_Flocks_AddSubdata(Flocks *flockData,FlocksItem *subdata);
FlocksItem * __cdecl lego::game::Flocks_Free_SubdataRecurse(Flocks *flocksData);
void __cdecl lego::game::Flocks_CallbackForAllSubdata(Flocks *flockData,FlocksCallback callback,void *data);
float10 __cdecl lego::math::Flocks_MathX_RandRangeOne(void);
void __cdecl lego::game::Flocks_Callback_FUN_0040fe00(Flocks *flocksData,FlocksItem *subdata,float *param_3);
void __cdecl lego::game::Flocks_FUN_0040fe80(Flocks *flocksData,float randomness);
void __cdecl lego::game::Flocks_SetParameters1(Flocks *flocksData,float turn,float speed,float tightness);
void __cdecl lego::game::Flocks_Callback_SetSubdataParametersFromGlobals(Flocks *flocksData,FlocksItem *subdata);
void __cdecl lego::game::Flocks_SetGlobal_AndAllSubdataParameters(Flocks *flockData,float turn,float speed,float tightness,float goalUpdate);
void __cdecl lego::game::Flocks_SetVector1(Flocks *flocksData,Vector3F *vector1);
void __cdecl lego::game::Flocks_Callback_SetSubdataVectorC(Flocks *flocksData,FlocksItem *subdata,Vector3F *vector);
void __cdecl lego::game::Flocks_SetAllSubdataVectorC(Flocks *flocksData,Vector3F *vector);
void __cdecl lego::game::Flocks_Callback_SetSubdataVector0(Flocks *flocksData,FlocksItem *subdata,Vector3F *vector);
void __cdecl lego::game::Flocks_SetAllSubdataVector0(Flocks *flocksData,Vector3F *vector);
void __cdecl lego::game::Flocks_Callback_FUN_00410000(Flocks *flocksData,FlocksItem *subdata,float *pElapsed);
void __cdecl lego::game::Flocks_Callback_CompareVecs_0_c(Flocks *flocksData,FlocksItem *subdata,BOOL *pSuccess);
BOOL __cdecl lego::game::Flocks_CompareAllVecs_0_c(Flocks *flocksData);
char * __cdecl lego::front::Front_Util_ReplaceTextSpaces(char *str);
void __cdecl lego::front::Front_LevelSelect_LevelNamePrintF(Font *font,int x,int y,char *msg,...);
void __cdecl lego::front::Front_Callback_TriggerPlayCredits(void);
void __cdecl lego::front::Front_RockWipe_Play(void);
void __cdecl lego::front::Front_RockWipe_Stop(void);
Front_Cache * __cdecl lego::front::Front_Cache_FindByName(char *filename);
Front_Cache * __cdecl lego::front::Front_Cache_Create(char *filename);
Image * __cdecl lego::front::Front_Cache_LoadImage(char *filename);
Font * __cdecl lego::front::Front_Cache_LoadFont(char *filename);
char * __cdecl lego::front::Front_Util_StrCpy(char *str);
MenuItem_SelectData * __cdecl lego::front::Front_MenuItem_CreateSelect(int *valuePtr,char *string1,char *string2,int x2,int y2,int selItemHeight,int scrollCount,int xString1,int yString1,int xString2,int yString2,int field50,MenuItem_SelectCallback callback,Menu *opt_nextMenu);
void __cdecl lego::front::Front_MenuItem_FreeSelect(MenuItem_SelectData *selectData);
void __cdecl lego::front::Front_MenuItem_AddSelectItem(MenuItem_SelectData *selectData,char *bannerOrBMPName,BOOL enabled,Font *hiFont,int frontEndX,int frontEndY,BOOL frontEndOpen);
MenuItem_CycleData * __cdecl lego::front::Front_MenuItem_CreateCycle(uint count,int *valuePtr,int x2,int y2,MenuItem_CycleCallback callback);
void __cdecl lego::front::Front_MenuItem_AddCycleName(MenuItem_CycleData *cycleData,char *name);
void __cdecl lego::front::Front_MenuItem_FreeCycle(MenuItem_CycleData *cycleData);
int __cdecl lego::input::msx(void);
int __cdecl lego::input::msy(void);
BOOL __cdecl lego::input::mslb(void);
MenuItem_TriggerData * __cdecl lego::front::Front_MenuItem_CreateTrigger(int *valuePtr,BOOL end,MenuItem_TriggerCallback callback);
MenuItem_RealSliderData * __cdecl lego::front::Front_MenuItem_CreateRealSlider(float *valuePtr,float valueMin,float valueMax,float step,int x2,int y2,MenuItem_RealSliderCallback callback);
MenuItem_SliderData * __cdecl lego::front::Front_MenuItem_CreateSlider(int *valuePtr,int valueMin,int valueMax,int x2,int y2,MenuItem_SliderCallback callback,Image *offBarImage,Image *onBarImage,Image *leftCapImage,Image *rightCapImage,Image *loPlusImage,Image *loMinusImage,Image *hiPlusImage,Image *hiMinusImage);
void __cdecl lego::front::Front_MenuItem_FreeMenuItem(MenuItem *menuItem);
MenuItem * __cdecl lego::front::Front_MenuItem_CreateBannerItem(char *banner,Font *loFont,Font *hiFont,int x1,int y1,MenuItem_Type itemType,BOOL centered,void *itemData,BOOL notInTuto);
MenuItem * __cdecl lego::front::Front_MenuItem_CreateImageItem(char *banner,Font *loFont,Font *hiFont,char *loImageName,char *hiImageName,int x1,int y1,MenuItem_Type itemType,BOOL centered,char *toolTipName,void *itemData);
void __cdecl lego::front::Front_Menu_FreeMenu(Menu *menu);
BOOL __cdecl lego::front::Front_Menu_LoadMenuImage(Menu *menu,char *filename,BOOL light);
Menu * __cdecl lego::front::Front_Menu_CreateMenu(char *title,char *fullName,Font *menuFont,int positionX,int positionY,BOOL autoCenter,BOOL displayTitle,int centerX,BOOL canScroll,char *anchored_str);
BOOL __cdecl lego::front::Front_Menu_AddMenuItem(Menu *menu,MenuItem *menuItem);
BOOL __cdecl lego::front::Front_Maths_IsPointInsideRect(int ptX,int ptY,int rcX,int rcY,int rcWidth,int rcHeight);
BOOL __cdecl lego::front::Front_Maths_IsPointInsideRectCentered(int ptX,int ptY,int rcX,int rcY,int rcWidth,int rcHeight,BOOL shouldCenterX);
int __cdecl lego::front::Front_MenuItem_Select_TestStringCollision(Menu *menu,MenuItem *menuItem,MenuItem_SelectData *selectData);
BOOL __cdecl lego::front::Front_Menu_IsLevelItemUnderMouse(Menu *menu,int itemIndex);
BOOL __cdecl lego::front::Front_Menu_GetItemBounds(Menu *menu,int itemIndex,int *out_rcX,int *out_rcY,int *out_rcWidth,int *out_rcHeight);
BOOL __cdecl lego::front::Front_Menu_FindItemUnderMouse(Menu *menu,int *out_itemIndex);
BOOL __cdecl lego::front::Front_GetMousePressedState(void);
BOOL __cdecl lego::front::Front_MenuItem_SliderHandleInput(Menu *menu,MenuItem *menuItem,MenuItem_SliderData *sliderData);
BOOL __cdecl lego::front::Front_MenuItem_CheckNotInTutoAnyTutorialFlags(MenuItem *menuItem);
Menu * __cdecl lego::front::Front_Menu_UpdateMenuItemsInput(float elapsed,Menu *menu);
uint __cdecl lego::front::Front_Input_GetKeyCharacter(Keys32 diKey);
void __cdecl lego::front::Front_MenuItem_DrawSlider(MenuItem_SliderData *sliderData,uint x,uint y,int valueIndex,uint valueRange);
uint __cdecl lego::front::Front_Menu_GetOverlayCount(Menu *menu);
BOOL __cdecl lego::front::Front_Menu_ShouldRandomPlay(void);
void __cdecl lego::front::Front_Menu_UpdateOverlays(Menu *menu);
void __cdecl lego::front::Front_MenuItem_DrawSelectItem(int x,int y,Font *font,MenuItem_SelectData *selectData,uint selIndex,MenuItem_SelectImageType imageType);
void __cdecl lego::front::Front_MenuItem_DrawSaveImage(Menu *menu,int selIndex,MenuItem_SelectData *selectData,BOOL bigSize);
void __cdecl lego::front::Front_Menu_DrawLoadSaveText(Menu **pMenu,Menu **ref_currMenu,Menu **ref_nextMenu);
void __cdecl lego::front::Front_MenuItem_DrawSelectTextWindow(Menu **pMenu);
void __cdecl lego::front::Front_Menu_DrawMenuImage(Menu *menu,BOOL light);
Menu * __cdecl lego::front::Front_Menu_Update(float elapsed,Menu *menu,BOOL *optout_menuTransition);
void __cdecl lego::front::Front_Menu_UpdateMousePosition(Menu *menu);
void __cdecl lego::front::Front_LoadSaveSlotImages(void);
void __cdecl lego::front::Front_FreeSaveSlotImages(void);
void __cdecl lego::front::Front_ScreenMenuLoop(Menu *menu);
void __cdecl lego::front::Front_RunScreenMenu(MenuSet *menuSet,uint menuIndex);
MenuItem_Type __cdecl lego::front::Front_MenuItem_ParseTypeString(char *itemTypeName);
char * __cdecl lego::front::Front_Util_StringReplaceChar(char *str,char origChar,char newChar);
MenuOverlay_Type __cdecl lego::front::Front_Menu_GetOverlayType(MenuOverlay *menuOverlay);
MenuOverlay * __cdecl lego::front::Front_Menu_CreateOverlay(char *filename,MenuOverlay **linkedOverlay,int positionX,int positionY,SFX_ID sfxType);
void __cdecl lego::front::Front_Menu_LoadSliderImages(int numParts,char **stringParts,Image **outImages);
MenuSet * __cdecl lego::front::Front_CreateMenuSet(uint menuCount);
MenuSet * __cdecl lego::front::Front_LoadMenuSet(Config *unused_config,char *menuName,void *dst,void *callback,...);
int __cdecl lego::front::Front_GetMenuIDByName(MenuSet *menuSet,char *name);
BOOL __cdecl lego::front::Front_IsIntrosEnabled(void);
void __cdecl lego::front::Front_Callback_SliderBrightness(int slider_0_10);
void __cdecl lego::front::Front_Callback_SliderSoundVolume(int slider_0_10);
void __cdecl lego::front::Front_Callback_SliderMusicVolume(int slider_0_10);
int __cdecl lego::front::Front_CalcSliderCDVolume(void);
void __cdecl lego::front::Front_Callback_CycleWallDetail(int cycle_High_Low);
void __cdecl lego::front::Front_Callback_CycleAutoGameSpeed(int cycle_On_Off);
void __cdecl lego::front::Front_Callback_CycleMusic(int cycle_On_Off);
void __cdecl lego::front::Front_Callback_CycleSound(int cycle_On_Off);
void __cdecl lego::front::Front_Callback_CycleHelpWindow(int cycle_Off_On);
void __cdecl lego::front::Front_Callback_TriggerReplayObjective(void);
void __cdecl lego::front::Front_Callback_SliderGameSpeed(int slider_0_5);
void __cdecl lego::front::Front_UpdateSliderGameSpeed(void);
int __cdecl lego::front::Front_CalcSliderGameSpeed(void);
void __cdecl lego::front::Front_Callback_SelectLoadSave(float elapsedAbs,int selectIndex);
void __cdecl lego::front::Front_UpdateOptionsSliders(void);
void __cdecl lego::front::Front_Callback_TriggerBackSave(void);
void __cdecl lego::front::Front_RestartLevel(void);
void __cdecl lego::front::Front_Save_GetLevelCompleteWithPoints(SaveData *saveData,char *out_buffer);
void __cdecl lego::front::Front_UpdateGameSpeedSliderLevel(void);
BOOL __cdecl lego::front::Front_Options_Update(float elapsed,Menu_ModalType modalType);
BOOL __cdecl lego::front::Front_LoadLevelSet(Config *config,LevelSet *levelSet,char *levelKey);
void __cdecl lego::front::Front_PlayMovie(Movie_t *mov,BOOL skippable);
void __cdecl lego::front::Front_PlayIntroSplash(char *imageKey,BOOL skippable,char *timeKey);
void __cdecl lego::front::Front_PlayIntroMovie(char *aviKey,BOOL skippable);
void __cdecl lego::game::Front_PlayLevelMovie(char *levelName,BOOL skippable);
void __cdecl lego::front::Front_LoadLevels(MenuSet *unused_mainMenuFull);
void __cdecl lego::save::Front_ResetSaveNumber(void);
void __cdecl lego::front::Front_LoadMenuTextWindow(Config *config,char *configPath,MenuTextWindow *menuWnd);
BOOL __cdecl lego::front::Front_LevelSelect_PlayLevelNameSFX(int levelNumber);
BOOL __cdecl lego::front::Front_LevelSelect_PlayTutoLevelNameSFX(int levelNumber);
void __cdecl lego::front::Front_Initialise(Config *config);
void __cdecl lego::front::Front_SaveOptionParameters(void);
void __cdecl lego::front::Front_LoadOptionParameters(BOOL loadOptions,BOOL resetFront);
void __cdecl lego::front::Front_PrepareScreenMenuType(Menu_ScreenType screenType);
void __cdecl lego::front::Front_RunScreenMenuType(Menu_ScreenType screenType);
BOOL __cdecl lego::front::Front_IsFrontEndEnabled(void);
BOOL __cdecl lego::front::Front_IsMissionSelected(void);
BOOL __cdecl lego::front::Front_IsTutorialSelected(void);
char * __cdecl lego::front::Front_GetSelectedLevel(void);
BOOL __cdecl lego::front::Front_IsTriggerAppQuit(void);
BOOL __cdecl lego::front::Front_IsTriggerMissionQuit(void);
BOOL __cdecl lego::front::Front_IsTriggerMissionRestart(void);
LevelSet * __cdecl lego::front::Front_Levels_GetTutoOrMissions(void);
int __cdecl lego::front::Front_LevelSet_IndexOf(LevelSet *levelSet,char *levelName);
void __cdecl lego::front::Front_Levels_ResetVisited(void);
void __cdecl lego::front::Front_LevelSet_SetLinkVisited(LevelSet *levelSet,char *levelName,BOOL visited);
BOOL __cdecl lego::front::Front_LevelSet_IsLinkVisited(LevelSet *levelSet,char *levelName);
void __cdecl lego::front::Front_LevelSet_SetLevelLink(LevelSet *levelSet,char *levelName,LevelLink *link);
LevelLink * __cdecl lego::front::Front_LevelSet_GetLevelLink(LevelSet *levelSet,char *levelName);
LevelLink * __cdecl lego::front::Front_LevelSet_LoadLevelLinks(LevelSet *levelSet,char *levelName);
BOOL __cdecl lego::front::Front_LevelLink_RunThroughLinks(LevelLink *startLink,LevelLink_RunThroughLinksCallback callback,void *data);
BOOL __cdecl lego::front::Front_LevelLink_Callback_IncCount(LevelLink *link,int *pCount);
BOOL __cdecl lego::front::Front_LevelLink_Callback_FindByLinkIndex(LevelLink *link,SearchLevelLinkFindIndex_10 *search);
LevelLink * __cdecl lego::front::Front_LevelLink_FindByLinkIndex(LevelLink *startLink,int linkIndex);
int __cdecl lego::front::Front_LevelLink_FindSetIndexOf(LevelLink *startLink,int linkIndex);
void __cdecl lego::front::Front_Levels_UpdateAvailable_Recursive(LevelLink *link,SearchLevelSelectInfo_14 *search,BOOL unlocked);
void __cdecl lego::front::Front_Levels_UpdateAvailable(LevelLink *startLink,SaveReward *opt_saveReward,LevelSet *levelSet,MenuItem_SelectData *selectData,BOOL keepLocked);
int __cdecl lego::front::Front_Save_GetLevelScore(uint index,SaveData *saveData);
void __cdecl lego::front::Front_Callback_SelectMissionItem(float elapsedAbs,int selectIndex);
void __cdecl lego::front::Front_Callback_SelectTutorialItem(float elapsedAbs,int selectIndex);
BOOL __cdecl lego::front::Front_LevelInfo_Callback_AddItem(LevelLink *link,SearchLevelSelectAdd *search);
void __cdecl lego::front::MainMenuFull_AddMissionsDisplay(int valueOffset,LevelLink *startLink,LevelSet *levelSet,Menu *menu,SaveData *saveData,Menu *opt_nextMenu,void *callback);
BOOL __cdecl lego::save::Front_Save_ReadSaveFile(uint saveIndex,SaveData *out_saveData,BOOL readOnly);
BOOL __cdecl lego::save::Front_Save_WriteSaveFiles(uint saveIndex,SaveData *opt_saveData);
void __cdecl lego::save::Front_Save_LoadAllSaveFiles(void);
SaveData * __cdecl lego::save::Front_Save_GetSaveDataAt(int saveIndex);
SaveData * __cdecl lego::save::Front_Save_GetCurrentSaveData(void);
int __cdecl lego::save::Front_Save_GetSaveNumber(void);
void __cdecl lego::save::Front_Save_SetSaveNumber(int saveNumber);
void __cdecl lego::front::Front_Save_SetLevelCompleted(uint levelIndex);
void __cdecl lego::front::Front_Save_SetSaveStruct18(SaveStruct_18 *savestruct18);
BOOL __cdecl lego::front::Front_Save_SetRewardLevel(int levelIndex,RewardLevel *rewardLevel);
RewardLevel * __cdecl lego::front::Front_Save_GetRewardLevel(int levelIndex);
BOOL __cdecl lego::front::Front_Save_WriteCurrentSaveFiles(void);
BOOL __cdecl lego::front::Front_Save_GetHasNoSaveData(void);
void __cdecl lego::front::Front_Save_SetHasNoSaveData(BOOL state);
void __cdecl lego::front::Front_Save_WriteEmptySaveFiles(void);
void __cdecl lego::save::Front_Save_CopySaveData(SaveData *out_saveData);
void __cdecl lego::front::Front_Save_SetSaveData(SaveData *saveData);
void __cdecl lego::front::Front_Save_SetShouldClearUnlockedLevels(BOOL state);
BOOL __cdecl lego::front::Front_Save_IsGame100Percented(void);
void __cdecl lego::front::HelpWindow_SetFont(Font *font);
void __cdecl lego::front::HelpWindow_ClearFlag1(void);
void __cdecl lego::front::HelpWindow_Initialise(Config *config,char *gameName);
void __cdecl lego::front::HelpWindow_LoadLevelsInfo(Config *config,char *gameName);
void __cdecl lego::front::HelpWindow_LoadButtons(Config *config,char *gameName);
void __cdecl lego::front::HelpWindow_IfFlag4_AndParam_Clear1_Set2_Else_Clear3(BOOL state);
void __cdecl lego::front::HelpWindow_RecallDependencies(LegoObject_Type objType,LegoObject_ID objID,uint objLevel,BOOL noHelpWindow);
void __cdecl lego::front::HelpWindow_Object_Unlock(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
void __cdecl lego::front::HelpWindow_Close_FUN_00418900(void);
void __cdecl lego::front::HelpWindow_FUN_00418930(void);
BOOL __cdecl lego::front::HelpWindow_FUN_00418cd0(uint mouseX,uint mouseY,BOOL leftButton,BOOL leftLast,BOOL leftReleased,float elapsed);
void __cdecl lego::front::HelpWindow_ToolTip_FUN_00418eb0(int param_1);
BOOL __cdecl lego::front::HelpWindow_FUN_00418ef0(int param_1,int param_2,int param_3);
void __cdecl lego::front::HelpWindow_FUN_00418f60(undefined4 param_1,float elapsed);
void __cdecl lego::front::HelpWindow_DrawButtons(void);
Image * __cdecl lego::front::HelpWindow_GetButtonImage(int buttonIndex);
BOOL __cdecl lego::front::HelpWindow_IsEnabled_AndFlags_3_AndNoTutorialFlags(void);
BOOL __cdecl lego::front::HelpWindow_IsEnabled(void);
void __cdecl lego::front::HelpWindow_SetEnabled(BOOL toggle,BOOL enable);
void __cdecl lego::front::Info_Initialise(Font *font);
BOOL __cdecl lego::front::Info_GetInfoType(char *infoName,Info_Type *out_infoType);
void * __cdecl lego::front::Info_GetTypePtr4(Info_Type infoType);
void __cdecl lego::front::Info_SetOverFlowImageFile(char *filename);
void __cdecl lego::front::Info_SetAutoGameSpeed(BOOL autoOn);
void __cdecl lego::front::Info_SetTypeChangeGameSpeed(Info_Type infoType,BOOL changeSpeedOn);
void __cdecl lego::front::Info_SetTypeText(Info_Type infoType,char *text);
void __cdecl lego::front::Info_SetTypeFlag_20000(Info_Type infoType,BOOL setFlag20000);
void __cdecl lego::front::Info_SetText_internal(char *text,char **pInfoText);
void __cdecl lego::front::Info_SetTypeImageFile(Info_Type infoType,char *filename);
void __cdecl lego::front::Info_SetTypeSFX(Info_Type infoType,SFX_ID sfxID);
BOOL __cdecl lego::front::Info_EnumerateMessageInstances(int handle,InfoEnumerateCallback callback,void *data);
void __cdecl lego::front::Info_AddMessageInstance(int handle,InfoMessageInstance *instance);
InfoMessageInstance * __cdecl lego::front::Info_GetMessageInstance(int handle,int instanceIndex);
InfoMessageInstance * __cdecl lego::front::Info_RemoveMessageInstance(int handle,int instanceIndex);
BOOL __cdecl lego::front::Info_Callback_FindObjectReference(InfoMessageInstance *instance,SearchInfoObject_8 *search);
void __cdecl lego::front::Info_RemoveObjectReferences(LegoObject *liveObj);
BOOL __cdecl lego::front::Info_Callback_FindBlockPos(InfoMessageInstance *infoInstance,SearchInfoBlockPos_8 *search);
void __cdecl lego::front::Info_RemoveAllAtBlockPos(Point2I *blockPos);
BOOL __cdecl lego::front::Info_Callback_FindObjectAndBlockPos(InfoMessageInstance *instance,SearchInfoObjectBlockPos_8 *search);
BOOL __cdecl lego::front::Info_HasTypeAtObjectOrBlockPos(Info_Type infoType,LegoObject *opt_liveObj,Point2I *opt_blockPos);
InfoMessageInstance * __cdecl lego::front::Info_CreateInstance(Point2I *opt_blockPos,LegoObject *opt_liveObj,char *opt_text);
void __cdecl lego::front::Info_SetFlag4(BOOL state);
BOOL __cdecl lego::front::Info_HasTypeText(Info_Type infoType);
int __cdecl lego::front::Info_FindExistingMessageType(Info_Type infoType);
float10 __cdecl lego::front::Info_FUN_00419a80(void);
void __cdecl lego::front::Info_Send(Info_Type infoType,char *opt_text,LegoObject *opt_liveObj,Point2I *opt_blockPos);
void __cdecl lego::front::Info_GotoFirst(void);
void __cdecl lego::front::Info_UpdateMessage(uint handle);
void __cdecl lego::front::Info_PopFirstMessage(void);
void __cdecl lego::front::Info_RemoveMessage(uint handle);
void __cdecl lego::front::Info_ClearAllMessages(void);
void __cdecl lego::front::Info_Draw(float elapsedAbs);
void __cdecl lego::front::Info_DrawPanel(float elapsedAbs);
BOOL __cdecl lego::front::Info_Update_FUN_0041a0d0(int mouseX,int mouseY,BOOL leftReleased);
void __cdecl lego::front::Info_FUN_0041a180(void);
void __cdecl lego::front::Info_UpdateInt6EC_FromScrollInfo(void);
void __cdecl lego::front::Info_FUN_0041a1f0(float elapsed);
Font * __cdecl lego::front::Interface_GetFont(void);
void __cdecl lego::front::Interface_Initialise(uint x_565,uint y_18,Font *font);
void __cdecl lego::front::Interface_AddAllMenuItems(void);
void __cdecl lego::front::Interface_AddMenuItems(Interface_MenuType menuType,uint numItems,...);
void __cdecl lego::front::Interface_Shutdown(void);
void __cdecl lego::front::Interface_ClearStates(void);
void __cdecl lego::front::Interface_ResetMenu(void);
BOOL __cdecl lego::front::Interface_GetMenuItemType(char *menuItemName,Interface_MenuItemType *out_menuItemType);
void __cdecl lego::front::Interface_InitBuildItems(void);
void __cdecl lego::front::Interface_LoadBuildItems(Config *config,char *gameName);
void __cdecl lego::front::Interface_LoadMenuItems(Config *config,char *gameName);
void __cdecl lego::front::Interface_LoadItemPanels(Config *config,char *gameName);
void __cdecl lego::front::Interface_LoadBackButton(Config *config,char *gameName);
void __cdecl lego::front::Interface_LoadPlusMinusImages(char *plusName,char *minusName);
void __cdecl lego::front::Interface_OpenMenu(Interface_MenuType menuType,Point2I *blockPos);
void __cdecl lego::front::_Interface_OpenMenu_SelectBlock(Interface_MenuType menuType,Point2I *blockPos);
uint __cdecl lego::front::Interface_GetBuildMenuIconCount(Interface_MenuType interfaceMenuType);
BOOL __cdecl lego::front::Interface_MenuTypeHasBackButton(Interface_MenuType interfaceMenuType);
void __cdecl lego::front::Interface_FUN_0041b3c0(void);
BOOL __cdecl lego::front::Interface_FUN_0041b5b0(Interface_MenuType menuIcon,undefined *callback,void *context);
BOOL __cdecl lego::front::Interface_Callback_FUN_0041b730(Interface_MenuItemType menuIcon,uint param_2,int param_3,float *param_4);
void __cdecl lego::front::Interface_FUN_0041b860(float elapsedAbs);
BOOL __cdecl lego::front::Interface_GetFlashingState(void);
Interface_MenuItemType __cdecl lego::front::Interface_GetPrimaryUnit_PowerIcon(Interface_MenuItemType *ref_menuIcon);
void __cdecl lego::front::Interface_FUN_0041b940(float elapsedAbs);
void __cdecl lego::front::Interface_SetSFX_004df1f4(SFX_ID sfxType);
BOOL __cdecl lego::front::Interface_DoSomethingWithRenameReplace(uint param_1,uint param_2,int param_3,int param_4,int param_5);
BOOL __cdecl lego::front::Interface_FUN_0041c0f0(uint param_1,uint param_2,undefined4 *out_param_3,undefined4 *out_param_4,undefined4 *out_param_5);
BOOL __cdecl lego::front::Interface_Callback_FUN_0041c240(Interface_MenuItemType menuIcon,LegoObject_Type objType,LegoObject_ID objID,uint *param_4);
void __cdecl lego::front::Interface_DoF2InterfaceKeyAction(void);
BOOL __cdecl lego::front::Interface_CallbackDoMenuIconKeyAction(Interface_MenuItemType menuIcon,LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::front::Interface_FUN_0041c420(Interface_MenuItemType menuIcon,LegoObject_Type objType,LegoObject_ID objID,float *param_4);
BOOL __cdecl lego::front::Interface_FUN_0041c610(Interface_MenuItemType menuIcon,int param_2,int param_3,BOOL param_4,BOOL param_5);
void __cdecl lego::front::Interface_ChangeIconFlag1_FUN_0041c6e0(Interface_MenuItemType menuIcon);
void __cdecl lego::front::Interface_ChangeObjectIconFlag1_FUN_0041c730(LegoObject_Type objType,LegoObject_ID objID);
BOOL __cdecl lego::front::Interface_GetIconUnk_FUN_0041c820(Interface_MenuItemType menuIcon,BOOL param_2);
BOOL __cdecl lego::front::Interface_GetObjectIconUnk_FUN_0041c880(LegoObject_Type objType,LegoObject_ID objID,BOOL param_3);
void __cdecl lego::front::Interface_SetIconFlag8(Interface_MenuItemType menuIcon,BOOL on);
void __cdecl lego::front::Interface_SetObjectIconFlag8(LegoObject_Type objType,LegoObject_ID objID,BOOL on);
BOOL __cdecl lego::front::Interface_GetIconFlag8(Interface_MenuItemType menuIcon);
BOOL __cdecl lego::front::Interface_GetObjectIconFlag8(LegoObject_Type objType,LegoObject_ID objID);
Image * __cdecl lego::front::Interface_FUN_0041c9e0(Interface_MenuItemType menuIcon);
Image * __cdecl lego::front::Interface_GetBuildImageByObjectType(LegoObject_Type objType,LegoObject_ID objID);
Image * __cdecl lego::front::Interface_GetObjectBuildImage(LegoObject_Type objType,LegoObject_ID objID,BOOL param_3);
void __cdecl lego::front::Interface_SetDat_004decd8_004decdc(Interface_MenuItemType menuIcon,LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::front::Interface_FUN_0041cc10(Point2F *point,uint unkWidth,uint unkHeight);
void __cdecl lego::front::Interface_DrawHoverOutline(Area2F *area);
void __cdecl lego::front::Interface_ChangeMenu_IfVehicleMounted_IsLiveObject(LegoObject *liveObj);
void __cdecl lego::front::Interface_ChangeMenu_IfPrimarySelectedVehicle_IsLiveObject(LegoObject *liveObj);
void __cdecl lego::front::Interface_BackToMain_IfSelectedWall_IsBlockPos(Point2I *blockPos);
void __cdecl lego::front::Interface_BackToMain_IfSelectedGroundOrConstruction_IsBlockPos(Point2I *blockPos);
void __cdecl lego::front::Interface_BackToMain_IfSelectedRubble_IsBlockPos(Point2I *blockPos);
void __cdecl lego::front::Interface_BackToMain_IfUnitIsSelected(LegoObject *liveObj);
BOOL __cdecl lego::front::Interface_HandleMenuItem(Interface_MenuItemType menuIcon);
BOOL __cdecl lego::front::Interface_DoAction_FUN_0041dbd0(Interface_MenuItemType menuIcon);
void __cdecl lego::front::Interface_BackToMain(void);
void __cdecl lego::front::Interface_SetIconFlash(Interface_MenuItemType menuIcon,BOOL flash);
void __cdecl lego::front::Interface_SetSubmenuIconFlash(LegoObject_Type objType,LegoObject_ID objID,BOOL flash);
LegoObject * __cdecl lego::front::Interface_GetPrimarySelectedUnit(void);
int __cdecl lego::front::Interface_SetIconClicked(Interface_MenuItemType menuIcon,int clickedCount);
int __cdecl lego::front::Interface_GetIconClicked(Interface_MenuItemType menuIcon);
int __cdecl lego::front::Interface_SetSubmenuIconClicked(LegoObject_Type objType,LegoObject_ID objID,int clickedCount);
int __cdecl lego::front::Interface_GetSubmenuIconClicked(LegoObject_Type objType,LegoObject_ID objID);
BOOL __cdecl lego::front::Interface_SetAdvisorPointToFashingIcon(Interface_MenuItemType menuIcon,BOOL setFlag40);
Advisor_Type __cdecl lego::front::Interface_GetAdvisorType_FromIcon(Interface_MenuItemType menuIcon);
BOOL __cdecl lego::front::Interface_GetObjectBool_FUN_0041e8c0(LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::front::Interface_SetScrollParameters(uint xEnd,uint yEnd,uint xStart,uint yStart,float timerFloat_750);
void __cdecl lego::front::_Interface_OpenMenu_SetNext(Interface_MenuType menuType,Point2I *opt_blockPos);
void __cdecl lego::front::Interface_FUN_0041e9f0(float elapsedAbs);
void __cdecl lego::front::Interface_DrawTeleportQueueNumber(LegoObject_Type objType,LegoObject_ID objID,Point2F *screenPt);
void __cdecl lego::front::Interface_FUN_0041ebd0(float xScreen,float yScreen);
void __cdecl lego::front::Interface_SetFloat1494To25_AndUnsetFlags800(void);
BOOL __cdecl lego::front::Interface_FUN_0041edb0(uint param_1,uint param_2,float x,float y,LegoObject_Type *out_objType,LegoObject_ID *out_objID,uint *out_objLevel);
BOOL __cdecl lego::front::Interface_HasTeleporterForObject(LegoObject_Type objType,LegoObject_ID objID);
BOOL __cdecl lego::front::Interface_Callback_HasObject(LegoObject *liveObj,SearchInterfaceFindObject *search);
BOOL __cdecl lego::front::Interface_HasUpgradeStation(void);
BOOL __cdecl lego::front::Interface_HasStatsFlags2(StatsFlags2 statsFlags2);
BOOL __cdecl lego::front::Interface_HasToolStore(void);
BOOL __cdecl lego::front::Interface_HasObjectOfTypeID(LegoObject_Type objType,LegoObject_ID objID);
BOOL __cdecl lego::front::Interface_HasObjectWithAbilities(LegoObject_AbilityFlags abilityFlags);
BOOL __cdecl lego::front::Interface_Callback_ReqestDigBlock(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::front::Interface_ReqestDigBlock(Point2I *blockPos);
BOOL __cdecl lego::front::Interface_Callback_RequestReinforceBlock(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::front::Interface_RequestReinforceBlock(Point2I *blockPos);
BOOL __cdecl lego::front::Interface_DoSelectedUnits_Callback(LegoObject_RunThroughListsCallback callback,void *data);
BOOL __cdecl lego::front::Interface_ObjectCallback_IsCarryingButNotStoring(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_IsEnergyBelowMax(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_IsHealthBelowMax(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_FUN_0041f400(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_SetFlags4_8_HealthM1(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_GoEatIfEnergyBelowMax(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_RequestRepairIfHealthBelowMax(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_ObjectCallback_DoesNotHaveToolEquipped(LegoObject *liveObj,LegoObject_ToolType toolType);
BOOL __cdecl lego::front::Interface_ObjectCallback_GoGetToolIfNotEquipped(LegoObject *liveObj,LegoObject_ToolType toolType);
BOOL __cdecl lego::front::Interface_ObjectCallback_FUN_0041f5f0(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::front::Interface_CheckPrimaryUnitHasAbility(LegoObject_AbilityFlags abilityFlag);
BOOL __cdecl lego::front::Interface_Block_FUN_0041f670(Point2I *blockPos);
BOOL __cdecl lego::front::Interface_ObjectCallback_HasToolEquipped_2(LegoObject *liveObj,LegoObject_ToolType toolType);
BOOL __cdecl lego::front::Interface_ObjectCallback_PlaceBirdScarerIfEquipped(LegoObject *liveObj,void *unused);
void __cdecl lego::game::Level_IncCrystalsStored(void);
void __cdecl lego::game::Level_SubtractCrystalsStored(int crystalAmount);
void __cdecl lego::game::Level_AddCrystalsDrained(int crystalDrainedAmount);
void __cdecl lego::game::Level_ResetCrystalsDrained(void);
int __cdecl lego::game::Level_GetCrystalCount(BOOL includeDrained);
int __cdecl lego::game::Level_GetOreCount(BOOL isProcessed);
void __cdecl lego::game::Level_AddStolenCrystals(int stolenCrystalAmount);
void __cdecl lego::game::Lego_SetRadarNoTrackObject(BOOL noTrackObj);
BOOL __cdecl lego::game::Lego_IsNoclipOn(void);
void __cdecl lego::game::Level_IncCrystalsPickedUp(void);
void __cdecl lego::game::Level_IncOrePickedUp(void);
void __cdecl lego::game::Level_IncOreStored(BOOL isProcessed);
void __cdecl lego::game::Level_SubtractOreStored(BOOL isProcessed,int oreAmount);
BOOL __cdecl lego::Gods_Go(char *programName);
void __cdecl lego::lrr::Lego_QuitLevel(void);
float10 __cdecl lego::game::Lego_GetGameSpeed(void);
BOOL __cdecl lego::lrr::Lego_Initialise(void);
void __cdecl lego::lrr::Lego_LoadMiscObjects(Config *config);
Container * __cdecl lego::lrr::Lego_GetCurrentCamera_Container(void);
float10 __cdecl lego::lrr::Lego_GetElapsedAbs(void);
void __cdecl lego::lrr::Lego_DrawRenameInput(float elapsedAbs);
void __cdecl lego::lrr::Lego_HandleRenameInput(float elapsedAbs);
BOOL __cdecl lego::lrr::Lego_MainLoop(float elapsed);
void __cdecl lego::game::Level_ConsumeObjectOxygen(LegoObject *liveObj,float elapsed);
void __cdecl lego::game::Level_UpdateEffects(Lego_Level *level,float elapsedGame);
void __cdecl lego::lrr::Lego_UpdateSceneFog(BOOL fogEnabled,float elapsed);
BOOL __cdecl lego::lrr::Lego_Callback_DrawObjectLaserTrackerBox(LegoObject *liveObj,Viewport *viewMain);
void __cdecl lego::lrr::Lego_DrawAllLaserTrackerBoxes(Viewport *viewMain);
void __cdecl lego::lrr::Lego_DrawAllSelectedUnitBoxes(Viewport *viewMain);
void __cdecl lego::lrr::Lego_DrawObjectSelectionBox(LegoObject *liveObj,Viewport *view,float r,float g,float b);
void __cdecl lego::lrr::Lego_Shutdown_Quick(void);
void __cdecl lego::lrr::Lego_Shutdown_Full(void);
void __cdecl lego::lrr::Lego_Exit(void);
BOOL __cdecl lego::lrr::Lego_HandleKeys(float elapsedGame,float elapsedInterface,BOOL *out_keyDownT,BOOL *out_keyDownR,BOOL *out_keyDownAddSelection);
BOOL __cdecl lego::lrr::Lego_UpdateAll3DSounds(BOOL stopAll);
BOOL __cdecl lego::lrr::Lego_UpdateObject3DSounds(LegoObject *liveObj,BOOL *pStopAll);
void __cdecl lego::lrr::Lego_SetPaused(BOOL checkCamDisableFlag,BOOL paused);
void __cdecl lego::lrr::Lego_LockGameSpeed(BOOL locked);
void __cdecl lego::lrr::Lego_SetGameSpeed(float newGameSpeed);
void __cdecl lego::lrr::Lego_TrackObjectInRadar(LegoObject *liveObj);
BOOL __cdecl lego::lrr::Lego_IsFirstPersonView(void);
void __cdecl lego::lrr::Lego_HandleRadarInput(void);
void __cdecl lego::lrr::Lego_UpdateSlug_FUN_004260f0(float elapsedGame);
void __cdecl lego::lrr::Lego_GetMouseWorldPosition(Vector3F *out_mouseWorldPos);
void __cdecl lego::lrr::Lego_DrawRadarMap(void);
void __cdecl lego::lrr::Lego_SetMenuNextPosition(Point2F *position);
void __cdecl lego::lrr::Lego_SetMenuPreviousPosition(Point2F *position);
void __cdecl lego::lrr::Lego_SetFlags2_40_And_2_unkCamera(BOOL onFlag40,BOOL onFlag2);
void __cdecl lego::lrr::Lego_SetFlags2_80(BOOL state);
void __cdecl lego::lrr::Lego_UnkObjective_CompleteSub_FUN_004262f0(void);
void __cdecl lego::lrr::Lego_UpdateTopdownCamera(float elapsedAbs);
void __cdecl lego::lrr::Lego_HandleWorld(float elapsedGame,float elapsedAbs,BOOL keyDownT,BOOL keyDownR,BOOL keyDownAddSelection);
void __cdecl lego::lrr::Lego_LoadToolTipInfos(Config *config,char *gameName_unused);
void __cdecl lego::lrr::Lego_LoadUpgradeNames(Config *config);
void __cdecl lego::lrr::Lego_ShowObjectToolTip(LegoObject *liveObj);
void __cdecl lego::lrr::Lego_ShowBlockToolTip(Point2I *mouseBlockPos,BOOL showConstruction,BOOL playSound,BOOL showCavern);
BOOL __cdecl lego::game::Level_BlockPointerCheck(Point2I *blockPos);
void __cdecl lego::lrr::Lego_SetPointerSFX(PointerSFX_Type pointerSFXType);
void __cdecl lego::lrr::Lego_HandleWorldDebugKeys(int bx,int by,LegoObject *liveObj,float noMouseButtonsElapsed);
void __cdecl lego::lrr::Lego_XYCallback_AddVisibleSmoke(int bx,int by);
Container_Texture * __cdecl lego::lrr::Lego_GetBlockDetail_ContainerTexture(Point2I *blockPos);
void __cdecl lego::lrr::Lego_UnkUpdateMapsWorldUnk_FUN_004290d0(float elapsedAbs,BOOL pass2);
void __cdecl lego::lrr::Lego_DrawDragSelectionBox(Lego_Level *level);
void __cdecl lego::lrr::Lego_MainView_MouseTransform(uint mouseX,uint mouseY,float *out_xPos,float *out_yPos);
Container * __cdecl lego::lrr::Lego_GetCurrentViewLight(void);
BOOL __cdecl lego::lrr::Lego_IsFPObject(LegoObject *liveObj);
void __cdecl lego::lrr::Lego_SetViewMode(ViewMode viewMode,LegoObject *liveObj,uint cameraFrame);
void __cdecl lego::lrr::Lego_CDTrackPlayNextCallback(void);
void __cdecl lego::lrr::Lego_SetMusicPlaying(BOOL isPlaying);
void __cdecl lego::lrr::Lego_SetSoundOn(BOOL isSoundOn);
LegoObject_ID __cdecl lego::lrr::Lego_GetEmergeCreatureID(void);
float10 __cdecl lego::lrr::Lego_GetObjectUpgradeTime(LegoObject_Type objType);
float10 __cdecl lego::lrr::Lego_GetTrainTime(void);
BOOL __cdecl lego::lrr::Lego_LoadLevel(char *levelName);
BOOL __cdecl lego::game::Level_AddCryOreToToolStore(LegoObject *liveObj,SearchAddCryOre_c *search);
BOOL __cdecl lego::lrr::Lego_LoadDetailMeshes(Lego_Level *level,char *meshBaseName);
void __cdecl lego::lrr::Lego_FreeDetailMeshes(Lego_Level *level);
RadarMap * __cdecl lego::lrr::Lego_GetRadarMap(void);
BOOL __cdecl lego::lrr::Lego_LoadMapSet(Lego_Level *level,char *surfaceMap,char *predugMap,int predugParam,char *terrainMap,int terrainParam,char *blockPointersMap,int blockPointersParam,char *cryOreMap,char cryOreParam,char *erodeMap,char *pathMap,int pathParam,char *textureSet,char *emergeMap,char *aiMap,char *fallinMap);
void __cdecl lego::lrr::Lego_InitTextureMappings(Map3D *map);
BOOL __cdecl lego::lrr::Lego_LoadTextureSet(Lego_Level *level,char *keyTexturePath);
BOOL __cdecl lego::lrr::Lego_LoadPreDugMap(Lego_Level *level,char *filename,int modifier);
BOOL __cdecl lego::lrr::Lego_LoadErodeMap(Lego_Level *level,char *filename);
BOOL __cdecl lego::lrr::Lego_LoadAIMap(Lego_Level *level,char *filename);
BOOL __cdecl lego::lrr::Lego_LoadEmergeMap(Lego_Level *level,char *filename);
BOOL __cdecl lego::game::Level_HandleEmergeTriggers(Lego_Level *level,Point2I *blockPos,Point2I *out_emergeBlockPos);
void __cdecl lego::game::Level_Emerge_FUN_0042c370(Lego_Level *level,float elapsedAbs);
BOOL __cdecl lego::lrr::Lego_LoadTerrainMap(Lego_Level *level,char *filename,int modifier);
BOOL __cdecl lego::lrr::Lego_GetBlockCryOre(Point2I *blockPos,uint *out_crystalLv0,uint *out_crystalLv1,uint *out_oreLv0,uint *out_oreLv1);
BOOL __cdecl lego::lrr::Lego_LoadCryOreMap(Lego_Level *level,char *filename,char modifier);
BOOL __cdecl lego::lrr::Lego_LoadPathMap(Lego_Level *level,char *filename,int modifier);
BOOL __cdecl lego::lrr::Lego_LoadFallinMap(Lego_Level *level,char *filename);
void __cdecl lego::lrr::Lego_UpdateFallins(float elapsedGame);
BOOL __cdecl lego::lrr::Lego_LoadBlockPointersMap(Lego_Level *level,char *filename,int modifier);
Upgrade_PartModel * __cdecl lego::lrr::Lego_GetUpgradePartModel(char *upgradeName);
BOOL __cdecl lego::lrr::Lego_LoadVehicleTypes(void);
BOOL __cdecl lego::lrr::Lego_LoadMiniFigureTypes(void);
BOOL __cdecl lego::lrr::Lego_LoadRockMonsterTypes(void);
BOOL __cdecl lego::lrr::Lego_LoadBuildingTypes(void);
BOOL __cdecl lego::lrr::Lego_LoadUpgradeTypes(void);
void __cdecl lego::lrr::Lego_LoadObjectNames(Config *config);
void __cdecl lego::lrr::Lego_LoadObjectTheNames(Config *config);
void __cdecl lego::lrr::Lego_Goto(LegoObject *liveObj,Point2I *blockPos,BOOL smooth);
void __cdecl lego::lrr::Lego_RemoveRecordObject(LegoObject *liveObj);
BOOL __cdecl lego::lrr::Lego_GetRecordObject(uint recordObjPtr,LegoObject **out_liveObj);
BOOL __cdecl lego::lrr::Lego_LoadOLObjectList(Lego_Level *level,char *filename);
BOOL __cdecl lego::lrr::Lego_GetObjectByName(char *objName,LegoObject_Type *out_objType,LegoObject_ID *out_objID,Container **optout_model);
BOOL __cdecl lego::lrr::Lego_GetObjectTypeModel(LegoObject_Type objType,LegoObject_ID objID,Container **out_model);
int __cdecl lego::lrr::Lego_GetObjectTypeIDCount(LegoObject_Type objType);
void __cdecl lego::lrr::Lego_PlayMovie_old(char *fName,Point2F *opt_screenPt);
char * __cdecl lego::game::Level_Free(void);
void __cdecl lego::game::Level_Block_SetNotHot(Lego_Level *level,uint bx,uint by,BOOL notHot);
SurfaceTexture __cdecl lego::game::Level_Block_ChoosePathTexture(int bx,int by,byte *ref_direction,BOOL powered);
void __cdecl lego::game::Level_BlockUpdateSurface(Lego_Level *level,int bx,int by,BOOL reserved);
void __cdecl lego::game::Level_Block_Proc_FUN_004301e0(Point2I *blockPos);
void __cdecl lego::ai::AITask_DoClearTypeAction(Point2I *blockPos,Message_Type completeAction);
void __cdecl lego::debug::Level_Debug_WKey_NeedsBlockFlags1_8_FUN_004303a0(Lego_Level *level,BOOL unused,uint bx,uint by);
BOOL __cdecl lego::game::Level_DestroyWall(Lego_Level *level,uint bx,uint by,BOOL isHiddenCavern);
void __cdecl lego::game::Level_Block_FUN_00430d20(Point2I *blockPos);
BOOL __cdecl lego::game::Level_DestroyWallConnection(Lego_Level *level,uint bx,uint by);
void __cdecl lego::game::Level_Block_RemoveReinforcement(Point2I *blockPos);
void __cdecl lego::game::Level_Block_Reinforce(int bx,int by);
void __cdecl lego::game::Level_BlockActivity_Create(Lego_Level *level,Point2I *blockPos,BOOL staticEffect);
void __cdecl lego::game::Level_BlockActivity_UpdateAll(Lego_Level *level,float elapsedGame);
void __cdecl lego::game::Level_BlockActivity_Destroy(Lego_Level *level,Point2I *blockPos,BOOL wallDestroyed);
void __cdecl lego::game::Level_BlockActivity_Remove(Lego_BlockActivity *blockAct);
void __cdecl lego::game::Level_BlockActivity_RemoveAll(Lego_Level *level);
Lego_Level * __cdecl lego::lrr::Lego_GetLevel(void);
Map3D * __cdecl lego::lrr::Lego_GetMap(void);
void __cdecl lego::game::Level_UncoverHiddenCavern(uint bx,uint by);
void __cdecl lego::game::Lego_PTL_RockFall(uint bx,uint by,int param_3,BOOL isBlockVertexPos);
Lego_SurfaceType __cdecl lego::lrr::Lego_GetBlockTerrain(int bx,int by);
uint __cdecl lego::game::MapShared_GetBlock(uint memHandle,int bx,int by);
BOOL __cdecl lego::game::Level_FindSelectedUnit_BlockCheck_FUN_00431960(uint bx,uint by,BOOL param_3);
BOOL __cdecl lego::game::Level_FindSelectedLiveObject_BlockReinforce_FUN_004319e0(uint bx,uint by);
BOOL __cdecl lego::game::Level_CanBuildOnBlock(int bx,int by,BOOL isPath,BOOL isWaterEntrance);
BOOL __cdecl lego::game::LiveObject_FUN_00431ba0(LegoObject *liveObj,Point2I *blockPos,Point2I *out_blockOffPos,BOOL param_4);
int __cdecl lego::game::Lego_GetCrossTerrainType(LegoObject *liveObj,int bx1,int by1,int bx2,int by2,BOOL param_6);
void __cdecl lego::game::Level_PowerGrid_AddPoweredBlock(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsPowered(Point2I *blockPos);
void __cdecl lego::game::Level_PowerGrid_UpdateUnpoweredBlockSurfaces(void);
void __cdecl lego::game::Level_PowerGrid_UnpowerPoweredBlocks(void);
void __cdecl lego::game::Level_PowerGrid_AddDrainPowerBlock(Point2I *blockPos);
BOOL __cdecl lego::game::Level_PowerGrid_IsDrainPowerBlock(Point2I *blockPos);
void __cdecl lego::game::Level_PowerGrid_ClearDrainPowerBlocks(void);
void __cdecl lego::game::Level_Block_UnsetBuildingTile(Point2I *blockPos);
void __cdecl lego::game::Level_Block_UnsetGeneratePower(Point2I *blockPos);
void __cdecl lego::game::Level_Block_SetToolStoreBuilding(Point2I *blockPos);
void __cdecl lego::game::Level_Block_SetSolidBuilding(int bx,int by);
void __cdecl lego::game::Level_Block_SetPathBuilding(int bx,int by);
void __cdecl lego::game::Level_Block_SetFenceRequest(int bx,int by,BOOL state);
BOOL __cdecl lego::game::Level_Block_IsFenceRequest(int bx,int by);
BOOL __cdecl lego::game::Level_IsBuildPathBoolUnk_true(Point2I *blockPos);
void __cdecl lego::game::Level_Block_SetLayedPath(Point2I *blockPos,BOOL state);
void __cdecl lego::game::Level_Block_SetGeneratePower(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_SetPath(Point2I *blockPos);
void __cdecl lego::game::Level_Block_SetBusyFloor(Point2I *blockPos,BOOL busyFloor);
BOOL __cdecl lego::game::LiveObject_BlockCheck_FUN_004326a0(LegoObject *liveObj,uint bx,uint by,BOOL param_4,BOOL param_5);
BOOL __cdecl lego::game::LiveObject_CanDynamiteBlockPos(LegoObject *liveObj,uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsGround_alt(LegoObject *liveObj,uint bx,uint by);
BOOL __cdecl lego::game::LiveObject_CanReinforceBlock(LegoObject *liveObj,uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsSolidBuilding(uint bx,uint by,BOOL includeToolStore);
BOOL __cdecl lego::game::Level_Block_IsRockFallFX(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsGround(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsSeamWall(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsWall(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsDestroyedConnection(uint bx,uint by);
uint __cdecl lego::game::Level_Block_GetRubbleLayers(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_ClearRubbleLayer(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsReinforced(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsBusy(Point2I *blockPos);
void __cdecl lego::game::Level_Block_SetBusy(Point2I *blockPos,BOOL state);
BOOL __cdecl lego::game::Level_Block_IsCorner(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsExposed(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsImmovable(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsLava(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsNotWallOrGround(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsSurveyed(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsGap(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsCornerInner(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_IsPathBuilding(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsGeneratePower(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsPath(Point2I *blockPos);
BOOL __cdecl lego::game::Level_Block_IsFoundationOrBusyFloor(Point2I *blockPos);
void __cdecl lego::game::Level_Block_SetDozerClearing(Point2I *blockPos,BOOL state);
BOOL __cdecl lego::game::Level_GetObjectDamageFromSurface(LegoObject *liveObj,int bx,int by,float elapsedGame,float *optout_damage);
uint __cdecl lego::game::Level_Block_GetDirection(uint bx,uint by);
void __cdecl lego::game::Level_Block_SetSurveyed(uint bx,uint by);
BOOL __cdecl lego::game::Level_Block_GetSurfaceType(uint bx,uint by,Lego_SurfaceType *out_surfaceType);
void __cdecl lego::game::Level_Block_LowerRoofVertices(Lego_Level *level,uint bx,uint by);
void __cdecl lego::game::MapShared_GetDimensions(uint memHandle,uint *out_width,uint *out_height);
BOOL __cdecl lego::lrr::Lego_LoadGraphicsSettings(void);
BOOL __cdecl lego::lrr::Lego_LoadLighting(void);
BOOL __cdecl lego::game::Lego_WorldToBlockPos_NoZ(float xPos,float yPos,int *out_bx,int *out_by);
BOOL __cdecl lego::game::LiveObject_FUN_00433b40(LegoObject *liveObj,float param_2,BOOL param_3);
BOOL __cdecl lego::game::Level_Block_IsMeshHidden(uint bx,uint by);
void __cdecl lego::unk::Lego_FPHighPolyBlocks_FUN_00433db0(Container *contCamera,Viewport *view,float fpClipBlocksMult,float highPolyBlocksMult);
int __cdecl lego::unk::Lego_QsortCompareUnk_FUN_00434380(int param_1,int param_2);
BOOL __cdecl lego::game::Level_Block_Detail_FUN_004343b0(Lego_Level *level,uint bx,uint by,float scaleZ,float brightness);
void __cdecl lego::game::Level_RemoveAll_ProMeshes(void);
BOOL __cdecl lego::game::Level_Block_Damage(uint bx,uint by,float destroyTime,float elapsed);
void __cdecl lego::lrr::Lego_LoadPanels(Config *config,uint screenWidth,uint screenHeight);
void __cdecl lego::lrr::Lego_LoadPanelButtons(Config *config,uint screenWidth,uint screenHeight);
void __cdecl lego::lrr::Lego_LoadTutorialIcon(Config *config);
void __cdecl lego::lrr::Lego_LoadSamples(Config *config,BOOL noReduceSamples);
void __cdecl lego::lrr::Lego_LoadTextMessages(Config *config);
void __cdecl lego::lrr::Lego_LoadInfoMessages(Config *config);
void __cdecl lego::lrr::Lego_LoadToolTips(Config *config);
BOOL __cdecl lego::game::Lego_TryTeleportObject(LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::game::Level_Block_UpdateSurveyRadius_FUN_00434f40(Point2I *blockPos,int surveyRadius);
void __cdecl lego::lrr::Lego_LoadSurfaceTypeDescriptions_sound(Config *config,char *gameName);
char * __cdecl lego::game::Lego_GetSurfaceTypeDescription(Lego_SurfaceType surfaceType);
SFX_ID __cdecl lego::game::Lego_GetSurfaceTypeSFX(Lego_SurfaceType surfaceType);
void __cdecl lego::game::Level_SetPointer_FromSurfaceType(Lego_SurfaceType surfaceType);
void __cdecl lego::game::Level_GenerateFallin_InRadius(Point2I *blockPos,int radius,BOOL param_3);
void __cdecl lego::game::Level_UpdateTutorialBlockFlashing(Lego_Level *level,Viewport *viewMain,float elapsedGame,float elapsedAbs);
BOOL __cdecl lego::lrr::Lego_UpdateGameCtrlLeftButtonLast(void);
BOOL __cdecl lego::lrr::Lego_DrawDialogContrastOverlay(void);
int __cdecl lego::lrr::Lego_SaveMenu_ConfirmMessage_FUN_004354f0(char *titleText,char *message,char *okText,char *cancelText);
BOOL __cdecl lego::lrr::Lego_EndLevel(void);
void __cdecl lego::lrr::Lego_StopUserAction(void);
void __cdecl lego::lrr::Lego_UnkTeleporterInit_FUN_00435980(void);
void __cdecl lego::lrr::Lego_SetAttackDefer(BOOL defer);
void __cdecl lego::lrr::Lego_SetCallToArmsOn(BOOL callToArms);
LegoCamera * __cdecl lego::view::Camera_Create(Container *root,LegoCamera_Type camType);
void __cdecl lego::view::Camera_EnableFreeMovement(LegoCamera *cam,BOOL on);
void __cdecl lego::view::Camera_Free(LegoCamera *cam);
void __cdecl lego::view::Camera_InitCameraMovements(float cameraSpeed,float cameraDropOff,float cameraAcceleration,int mouseScrollIndent);
void __cdecl lego::view::Camera_CopyFPPositionOrientation(LegoCamera *dstCamera,LegoCamera *srcCamera);
void __cdecl lego::view::Camera_TrackObject(LegoCamera *cam,LegoObject *liveObj,float trackFloat_8,float trackDist,float trackTilt,float trackRotationSpeed);
void __cdecl lego::view::Camera_SetFPObject(LegoCamera *cam,LegoObject *liveObj,int cameraFrame);
int __cdecl lego::view::Camera_GetFPCameraFrame(LegoCamera *cam);
void __cdecl lego::view::Camera_StopMovement(LegoCamera *cam);
int __cdecl lego::view::Camera_GetMouseScrollIndent(void);
void __cdecl lego::view::Camera_Shake(LegoCamera *cam,float intensity,float duration);
void __cdecl lego::view::Camera_Update(LegoCamera *cam,Lego_Level *level,float elapsedAbs,float elapsedGame);
void __cdecl lego::view::Camera_SetTiltRange(LegoCamera *cam,float minTilt,float maxTilt);
void __cdecl lego::view::Camera_SetTilt(LegoCamera *cam,float tilt);
void __cdecl lego::view::Camera_AddTilt(LegoCamera *cam,float tiltAmount);
void __cdecl lego::view::Camera_SetRotationRange(LegoCamera *cam,float minYaw,float maxYaw);
void __cdecl lego::view::Camera_SetRotation(LegoCamera *cam,float yaw);
void __cdecl lego::view::Camera_AddRotation(LegoCamera *cam,float yawAmount);
void __cdecl lego::view::Camera_SetZoomRange(LegoCamera *cam,float minDist,float maxDist);
void __cdecl lego::view::Camera_SetZoom(LegoCamera *cam,float dist);
void __cdecl lego::view::Camera_AddZoom(LegoCamera *cam,float distAmount);
void __cdecl lego::view::Camera_AddTranslation2D(LegoCamera *cam,float translateX,float translateY);
void __cdecl lego::view::Camera_GetTopdownPosition(LegoCamera *cam,Vector3F *out_position);
void __cdecl lego::view::Camera_SetTopdownPosition(LegoCamera *cam,float x,float y);
BOOL __cdecl lego::view::Camera_GetTopdownWorldPos(LegoCamera *cam,Map3D *surfMap,Vector3F *out_worldPos);
float10 __cdecl lego::view::Camera_GetRotation(LegoCamera *cam);
void __cdecl lego::view::Camera_Move(LegoCamera *cam,Vector3F *ref_dir,float elapsedAbs);
void __cdecl lego::game::LegoObject_Initialise(void);
void __cdecl lego::game::LegoObject_Shutdown(void);
void __cdecl lego::save::Object_Save_CopyStruct18(SaveStruct_18 *out_saveStruct18);
void __cdecl lego::save::Object_Save_OverwriteStruct18(SaveStruct_18 *opt_saveStruct18);
uint __cdecl lego::game::LegoObject_GetObjectsBuilt(LegoObject_Type objType,BOOL excludeToolStore);
void __cdecl lego::game::Object_LoadToolTipIcons(Config *config);
void __cdecl lego::game::LegoObject_CleanupLevel(void);
void __cdecl lego::game::LegoObject_Weapon_FUN_004375c0(LegoObject *liveObj,int weaponID,float coef);
BOOL __cdecl lego::game::LegoObject_DoOpeningClosing(LegoObject *liveObj,BOOL open);
void __cdecl lego::game::LegoObject_CleanupObjectLevels(void);
uint __cdecl lego::game::LegoObject_GetLevelObjectsBuilt(LegoObject_Type objType,LegoObject_ID objID,uint objLevel,BOOL currentCount);
uint __cdecl lego::game::LegoObject_GetPreviousLevelObjectsBuilt(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
void __cdecl lego::game::LegoObject_IncLevelPathsBuilt(BOOL incCurrent);
void __cdecl lego::game::LegoObject_RemoveRouteToReferences(LegoObject *routeToObj);
BOOL __cdecl lego::game::LegoObject_Callback_RemoveRouteToReference(LegoObject *liveObj,LegoObject *routeToObj);
BOOL __cdecl lego::game::LegoObject_Remove(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_RunThroughListsSkipUpgradeParts(LegoObject_RunThroughListsCallback callback,void *search);
BOOL __cdecl lego::game::LegoObject_RunThroughLists(LegoObject_RunThroughListsCallback callback,void *search,BOOL skipUpgradeParts);
void __cdecl lego::game::LegoObject_SetCustomName(LegoObject *liveObj,char *opt_customName);
void __cdecl lego::game::HiddenObject_RemoveAll(void);
void __cdecl lego::game::HiddenObject_ExposeBlock(Point2I *blockPos);
void __cdecl lego::game::HiddenObject_Add(void *objModel,LegoObject_Type objType,LegoObject_ID objID,Point2F *worldPos,float heading,float health,char *thisOLName,char *drivingOLName);
BOOL __cdecl lego::game::LegoObject_CanShootObject(LegoObject *liveObj);
LegoObject * __cdecl lego::game::LegoObject_Create(int **objModel,LegoObject_Type objType,LegoObject_ID objID);
LegoObject * __cdecl lego::game::LegoObject_Create_internal(void);
void __cdecl lego::game::LegoObject_AddList(void);
int __cdecl lego::game::LegoObject_GetNumBuildingsTeleported(int *stack);
void __cdecl lego::game::LegoObject_SetNumBuildingsTeleported(uint numTeleported);
void __cdecl lego::game::LegoObject_SetCrystalPoweredColour(LegoObject *liveObj,BOOL powered);
void __cdecl lego::game::LegoObject_FUN_00438720(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_SetPowerOn(LegoObject *liveObj,BOOL on);
BOOL __cdecl lego::game::LegoObject_IsActive(LegoObject *liveObj,BOOL ignoreUnpowered);
LegoObject * __cdecl lego::game::LegoObject_CreateInWorld(void *objModel,LegoObject_Type objType,LegoObject_ID objID,uint objLevel,float xPos,float yPos,float heading);
LegoObject * __cdecl lego::game::LegoObject_FindPoweredBuildingAtBlockPos(Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_Callback_FindPoweredBuildingAtBlockPos(LegoObject *liveObj,SearchObjectBlockXY_c *search);
BOOL __cdecl lego::game::LegoObject_AddThisDrainedCrystals(LegoObject *liveObj,int crystalCount);
BOOL __cdecl lego::game::LegoObject_GetBuildingUpgradeCost(LegoObject *liveObj,uint *optout_oreCost);
void __cdecl lego::game::LegoObject_UpgradeBuilding(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_HasEnoughOreToUpgrade(LegoObject *liveObj,int objLevel);
undefined4 __cdecl lego::game::LegoObject_Search_FUN_00438c20(LegoObject *opt_liveObj,BOOL param_2);
undefined4 __cdecl lego::game::LegoObject_Search_FUN_00438ca0(LegoObject *liveObj,BOOL param_2);
LegoObject * __cdecl lego::game::LegoObject_FUN_00438d20(Point2I *blockPos,LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
LegoObject * __cdecl lego::game::LegoObject_FindResourceProcessingBuilding(LegoObject *liveObj,Point2I *blockPos,LegoObject_Type objType,uint objLevel);
undefined4 __cdecl lego::game::LegoObject_Search_FUN_00438e40(LegoObject *liveObj,undefined4 param_2);
undefined4 __cdecl lego::game::LegoObject_Search_FUN_00438eb0(LegoObject *liveObj);
LegoObject * __cdecl lego::game::LegoObject_FindSnackServingBuilding(LegoObject *liveObj);
LegoObject * __cdecl lego::game::LegoObject_FindBigTeleporter(Point2F *worldPos);
LegoObject * __cdecl lego::game::LegoObject_FindSmallTeleporter(Point2F *worldPos);
LegoObject * __cdecl lego::game::LegoObject_FindWaterTeleporter(Point2F *worldPos);
LegoObject * __cdecl lego::game::Level_GetBuildingAtPosition(Point2F *worldPos);
undefined4 __cdecl lego::game::LegoObject_Search_FUN_00439110(LegoObject *liveObj,Point2F *opt_worldPos,LegoObject_AbilityFlags trainedType);
BOOL __cdecl lego::game::LegoObject_HasTraining(LegoObject *liveObj,LegoObject_AbilityFlags training);
BOOL __cdecl lego::game::LegoObject_IsDocksBuilding_Unk(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_CallbackSearch_FUN_00439270(LegoObject *liveObj,int **search);
BOOL __cdecl lego::game::LegoObject_CanStoredObjectTypeBeSpawned(LegoObject_Type objType);
BOOL __cdecl lego::game::LegoObject_Callback_CanSpawnStoredObjects(LegoObject *liveObj1,LegoObject *spawnObj);
void __cdecl lego::game::LegoObject_PTL_GenerateFromCryOre(Point2I *blockPos);
void __cdecl lego::game::LegoObject_PTL_GenerateCrystalsAndOre(Point2I *blockPos,uint objLevel);
void __cdecl lego::game::Level_GenerateCrystal(Point2I *blockPos,uint objLevel,Point2F *opt_worldPos,BOOL showInfoMessage);
void __cdecl lego::game::Level_GenerateOre(Point2I *blockPos,uint objLevel,Point2F *opt_worldPos,BOOL showInfoMessage);
char * __cdecl lego::game::LegoObject_GetLangName(LegoObject *liveObj);
char * __cdecl lego::game::Object_GetTypeName(LegoObject_Type objType,LegoObject_ID objID);
char * __cdecl lego::game::Object_GetLangTheName(LegoObject_Type objType,LegoObject_ID objID);
char * __cdecl lego::game::Object_GetLangName(LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::game::LegoObject_GetTypeAndID(LegoObject *liveObj,LegoObject_Type *out_objType,LegoObject_ID *out_objID);
void __cdecl lego::game::Object_LoadToolNames(Config *config,char *gameName);
void __cdecl lego::game::LegoObject_RequestPowerGridUpdate(void);
BOOL __cdecl lego::game::LegoObject_VehicleMaxCarryChecksTime_FUN_00439c80(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryCollectObject(LegoObject *liveObj,LegoObject *targetObj);
BOOL __cdecl lego::game::LegoObject_FUN_00439e40(LegoObject *liveObj,LegoObject *otherObj);
BOOL __cdecl lego::game::LegoObject_FUN_00439e90(LegoObject *liveObj,LegoObject *targetObj,BOOL param_3);
void __cdecl lego::game::LegoObject_CompleteVehicleUpgrade(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_SetLevel(LegoObject *liveObj,uint newLevel);
BOOL __cdecl lego::game::LegoObject_IsSmallTeleporter(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_IsBigTeleporter(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_IsWaterTeleporter(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_UnkGetTerrainCrossBlock_FUN_0043a010(LegoObject *liveObj,Point2I *optout_blockPos);
BOOL __cdecl lego::game::LegoObject_UnkGetTerrainGetOutAtLandBlock_FUN_0043a0d0(LegoObject *liveObj,Point2I *out_blockPos);
BOOL __cdecl lego::game::LegoObject_CheckUnkGetInAtLand_FUN_0043a100(LegoObject *liveObj,Point2I *blockPos);
void __cdecl lego::game::LegoObject_DropCarriedObject(LegoObject *liveObj,BOOL putAway);
BOOL __cdecl lego::game::LegoObject_TryRequestOrDumpCarried(LegoObject *liveObj,Point2I *blockPos,Point2F *worldPos,BOOL place,BOOL setRouteFlag8);
BOOL __cdecl lego::game::LegoObject_TryDepositCarried(LegoObject *liveObj,LegoObject *destObj);
Container * __cdecl lego::game::LegoObject_GetDepositNull(LegoObject *liveObj);
LegoObject * __cdecl lego::game::LegoObject_SpawnCarryableObject(LegoObject *liveObj,LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
BOOL __cdecl lego::game::LegoObject_CanSpawnCarryableObject(LegoObject *liveObj,LegoObject_Type objType,LegoObject_ID objID);
void __cdecl lego::game::LegoObject_PutAwayCarriedObject(LegoObject *liveObj,LegoObject *carriedObj);
void __cdecl lego::game::LegoObject_AddCrystalsStored(LegoObject *unused_liveObj,uint crystalAmount);
void __cdecl lego::game::LegoObject_AddOreStored(LegoObject *liveObj_unused,uint oreAmount);
void __cdecl lego::game::LegoObject_WaterVehicle_Unregister(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_WaterVehicle_Register(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_RegisterVehicle__callsForWater(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_FUN_0043acb0(LegoObject *liveObj1,LegoObject *liveObj2);
void __cdecl lego::game::LegoObject_RockMonster_FUN_0043ad70(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_FUN_0043aeb0(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_Callback_TryStampMiniFigureWithCrystal(LegoObject *targetObj,LegoObject *stamperObj);
LegoObject * __cdecl lego::game::LegoObject_TryGenerateSlug(LegoObject *originObj,LegoObject_ID objID);
LegoObject * __cdecl lego::game::LegoObject_TryGenerateRMonsterAtRandomBlock(void);
LegoObject * __cdecl lego::game::LegoObject_TryGenerateRMonster(CreatureModel *objModel,LegoObject_Type objType,LegoObject_ID objID,uint bx,uint by);
void __cdecl lego::game::LegoObject_UpdateAll(float elapsedGame);
void __cdecl lego::game::LegoObject_RemoveAll(void);
BOOL __cdecl lego::game::LegoObject_Callback_Remove(LegoObject *liveObj,void *data_unused);
BOOL __cdecl lego::game::LegoObject_DoPickSphereSelection(uint mouseX,uint mouseY,LegoObject **selectedObj);
BOOL __cdecl lego::game::LegoObject_Callback_PickSphereSelection(LegoObject *liveObj,SearchObjectMouseXY_c *search);
void __cdecl lego::game::LegoObject_DoDragSelection(Viewport *view,Point2F *dragStart,Point2F *dragEnd);
BOOL __cdecl lego::game::LegoObject_CallbackDoSelection(LegoObject *liveObj,SearchViewportWindow_14 *search);
void __cdecl lego::game::LegoObject_SwapPolyFP(LegoObject *liveObj,uint cameraNo,BOOL on);
void __cdecl lego::game::LegoObject_FP_SetRanges(LegoObject *liveObj,Container *cont,float medPolyRange,float highPolyRange,BOOL onCont);
BOOL __cdecl lego::game::LegoObject_FP_Callback_SwapPolyMeshParts(LegoObject *liveObj,LiveObjectInfo *liveInfo);
BOOL __cdecl lego::game::LegoObject_Check_LotsOfFlags1AndFlags2_FUN_0043bdb0(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_FUN_0043bde0(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_FinishEnteringWallHole(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_UpdateRemoval(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_CanSupportOxygenForType(LegoObject_Type consumerType,LegoObject_ID consumerID,LegoObject_Type producerType,LegoObject_ID producerID);
BOOL __cdecl lego::game::LegoObject_Callback_SumOfOxygenCoefs(LegoObject *liveObj,float *oxygenCoef);
void __cdecl lego::game::LegoObject_UpdateAllRadarSurvey(float elapsedGame,BOOL isRadarMapView);
BOOL __cdecl lego::game::LegoObject_Callback_UpdateRadarSurvey(LegoObject *liveObj,BOOL *pIsRadarMapView);
BOOL __cdecl lego::game::LegoObject_FUN_0043c6a0(LegoObject *liveObj);
Weapon_KnownType __cdecl lego::game::LegoObject_GetEquippedBeam(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_FUN_0043c750(LegoObject *liveObj,LegoObject *routeToObject,Weapon_KnownType knownWeapon);
void __cdecl lego::game::LegoObject_Proc_FUN_0043c780(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_Proc_FUN_0043c7f0(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_UpdatePowerConsumption(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_CheckCanSteal(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_UpdateElapsedTimes(LegoObject *liveObj,float elapsed);
BOOL __cdecl lego::game::LegoObject_Callback_Update(LegoObject *liveObj,float *pElapsed);
void __cdecl lego::game::LegoObject_ProccessCarriedObjects(LegoObject *in_liveObj);
void __cdecl lego::game::LegoObject_ClearDockOccupiedFlag(LegoObject *unused_liveObj,LegoObject *liveObj);
void __cdecl lego::game::LegoObject_TriggerFrameCallback(Container *cont,void *data);
BOOL __cdecl lego::game::LegoObject_QueueTeleport(LegoObject *liveObj,LegoObject_Type objType,int objID);
void __cdecl lego::game::LegoObject_UpdateTeleporter(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_RemoveTeleportDownReference(LegoObject *teleportDownObj);
BOOL __cdecl lego::game::LegoObject_Callback_RemoveTeleportDownReference(LegoObject *liveObj,LegoObject *teleportDownObj);
void __cdecl lego::game::LegoObject_TrainMiniFigure_instantunk(LegoObject *liveObj,LegoObject_AbilityFlags trainFlags);
void __cdecl lego::game::LegoObject_AddDamage2(LegoObject *liveObj,float damage,BOOL showVisual,float elapsed);
void __cdecl lego::game::LegoObject_UpdateEnergyHealthAndLavaContact(LegoObject *in_liveObj,float elapsed);
BOOL __cdecl lego::game::LegoObject_MiniFigurePlayHurtSound(LegoObject *in_liveObj,float elapsed,float damage);
BOOL __cdecl lego::game::LegoObject_FUN_0043fee0(LegoObject *carriedObj);
BOOL __cdecl lego::game::LegoObject_UnkCarryingVehicle_FUN_00440080(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryFindLoad_FUN_00440130(LegoObject *in_liveObj,LegoObject *targetObj);
BOOL __cdecl lego::game::LegoObject_TryDock_FUN_004402b0(LegoObject *in_liveObj);
void __cdecl lego::game::LegoObject_TryDock_AtBlockPos_FUN_004403f0(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_FUN_00440470(LegoObject *liveObj,BOOL param_2);
BOOL __cdecl lego::game::LegoObject_TryFindDriver_FUN_00440690(LegoObject *liveObj,LegoObject *drivableObj);
void __cdecl lego::game::LegoObject_DoDynamiteExplosionRadiusCallbacks(LegoObject *liveObj,float damageRadius,float maxDamage,float wakeRadius);
BOOL __cdecl lego::game::LegoObject_Callback_DynamiteExplosion(LegoObject *liveObj,SearchDynamiteRadius *search);
void __cdecl lego::game::LegoObject_DoBirdScarerRadiusCallbacks(LegoObject *optor_liveObj,Point2F *optor_position,float radius);
BOOL __cdecl lego::game::LegoObject_Callback_BirdScarer(LegoObject *liveObj,SearchDynamiteRadius *search);
void __cdecl lego::game::LegoObject_SetActivity(LegoObject *liveObj,Activity_Type activityType,uint repeatCount);
void __cdecl lego::game::LegoObject_UpdateCarrying(LegoObject *in_liveObj);
void __cdecl lego::game::LegoObject_InitBoulderMesh_FUN_00440eb0(LegoObject *liveObj,Container_Texture *contTexture);
BOOL __cdecl lego::game::LegoObject_Route_ScoreNoCallback_FUN_00440ef0(LegoObject *liveObj,uint bx,uint by,uint bx2,uint by2,int **out_param_6,int **out_param_7,int *out_count);
BOOL __cdecl lego::game::LegoObject_Route_ScoreSub_FUN_00440f30(LegoObject *liveObj,uint bx,uint by,uint bx2,uint by2,uint **out_param_6,uint **out_param_7,uint *out_count,undefined *callback,void *data);
BOOL __cdecl lego::game::LegoObject_Route_Score_FUN_004413b0(LegoObject *liveObj,uint bx,uint by,uint bx2,uint by2,int **out_new_bxs,int **out_new_bys,int *out_count,code *callback,void *data);
BOOL __cdecl lego::game::LegoObject_Route_AllocPtr_FUN_004419c0(LegoObject *liveObj,uint count,int *bxList,int *byList,Point2F *opt_point);
void __cdecl lego::game::LegoObject_Route_End(LegoObject *liveObj,BOOL completed);
void __cdecl lego::game::LegoObject_Interrupt(LegoObject *liveObj,BOOL actStand,BOOL dropCarried);
void __cdecl lego::game::LegoObject_DestroyBoulder_AndCreateExplode(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_FireBeamWeaponAtObject(LegoObject *liveObj,LegoObject *targetObj,Weapon_KnownType knownWeapon);
void __cdecl lego::game::LegoObject_CreateWeaponProjectile(LegoObject *liveObj,Weapon_KnownType knownWeapon);
void __cdecl lego::game::LegoObject_StartCrumbling(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_GetPosition(LegoObject *liveObj,float *out_x,float *out_y);
void __cdecl lego::game::LegoObject_GetFaceDirection(LegoObject *liveObj,Point2F *out_direction);
void __cdecl lego::game::LegoObject_SetHeadingOrDirection(LegoObject *liveObj,float theta,Vector3F *opt_vecDir);
float10 __cdecl lego::game::LegoObject_GetHeading(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_GetBlockPos(LegoObject *liveObj,int *out_bx,int *out_by);
float10 __cdecl lego::game::LegoObject_GetWorldZCallback(float xPos,float yPos,Map3D *map);
float10 __cdecl lego::game::LegoObject_GetWorldZCallback_Lake(float xPos,float yPos,Map3D *map);
void __cdecl lego::game::LegoObject_UpdateRoutingVectors(LegoObject *liveObj,float xPos,float yPos);
void __cdecl lego::game::LegoObject_SetPositionAndHeading(LegoObject *liveObj,float xPos,float yPos,float theta,BOOL assignHeading);
int __cdecl lego::game::LegoObject_FP_UpdateMovement(LegoObject *liveObj,float elapsed,float *out_transSpeed);
void __cdecl lego::game::LegoObject_UpdateWorldStickyPosition(LegoObject *liveObj,float elapsed);
void __cdecl lego::game::LegoObject_UpdateDriverStickyPosition(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryWaiting(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_IsRockMonsterCanGather(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_FUN_004439d0(LegoObject *liveObj,Point2I *blockPos,Point2I *out_blockPos,undefined4 unused);
void __cdecl lego::game::LegoObject_RockMonster_DoWakeUp(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_CheckBlock_FUN_00443b00(LegoObject *liveObj,Point2I *blockPos,BOOL *pAllowWall);
void __cdecl lego::game::LegoObject_Route_UpdateMovement(LegoObject *liveObj,float elapsed);
void __cdecl lego::game::LegoObject_TryDock_AtObject2FC(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_UpdateCarryingEnergy(LegoObject *liveObj,float elapsed);
BOOL __cdecl lego::game::LegoObject_FUN_00444520(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_TryRunAway(LegoObject *liveObj,Point2F *dir);
void __cdecl lego::ai::LegoObject_DoSlip(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_RoutingUnk_FUN_00444940(LegoObject *liveObj,BOOL useRoutingPos,BOOL flags3_8,BOOL notFlags1_10000);
void __cdecl lego::game::LegoObject_FaceTowardsCamera(LegoObject *liveObj,Point2F *newFaceDir);
void __cdecl lego::game::LegoObject_Route_CurveSolid_FUN_004454a0(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_Callback_CurveSolidCollRadius_FUN_00445600(LegoObject *liveObj,LegoObject **pOtherObj);
BOOL __cdecl lego::game::LegoObject_Route_SolidBlockCheck_FUN_00445860(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_UpdateSlipAndScare(LegoObject *liveObj,float elapsed);
BOOL __cdecl lego::game::LegoObject_Callback_ScareTrainedMiniFiguresAwayFromTickingDynamite(LegoObject *liveObj,LegoObject *explosiveObj);
BOOL __cdecl lego::game::LegoObject_Callback_SlipAndScare(LegoObject *liveObj,LegoObject *monsterObj);
LegoObject * __cdecl lego::game::LegoObject_DoCollisionCallbacks_FUN_00446030(LegoObject *liveObj,Point2F *param_2,float param_3,BOOL param_4);
BOOL __cdecl lego::game::LegoObject_CallbackCollisionRadius_FUN_004460b0(LegoObject *in_liveObj,SearchCollision_14 *search);
BOOL __cdecl lego::game::LegoObject_CallbackCollisionBox_FUN_004463b0(LegoObject *in_liveObj,SearchCollision_14 *search);
void __cdecl lego::game::LegoObject_CalculateSpeeds(LegoObject *liveObj,float elapsed,float *out_routeSpeed,float *out_transSpeed);
BOOL __cdecl lego::game::LegoObject_RoutingPtr_Realloc_FUN_00446b80(LegoObject *liveObj,uint bx,uint by);
BOOL __cdecl lego::game::LegoObject_BlockRoute_FUN_00446c80(LegoObject *liveObj,uint bx,uint by,BOOL useWideRange,Direction *optout_direction,BOOL countIs8);
BOOL __cdecl lego::game::LegoObject_RouteToDig_FUN_00447100(LegoObject *liveObj,uint bx,uint by,BOOL tunnelDig);
BOOL __cdecl lego::game::LegoObject_PTL_GatherRock(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_RoutingNoCarry_FUN_00447470(LegoObject *liveObj,uint bx,uint by,LegoObject *boulderObj);
BOOL __cdecl lego::game::LegoObject_PTL_AttackBuilding(LegoObject *liveObj1,LegoObject *targetObj);
int __cdecl lego::game::LegoObject_FUN_00447670(LegoObject *in_liveObj,int bx,int by,LegoObject *liveObj2);
void __cdecl lego::game::LegoObject_FUN_004477b0(LegoObject *liveObj);
int __cdecl lego::game::LegoObject_FUN_00447880(LegoObject *in_liveObj);
BOOL __cdecl lego::game::LegoObject_Add25EnergyAndSetHealth(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_FUN_00447a40(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_Routing_FUN_00447a90(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_DoBuildingsCallback_AttackByBoulder(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_CallbackBoulderAttackBuilding_FUN_00447be0(LegoObject *liveObj,LegoObject *buildingLiveObj);
void __cdecl lego::game::LegoObject_Hit(LegoObject *liveObj,Point2F *opt_dir,BOOL reactToHit);
void __cdecl lego::game::LegoObject_TeleportDownBuilding(LegoObject *liveObj);
float10 __cdecl lego::game::LegoObject_MoveAnimation(LegoObject *liveObj,float elapsed);
BOOL __cdecl lego::game::LegoObject_UpdateActivityChange(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_SimpleObject_MoveAnimation(LegoObject *in_liveObj,float elapsed);
void __cdecl lego::debug::LegoObject_Debug_DropActivateDynamite(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryDynamite_FUN_00448ac0(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_PlaceCarriedBirdScarerAt(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_PlaceBirdScarer_AndTickDown(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryElecFence_FUN_00448d20(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_TryBuildPath_FUN_00448f10(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryUpgrade_FUN_00448f50(LegoObject *in_liveObj,LegoObject *targetObj,int targetObjLevel);
BOOL __cdecl lego::game::LegoObject_TryTrain_FUN_00449170(LegoObject *liveObj,LegoObject *targetObj,BOOL set_0xE_or0xF);
BOOL __cdecl lego::game::LegoObject_TryRechargeCarried(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryRepairDrainObject(LegoObject *liveObj,LegoObject *targetObj,BOOL setRouteFlag20,BOOL setLive4Flag400000);
BOOL __cdecl lego::game::LegoObject_TryReinforceBlock(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_TryClear_FUN_00449570(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_MiniFigureHasBeamEquipped(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryAttackRockMonster_FUN_004496f0(LegoObject *liveObj,LegoObject *targetObj);
BOOL __cdecl lego::game::LegoObject_TryAttackObject_FUN_004497e0(LegoObject *in_liveObj,LegoObject *targetObj);
BOOL __cdecl lego::game::LegoObject_TryAttackPath_FUN_004498d0(LegoObject *liveObj,Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_TryDepart_FUN_004499c0(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_RouteToFaceBlock(LegoObject *liveObj,uint bx,uint by,float distFrom);
BOOL __cdecl lego::game::LegoObject_Update_Reinforcing(LegoObject *liveObj,float unused_elapsed,BOOL *out_finished);
void __cdecl lego::game::LegoObject_GoEat_unk(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_TryGoEat_FUN_00449d80(LegoObject *liveObj1,LegoObject *liveObj2);
void __cdecl lego::game::LegoObject_HideAllCertainObjects(void);
void __cdecl lego::game::LegoObject_FlocksCallback_HideCertainObjects(Flocks *flockData,FlocksItem *subdata,void *data);
void __cdecl lego::game::LegoObject_Hide2(LegoObject *liveObj,BOOL hide2);
BOOL __cdecl lego::game::LegoObject_Callback_HideCertainObjects(LegoObject *liveObj,void *unused);
void __cdecl lego::game::LegoObject_Hide(LegoObject *liveObj,BOOL hide);
BOOL __cdecl lego::game::LegoObject_IsHidden(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_FP_GetPositionAndHeading(LegoObject *liveObj,int cameraFrame,Vector3F *out_worldPos,Vector3F *out_dir);
Container * __cdecl lego::game::LegoObject_GetActivityContainer(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_GetDrillNullPosition(LegoObject *liveObj,float *out_xPos,float *out_yPos);
void __cdecl lego::game::LegoObject_FP_Move(LegoObject *liveObj,int forward,int strafe,float rotate);
void __cdecl lego::game::LegoObject_RegisterRechargeSeam(Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_FindNearestRechargeSeam(LegoObject *liveObj,Point2I *optout_blockPos);
void __cdecl lego::game::LegoObject_RegisterSlimySlugHole(Point2I *blockPos);
BOOL __cdecl lego::game::LegoObject_FindNearestSlugHole(LegoObject *liveObj,Point2I *optout_blockPos);
BOOL __cdecl lego::game::LegoObject_FindNearestWall(LegoObject *liveObj,int *out_bx,int *out_by,BOOL min1BlockDist,BOOL allowCorner,BOOL allowReinforced);
BOOL __cdecl lego::game::LegoObject_QsortCompareWallDistances(Vector3F *a,Vector3F *b);
MeshLOD * __cdecl lego::game::LegoObject_LoadMeshLOD(Config *act,char *gameName,char *dirname,LOD_PolyLevel polyLOD,uint numCameraFrames);
BOOL __cdecl lego::game::LegoObject_UpdateBuildingPlacement(LegoObject_Type objType,LegoObject_ID objID,BOOL leftReleased,BOOL rightReleased,Point2F *opt_mouseWorldPos,uint mouseBlockX,uint mouseBlockY,BOOL execute,SelectPlace *selectPlace);
void __cdecl lego::front::LegoObject_LoadObjTtsSFX(Config *config,char *gameName);
int __cdecl lego::game::LegoObject_GetObjTtSFX(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_SetLevelEnding(BOOL ending);
void __cdecl lego::game::LegoObject_FUN_0044b0a0(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_SpawnDropCrystals_FUN_0044b110(LegoObject *in_liveObj,int crystalCount,BOOL param_3);
void __cdecl lego::game::LegoObject_CallsSpawnDropCrystals_FUN_0044b250(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_GenerateTinyRMs_FUN_0044b270(LegoObject *in_liveObj);
void __cdecl lego::game::LegoObject_GenerateSmallSpiders(uint bx,uint by,uint randSeed);
void __cdecl lego::ai::LegoObject_DoThrowLegoman(LegoObject *liveObj,LegoObject *thrownObj);
BOOL __cdecl lego::tools::LegoObject_Tool_IsBeamWeapon(LegoObject_ToolType toolType);
void __cdecl lego::game::LegoObject_MiniFigure_EquipTool(LegoObject *liveObj,LegoObject_ToolType toolType);
BOOL __cdecl lego::game::LegoObject_HasToolEquipped(LegoObject *liveObj,LegoObject_ToolType toolType);
BOOL __cdecl lego::game::LegoObject_TaskHasTool_FUN_0044b780(LegoObject *in_liveObj,AITask_Type taskType);
int __cdecl lego::game::LegoObject_DoGetTool(LegoObject *liveObj,LegoObject_ToolType toolType);
void __cdecl lego::game::LegoObject_Flocks_Initialise(LegoObject *in_liveObj);
void __cdecl lego::math::LegoObject_FlocksMatrix_FUN_0044ba60(Container *cont,Matrix4F *ref_matrix,float scalar);
void __cdecl lego::game::LegoObject_Flocks_Callback_SubdataOrientationAnim(Flocks *flocksData,FlocksItem *subdata,float *pElapsed);
void __cdecl lego::game::LegoObject_Flocks_Container_ReleaseCallback(Flocks *flockData,FlocksItem *subdata,void *data);
void __cdecl lego::game::LegoObject_Flocks_Free(Flocks *flockData);
void __cdecl lego::game::LegoObject_Flocks_SetParameters(LegoObject *liveObj,BOOL additive);
void __cdecl lego::game::LegoObject_Flocks_FUN_0044bef0(LegoObject *liveObj,float elapsed);
void __cdecl lego::game::LegoObject_FlocksDestroy(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_Flocks_Update_FUN_0044c1c0(float *pElapsed);
BOOL __cdecl lego::game::LegoObject_DestroyRockMonster_FUN_0044c290(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_Freeze(LegoObject *liveObj,float freezerTime);
void __cdecl lego::game::LegoObject_FUN_0044c3d0(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_Push(LegoObject *liveObj,Point2F *pushVec2D,float pushDist);
void __cdecl lego::game::LegoObject_UpdatePushing(LegoObject *liveObj,float elapsed);
void __cdecl lego::game::LegoObject_TryEnterLaserTrackerMode(LegoObject *liveObj);
BOOL __cdecl lego::game::LegoObject_Callback_ExitLaserTrackerMode(LegoObject *liveObj,void *unused);
BOOL __cdecl lego::game::LegoObject_MiniFigureHasBeamEquipped2(LegoObject *liveObj);
void __cdecl lego::game::LegoObject_CameraCycleUnits(void);
BOOL __cdecl lego::game::LegoObject_Callback_CameraCycleFindUnit(LegoObject *liveObj,BOOL *opt_pNoBuildings);
void __cdecl lego::light::LightEffects_Initialise(Container *rootSpotlight,Container *rootLight,float initialRed,float initialGreen,float initialBlue);
void __cdecl lego::light::LightEffects_ResetSpotlightColour(void);
void __cdecl lego::light::LightEffects_SetDisabled(BOOL isDisabled);
BOOL __cdecl lego::light::LightEffects_Load(Config *config,char *gameName);
BOOL __cdecl lego::light::LightEffects_LoadBlink(Config *config,char *gameName);
void __cdecl lego::light::LightEffects_SetBlink(float redMax,float greenMax,float blueMax,float changeMax,float waitMin,float waitMax);
BOOL __cdecl lego::light::LightEffects_LoadFade(Config *config,char *gameName);
void __cdecl lego::light::LightEffects_SetFade(float redMin,float greenMin,float blueMin,float redMax,float greenMax,float blueMax,float waitMin,float waitMax,float speedMin,float speedMax,float holdMin,float holdMax);
BOOL __cdecl lego::light::LightEffects_LoadMove(Config *config,char *gameName);
void __cdecl lego::light::LightEffects_SetMove(float waitMin,float waitMax,float speedMin,float speedMax,float distMin,float distMax,float limitX,float limitY,float limitZ);
void __cdecl lego::light::LightEffects_InvalidatePosition(void);
void __cdecl lego::light::LightEffects_Update(float elapsed);
void __cdecl lego::light::LightEffects_UpdateSpotlightColour(void);
void __cdecl lego::light::LightEffects_UpdateBlink(float elapsed);
void __cdecl lego::light::LightEffects_FlipSign(float *ref_value);
void __cdecl lego::light::LightEffects_UpdateFade(float elapsed);
void __cdecl lego::light::LightEffects_RandomizeFadeSpeedRGB(void);
void __cdecl lego::light::LightEffects_UpdateMove(float elapsed);
BOOL __cdecl lego::light::LightEffects_CheckMoveLimit(Vector3F *vector);
void __cdecl lego::light::LightEffects_SetDimmerMode(BOOL isDimoutMode);
void __cdecl lego::light::LightEffects_UpdateDimmer(float elapsed);
void __cdecl lego::front::Loader_Initialise(char *loadScreenName,char *shutdownScreenName,Font *font5HI,char *profileName,Direction progressDirection,char *progressBarName,Area2F *progressWindow,char *loadingText);
void __cdecl lego::front::Loader_Shutdown(char *filename);
void __cdecl lego::front::Loader_display_loading_bar(char *section);
void __cdecl lego::front::Loader_FileLoadCallback(char *filename,uint fileSize,void *data);
void __cdecl lego::front::Loader_display_shutdown(void);
Map3D * __cdecl lego::map::Map3D_Create(Container *root,char *filename,float blockSize,float roughLevel);
void __cdecl lego::map::Map3D_InitRoughness(Map3D *map);
void __cdecl lego::map::Map3D_Remove(Map3D *map);
void __cdecl lego::map::Map3D_SetTextureNoFade(Map3D *map,SurfaceTexture texture);
void __cdecl lego::map::Map3D_SetBlockFadeInTexture(Map3D *map,int bx,int by,SurfaceTexture newTexture,byte direction);
BOOL __cdecl lego::map::Map3D_IsBlockMeshHidden(Map3D *map,int bx,int by);
void __cdecl lego::map::Map3D_UpdateAllBlockNormals(Map3D *map);
BOOL __cdecl lego::map::Map3D_CheckBuildingTolerance(Map3D *map,Point2I *shapePoints,uint shapeCount,float buildTolerance,float buildMaxVariation);
void __cdecl lego::map::Map3D_FlattenShapeVertices(Map3D *map,Point2I *shapePoints,uint shapeCount,float mult_4_0);
void __cdecl lego::map::Map3D_SetBlockRotated(Map3D *map,uint bx,uint by,BOOL on);
void __cdecl lego::map::Map3D_SetBlockVertexModified(Map3D *map,uint vx,uint vy);
void __cdecl lego::map::Map3D_Update(Map3D *map,float elapsedGame);
void __cdecl lego::map::Map3D_UpdateFadeInTransitions(Map3D *map,float elapsedGame);
void __cdecl lego::map::Map3D_AddTextureMapping(Map3D *map,SurfaceTexture texA,SurfaceTexture texB);
void __cdecl lego::map::Map3D_SetTextureSet(Map3D *map,Detail_TextureSet *tset);
void __cdecl lego::map::Map3D_SetBlockTexture(Map3D *map,uint bx,uint by,SurfaceTexture newTexture,byte direction);
void __cdecl lego::map::Map3D_MoveBlockVertices(Map3D *map,uint bx,uint by,float zDist);
void __cdecl lego::map::Map3D_SetPerspectiveCorrectionAll(Map3D *map,BOOL on);
WallHighlightType __cdecl lego::map::Map3D_SetBlockHighlight(Map3D *map,int bx,int by,WallHighlightType highlightType);
WallHighlightType __cdecl lego::map::Map3D_GetBlockHighlight(Map3D *map,int bx,int by);
void __cdecl lego::map::Map3D_ClearBlockHighlight(Map3D *map,int bx,int by);
void __cdecl lego::map::Map3D_Block_SetColour(Map3D *map,int bx,int by,BOOL setColour,float r,float g,float b);
BOOL __cdecl lego::map::Map3D_BlockToWorldPos(Map3D *map,uint bx,uint by,float *out_x,float *out_y);
BOOL __cdecl lego::map::Map3D_WorldToBlockPos_NoZ(Map3D *map,float in_x,float in_y,int *out_bx,int *out_by);
BOOL __cdecl lego::map::Map3D_WorldToBlockPos(Map3D *map,float in_x,float in_y,int *out_bx,int *out_by,float *out_unk_z);
void __cdecl lego::map::Map3D_FUN_0044fad0(Map3D *map,float in_x,float in_y,int *out_x,int *out_y);
BOOL __cdecl lego::map::Map3D_FUN_0044fb30(Map3D *map,Point2F *wPos2D,Point2F *optout_blockPosf,Point2F *optout_centerDir);
float10 __cdecl lego::map::Map3D_GetWorldZ(Map3D *map,float xPos,float yPos);
void __cdecl lego::map::Map3D_FUN_0044fd70(Map3D *map,float in_x,float in_y,Vector3F *out_vector);
BOOL __cdecl lego::map::Map3D_FUN_0044fe50(Map3D *map,float xPos,float yPos,BOOL diagonal,float unkMultiplier,float *out_xOut,float *out_yOut);
float10 __cdecl lego::map::Map3D_UnkCameraXYFunc_RetZunk(Map3D *map,float xPos,float yPos);
void __cdecl lego::map::Map3D_GetBlockFirstVertexPosition(Map3D *map,int vx,int vy,Vector3F *out_vector);
BOOL __cdecl lego::map::Map3D_GetBlockVertexPositions(Map3D *map,uint bx,uint by,Vector3F *out_vertPoses);
void __cdecl lego::map::Map3D_GetBlockVertexPositions_NoRot(Map3D *map,uint bx,uint by,Vector3F *out_vertPoses);
BOOL __cdecl lego::map::Map3D_IsInsideDimensions(Map3D *map,uint bx,uint by);
BOOL __cdecl lego::map::Map3D_GetIntersections(Map3D *map,Viewport *view,uint mouseX,uint mouseY,uint *out_bx,uint *out_by,Vector3F *out_vector);
BOOL __cdecl lego::map::Map3D_Intersections_Sub1_FUN_00450820(Map3D *map,Vector3F *rayOrigin,Vector3F *ray,Vector3F *out_endPoint,Point2I *out_blockPos,int unkCount);
void __cdecl lego::map::Map3D_AddVisibleBlocksInRadius_AndDoCallbacks(Map3D *map,int bx,int by,int radius,XYCallback opt_callback);
void __cdecl lego::map::Map3D_HideBlock(Map3D *map,int bx,int by,BOOL hide);
void __cdecl lego::map::Map3D_AddVisibleBlock(Map3D *map,int bx,int by);
void __cdecl lego::map::Map3D_HideVisibleBlocksList(Map3D *map);
void __cdecl lego::map::Map3D_BlockVertexToWorldPos(Map3D *map,uint bx,uint by,float *out_xPos,float *out_yPos,float *out_zPos);
float10 __cdecl lego::map::Map3D_BlockSize(Map3D *map);
int __cdecl lego::map::Map3D_CheckRoutingComparison_FUN_00450b60(int param_1,int param_2,int param_3,int param_4);
void __cdecl lego::map::Map3D_SetBlockUVWobbles(Map3D *map,uint bx,uint by,BOOL on);
void __cdecl lego::map::Map3D_SetEmissive(Map3D *map,BOOL on);
void __cdecl lego::map::Map3D_UpdateTextureUVs(Map3D *map,float elapsedGame);
void __cdecl lego::map::Map3D_UpdateBlockNormals(Map3D *map,uint bx,uint by);
BOOL __cdecl lego::map::Map3D_BlockPairHasTextureMatch(Map3D *map,uint bx1,uint by1,uint bx2,uint by2);
void __cdecl lego::map::Map3D_SetBlockDirectionNormal(Map3D *map,uint bx,uint by,Direction direction,Vector3F *normal);
BOOL __cdecl lego::map::Map3D_GetBlockDirectionNormal(Map3D *map,uint bx,uint by,Direction direction,Vector3F *out_normal);
void __cdecl lego::map::Map3D_MoveBlockDirectionVertex(Map3D *map,uint bx,uint by,Direction direction,Vector3F *vertDist);
void __cdecl lego::map::Map3D_GenerateBlockPlaneNormals(Map3D *map,uint bx,uint by);
void __cdecl lego::map::Map3D_MapFileGetSpecs(MapFileInfo *mapFileInfo,uint *out_width,uint *out_height);
ushort __cdecl lego::map::Map3D_MapFileBlockValue(MapFileInfo *mapFile,uint bx,uint by,uint gridWidth);
BOOL __cdecl lego::map::Map3D_Intersections_Sub2_FUN_004518a0(Map3D *map,uint bx,uint by,Vector3F *rayOrigin,Vector3F *ray,Vector3F *out_vector);
MeshLOD * __cdecl lego::gfx::MeshLOD_Create(MeshLOD *opt_prevMeshLOD,char *partName,char *dirname,char *meshName,uint setID);
MeshLOD * __cdecl lego::gfx::MeshLOD_CreateEmpty(MeshLOD *opt_prevMeshLOD,char *partName,uint setID);
MeshLOD * __cdecl lego::gfx::MeshLOD_Clone(MeshLOD *srcMeshLOD);
void __cdecl lego::gfx::MeshLOD_SwapTarget(MeshLOD *meshLOD,Container *contActTarget,BOOL restore,uint setID);
void __cdecl lego::gfx::MeshLOD_RemoveTargets(MeshLOD *meshLOD);
void __cdecl lego::gfx::MeshLOD_Free(MeshLOD *meshLOD);
void __cdecl lego::game::Message_Initialise(void);
void __cdecl lego::game::Message_RemoveEventsWithObject(LegoObject *liveObj);
Message_Type __cdecl lego::game::Message_ParsePTLName(char *ptlName);
void __cdecl lego::game::Message_RegisterHotKeyEvent(Keys8 key,Message_Type messageType,LegoObject *argument1Obj,undefined4 argument2,Point2I *opt_blockPos);
void __cdecl lego::game::Message_PostEvent(Message_Type messageType,LegoObject *argument1Obj,undefined4 argument2,Point2I *opt_blockPos);
void __cdecl lego::game::Message_Update(void);
void __cdecl lego::game::Message_PickRandomFloorBlock(LegoObject *liveObj);
void __cdecl lego::game::Message_RemoveObjectReference(LegoObject *liveObj);
BOOL __cdecl lego::game::Message_CopySelectedUnits(LegoObject ***out_unitsList,uint *out_unitsCount);
LegoObject ** __cdecl lego::game::Message_GetSelectedUnits2(uint *out_count);
BOOL __cdecl lego::game::Message_AnyUnitSelected(void);
LegoObject * __cdecl lego::game::Message_GetPrimarySelectedUnit(void);
LegoObject ** __cdecl lego::game::Message_GetSelectedUnits(void);
uint __cdecl lego::game::Message_GetNumSelectedUnits(void);
void __cdecl lego::game::Message_CleanupSelectedUnitsCount(void);
BOOL __cdecl lego::game::Message_IsUnitSelected(LegoObject *liveObj,uint *optout_index);
BOOL __cdecl lego::game::Message_FindIndexOfObject(LegoObject **objsTable,uint objsCount,LegoObject *thisObj,uint *optout_index);
BOOL __cdecl lego::game::Message_IsObjectDoubleSelectable(LegoObject *liveObj);
BOOL __cdecl lego::game::Message_SelectObject(LegoObject *liveObj,BOOL noDoubleSelect);
BOOL __cdecl lego::game::Message_SelectObject2(LegoObject *liveObj,BOOL noDoubleSelect,BOOL interrupt);
BOOL __cdecl lego::game::Message_IsObjectSelectable(LegoObject *liveObj);
void __cdecl lego::game::Message_ReduceSelectedUnits(void);
void __cdecl lego::game::Message_ClearSelectedUnits(void);
BOOL __cdecl lego::game::Message_DeselectObject(LegoObject *liveObj);
uint __cdecl lego::game::Message_Debug_DestroySelectedUnits(void);
BOOL __cdecl lego::game::Message_EnterFirstPersonView(uint cameraFrame);
BOOL __cdecl lego::nerps::NERPsFile_LoadScriptFile(char *filename);
BOOL __cdecl lego::nerps::NERPsFile_LoadMessageFile(char *filename);
char * __cdecl lego::nerps::NERPsFile_GetMessageLine(uint lineIndex);
BOOL __cdecl lego::nerps::NERPsFile_Free(void);
void __cdecl lego::nerps::NERPsRuntime_LoadLiteral(NERPsInstruction *ref_instruction);
void __cdecl lego::nerps::NERPsRuntime_Execute(float elapsedAbs);
int __cdecl lego::nerps::funcs::NERPFunc__SetGameSpeed(int *stack);
void __cdecl lego::nerps::NERPs_SetHasNextButton(BOOL hasNextButton);
void __cdecl lego::nerps::NERPsRuntime_RepeatMessage(void);
void __cdecl lego::nerps::NERPsRuntime_AdvanceMessage(void);
int __cdecl lego::nerps::funcs::NERPFunc__GetMessagesAreUpToDate(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SupressArrow(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AdvanceMessage(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AllowCameraMovement(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__ClickOnlyObjects(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__ClickOnlyMap(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__ClickOnlyIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__ClickOnlyCalltoarms(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__DisallowAll(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashCallToArmsIcon(int *stack);
void __cdecl lego::nerps::NERPsRuntime_UpdateTimers(float elapsed);
int __cdecl lego::nerps::funcs::NERPFunc__GetTimer0(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTimer1(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTimer2(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTimer3(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTimer0(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTimer1(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTimer2(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTimer3(int *stack);
void __cdecl lego::nerps::NERPsRuntime_EndExecute(float elapsedAbs);
int __cdecl lego::nerps::funcs::NERPFunc__CameraLockOnMonster(int *stack);
BOOL __cdecl lego::nerps::NERPsRuntime_LiveObject_GetIfRockMonsterAnd_FUN_004542e0(LegoObject *liveObj,LegoObject **out_liveObj);
int __cdecl lego::nerps::funcs::NERPFunc__CameraLockOnObject(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__CameraUnlock(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__CameraZoomIn(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__CameraZoomOut(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__CameraRotate(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSelectedRecordObject(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetCrystalPriority(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetMonsterAttackPowerstation(int *stack);
BOOL __cdecl lego::nerps::NERPs_LegoObject_Callback_SetMonsterAttack(LegoObject *liveObj,SearchNERPsSetMonsterAttack *search);
int __cdecl lego::nerps::funcs::NERPFunc__SetMonsterAttackNowt(int *stack);
void __cdecl lego::nerps::NERPs_SetObjectsLevel(char *objName,uint objLevel);
BOOL __cdecl lego::nerps::NERPs_LiveObject_Callback_SetLevelOfObjects(LegoObject *liveObj,SearchSetObjectsLevel_8c *search);
BOOL __cdecl lego::nerps::NERPs_LiveObject_Callback_CountRecordObjectsAtBlock(BlockPointer *blockPointer,int bx,int by,SearchNERPsCountRecordObjects *search);
int __cdecl lego::nerps::funcs::NERPFunc__GetRecordObjectAtTutorial(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRecordObjectAmountAtTutorial(int *stack);
void __cdecl lego::nerps::NERPsRuntime_DrawTutorialIcon(Lego_Level *level,Viewport *viewMain,float elapsedGame,float elapsedAbs);
int __cdecl lego::nerps::funcs::NERPFunc__SetRecordObjectPointer(int *stack);
int __cdecl lego::nerps::NERPs_GetIconClicked(Interface_MenuItemType *pMenuIcon);
int __cdecl lego::nerps::funcs::NERPFunc__GetOxygenLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GenerateSlug(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetAttackDefer(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetCallToArms(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetCallToArmsButtonClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetRockMonster(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRockMonstersDestroyed(int *stack);
void __cdecl lego::nerps::NERPsRuntime_IncHiddenObjectsFound(LegoObject_Type unused_objType);
void __cdecl lego::nerps::NERPsRuntime_ClearHiddenObjectsFound(void);
int __cdecl lego::nerps::funcs::NERPFunc__GetHiddenObjectsFound(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetHiddenObjectsFound(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetUpgradeBuildingIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetUpgradeBuildingIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashUpgradeBuildingIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGoBackIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGoBackIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGoBackIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRockMonsterRunningAway(int *stack);
BOOL __cdecl lego::nerps::NERPs_LiveObject_Callback_SetRockMonsterHealthType(LegoObject *liveObj,SearchNERPsSetObjectHealthPain *search);
int __cdecl lego::nerps::funcs::NERPFunc__SetRockMonsterPainThreshold(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetRockMonsterHealth(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetPauseGame(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetAnyKeyPressed(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetIconPos(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetIconSpace(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetIconWidth(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetLevelCompleted(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetLevelFail(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGameFail(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTutorialPointer(int *stack);
int __cdecl lego::nerps::NERPsRuntime_SetSubmenuIconClicked(char *itemName,int clickedCount);
int __cdecl lego::nerps::NERPsRuntime_FlashSubmenuIcon(char *objName,BOOL flash);
BOOL __cdecl lego::nerps::NERPsRuntime_Enumerate_SetTutorialBlockClicks(BlockPointer *blockPointer,uint bx,uint by,int *pClickCount);
int __cdecl lego::nerps::funcs::NERPFunc__SetTutorialBlockClicks(int *stack);
BOOL __cdecl lego::nerps::NERPsRuntime_Enumerate_SetTutorialCrystals(BlockPointer *blockPointer,uint bx,uint by,int *pCrystalCount);
int __cdecl lego::nerps::funcs::NERPFunc__SetTutorialCrystals(int *stack);
BOOL __cdecl lego::nerps::NERPs_SetOreAtBlock(BlockPointer *blockPointer,uint bx,uint by,int *pGenerateOre);
int __cdecl lego::nerps::funcs::NERPFunc__SetOreAtIconPositions(int *stack);
int __cdecl lego::nerps::NERPsRuntime_CountSelectedUnits_ByObjectName(char *objName);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSmallTruckSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSmallDiggerSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRapidRiderSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSmallHelicopterSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGraniteGrinderSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetChromeCrusherSelected(int *stack);
BOOL __cdecl lego::nerps::NERPs_Game_DoCallbacks_ByObjectName(char *objName);
BOOL __cdecl lego::nerps::NERPs_LiveObject_Callback_ByObjectTypeIndex_IsDriving(LegoObject *liveObj1,LegoObject *liveObj_template);
int __cdecl lego::nerps::funcs::NERPFunc__AddPoweredCrystals(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddStoredOre(int *stack);
BOOL __cdecl lego::nerps::NERPsRuntime_Callback_GetTutorialCrystals(BlockPointer *blockPointer,uint bx,uint by,int *out_tutorialCrystals);
int __cdecl lego::nerps::funcs::NERPFunc__GetTutorialCrystals(int *stack);
BOOL __cdecl lego::nerps::NERPsRuntime_Callback_GetTutorialBlockClicks(BlockPointer *blockPointer,uint bx,uint by,int *out_clicks);
int __cdecl lego::nerps::funcs::NERPFunc__GetTutorialBlockClicks(int *stack);
int __cdecl lego::nerps::NERPsRuntime_GetLevelObjectsBuilt(char *objName,int objLevel);
BOOL __cdecl lego::nerps::NERPsRuntime_LiveObjectCallback_GetPoweredObjectsBuilt(LegoObject *liveObj,SearchObjectTypeCount_c *search);
uint __cdecl lego::nerps::NERPsRuntime_GetPreviousLevelObjectsBuilt(char *objName,int objLevel);
int __cdecl lego::nerps::NERPs_SubMenu_GetBuildingVehicleIcon_ByObjectName(char *objName);
BOOL __cdecl lego::nerps::NERPsRuntime_FlashIcon(Interface_MenuItemType menuIcon,BOOL flash);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureinGraniteGrinder(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureinChromeCrusher(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureinSmallDigger(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureinRapidRider(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureinSmallTruck(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFigureinSmallHelicopter(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetBarracksLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetDocksLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGeoDomeLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetPowerstationLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetToolStoreLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGunstationLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTeleportPadLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetSuperTeleportLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetUpgradeStationLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetBarracksSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetDocksSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGeoDomeSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPowerstationSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetToolStoreSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGunstationSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTeleportPadSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSuperTeleportSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetUpgradeStationSelected(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredBarracksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredDocksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredGeodomeBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredPowerstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredToolStoresBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredGunstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredTeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredVehicleTeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPoweredUpgradeStationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetBarracksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetDocksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGeodomeBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPowerstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetToolStoresBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGunstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetVehicleTeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetUpgradeStationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1BarracksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1DocksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1GeodomeBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1PowerstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1ToolStoresBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1GunstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1TeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1VehicleTeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel1UpgradeStationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2BarracksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2DocksBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2GeodomeBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2PowerstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2ToolStoresBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2GunstationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2TeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2VehicleTeleportsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLevel2UpgradeStationsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetBarracksIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGeodomeIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPowerstationIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetToolStoreIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGunstationIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTeleportPadIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetVehicleTransportIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetUpgradeStationIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetBarracksIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGeodomeIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetPowerstationIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetToolStoreIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGunstationIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTeleportPadIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetVehicleTransportIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetUpgradeStationIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashBarracksIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGeodomeIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashPowerStationIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashToolStoreIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGunstationIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashTeleportPadIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashVehicleTransportIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashUpgradeStationIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPathsBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetStudCount(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSmallHelicoptersOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGraniteGrindersOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRapidRidersOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSmallDiggersOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetSlugsOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMiniFiguresOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetOreRefineriesBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetCrystalRefineriesBuilt(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTeleportIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetDynamiteClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMountIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTrainIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetDropSonicBlasterIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGetToolIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGetPusherIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGetSonicBlasterIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTrainSailorIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTrainPilotIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTrainDriverIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetGetLaserIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetDismountIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetDigIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetBuildIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetLayPathIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetPlaceFenceIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTeleportIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetDynamiteClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTrainIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTrainDriverIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTrainSailorIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGetToolIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetDropSonicBlasterIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGetLaserIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGetPusherIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetGetSonicBlasterIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetDismountIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTrainPilotIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetMountIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetDigIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetBuildIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetLayPathIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetPlaceFenceIconClicked(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashTeleportIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashDynamiteIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashMountIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashTrainIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashTrainDriverIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashTrainPilotIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashTrainSailorIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashDismountIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGetToolIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashDropSonicBlasterIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGetLaserIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGetPusherIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashGetSonicBlasterIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashDigIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashBuildIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashLayPathIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__FlashPlaceFenceIcon(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRandom(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRandomTrueFalse(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRandom10(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetRandom100(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetCrystalsPickedUp(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetCrystalsCurrentlyStored(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__False(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetOrePickedUp(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetOreCurrentlyStored(int *stack);
TutorialFlags __cdecl lego::nerps::funcs::NERPFunc__GetTutorialFlags(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR0(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR1(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR2(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR3(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR4(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR5(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR6(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetR7(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR0(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR1(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR2(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR3(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR4(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR5(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR6(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__AddR7(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR0(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR1(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR2(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR3(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR4(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR5(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR6(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SubR7(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR0(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR1(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR2(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR3(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR4(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR5(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR6(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetR7(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTutorialFlags(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTrainFlags(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTrainFlags(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMonstersOnLevel(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetBuildingsTeleported(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetBuildingsTeleported(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetMessagePermit(int *stack);
BOOL __cdecl lego::nerps::NERPsRuntime_IsMessagePermit(void);
BOOL __cdecl lego::nerps::NERPsRuntime_GetMessageWait(void);
int __cdecl lego::nerps::funcs::NERPFunc__SetMessageWait(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetMessageTimerValues(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMessageTimer(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetMessage(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetObjectiveSwitch(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetObjectiveSwitch(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetObjectiveShowing(int *stack);
void __cdecl lego::nerps::NERPs_RestartMessageSample(void);
void __cdecl lego::nerps::NERPs_Level_NERPMessage_Parse(char *text,char *out_buffer,BOOL updateTimer);
void __cdecl lego::nerps::NERPs_InitBlockPointersTable(Lego_Level *level);
BlockPointer * __cdecl lego::nerps::NERPs_GetBlockPointer(Lego_Level *level,int blockPointerID);
void __cdecl lego::nerps::NERPs_FreeBlockPointers(void);
void __cdecl lego::nerps::NERPsRuntime_EnumerateBlockPointers(int blockPointerID,NERPsBlockPointerCallback callback,void *data);
BOOL __cdecl lego::nerps::NERPsRuntime_TutorialActionCallback(BlockPointer *unused,uint bx,uint by,SearchNERPsTutorialAction *search);
BOOL __cdecl lego::nerps::NERPs_LiveObject_CallbackCheck_FUN_00457320(LegoObject *liveObj,SearchNERPsTutorialAction *search);
BOOL __cdecl lego::nerps::NERPs_LiveObject_Callback_SetBool3f8IfAtBlockPos_FUN_00457390(LegoObject *liveObj,SearchNERPsTutorialAction *search);
int __cdecl lego::nerps::funcs::NERPFunc__MakeSomeoneOnThisBlockPickUpSomethingOnThisBlock(int *stack);
void __cdecl lego::nerps::NERPsRuntime_SetTutorialPointer(int blockPointerIdx,int unkMode0_1);
int __cdecl lego::nerps::funcs::NERPFunc__SetCongregationAtTutorial(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetRockMonsterAtTutorial(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetCameraGotoTutorial(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetCameraAtTutorial(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTutorialBlockIsGround(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetTutorialBlockIsPath(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTutorialBlockIsGround(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__SetTutorialBlockIsPath(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetUnitAtBlock(int *stack);
int __cdecl lego::nerps::funcs::NERPFunc__GetMonsterAtTutorial(int *stack);
void __cdecl lego::game::Objective_LoadObjectiveText(Config *config,char *gameName,char *levelName,Lego_Level *level,char *filename);
void __cdecl lego::game::Objective_LoadLevel(Config *config,char *gameName,char *levelName,Lego_Level *level,uint screenWidth,uint screenHeight);
void __cdecl lego::game::Objective_SetCryOreObjectives(Lego_Level *level,uint crystals,uint ore);
void __cdecl lego::game::Objective_SetBlockObjective(Lego_Level *level,Point2I *blockPos);
void __cdecl lego::game::Objective_SetTimerObjective(Lego_Level *level,float timer,BOOL hitTimeFail);
void __cdecl lego::game::Objective_SetConstructionObjective(Lego_Level *level,LegoObject_Type objType,LegoObject_ID objID);
BOOL __cdecl lego::game::Objective_IsObjectiveAchieved(void);
void __cdecl lego::game::Objective_SetEndTeleportEnabled(BOOL on);
void __cdecl lego::game::Objective_SetStatus(LevelStatus status);
void __cdecl lego::game::Objective_StopShowing(void);
BOOL __cdecl lego::game::Objective_IsShowing(void);
BOOL __cdecl lego::game::Objective_HandleKeys(BOOL nextKeyPressed,BOOL leftButtonReleased,BOOL *out_exitGame);
void __cdecl lego::game::Objective_Update(TextWindow *textWnd,Lego_Level *level,float elapsedGame,float elapsedAbs);
BOOL __cdecl lego::game::Objective_CheckCompleted(Lego_Level *level,BOOL *out_timerStillRunning,float elapsed);
BOOL __cdecl lego::game::Objective_Callback_CheckCompletedObject(LegoObject *liveObj,ObjectiveData *objective);
void __cdecl lego::game::ObjectRecall_StoreMiniFigure(LegoObject *liveObj);
BOOL __cdecl lego::game::ObjectRecall_RecallMiniFigure(LegoObject *liveObj);
void __cdecl lego::save::ObjectRecall_Save_FreeObjectRecall(void);
void __cdecl lego::save::ObjectRecall_Save_CopyToNewObjectRecallData(void);
BOOL __cdecl lego::save::ObjectRecall_Save_CreateNewObjectRecall(void);
BOOL __cdecl lego::save::ObjectRecall_IsLoaded(void);
BOOL __cdecl lego::save::ObjectRecall_SaveRROSFile(char *filename);
BOOL __cdecl lego::save::ObjectRecall_LoadRROSFile(char *filename);
void __cdecl lego::front::ObjInfo_Initialise(Config *config,char *gameName);
BOOL __cdecl lego::front::ObjInfo_LoadHealthBar(Config *config,char *gameName);
BOOL __cdecl lego::front::ObjInfo_LoadHunger(Config *config,char *gameName);
void __cdecl lego::front::ObjInfo_LoadHungerImages(Config *config,char *gameName);
BOOL __cdecl lego::front::ObjInfo_LoadBubble(Config *config,char *gameName);
void __cdecl lego::front::ObjInfo_DrawHealthBar(LegoObject *liveObj,int screenX,int screenY);
void __cdecl lego::front::ObjInfo_DrawHungerImage(LegoObject *liveObj,int screenX,int screenY);
void __cdecl lego::front::ObjInfo_DrawBubbleImage(Image *image,int screenX,int screenY);
void __cdecl lego::front::Panel_Initialise(void);
void __cdecl lego::front::Panel_LoadInterfaceButtons_ScrollInfo(void);
void __cdecl lego::front::Panel_ResetAll(void);
void __cdecl lego::front::Panel_LoadImage(char *filename,Panel_Type panelType,PanelDataFlags flags);
BOOL __cdecl lego::front::Panel_GetPanelType(char *panelName,Panel_Type *out_panelType);
BOOL __cdecl lego::front::Panel_TestPointInsideImage(Panel_Type panelType,int screenX,int screenY);
BOOL __cdecl lego::front::Panel_GetButtonType(Panel_Type panelType,char *buttonName,PanelButtonType *out_buttonType);
uint __cdecl lego::front::Panel_PrintF(Panel_Type panelType,Font *font,int x,int y,BOOL center,char *msg,...);
PanelTextWindow * __cdecl lego::front::Panel_TextWindow_Create(Panel_Type panelType,Font *font,Area2F *rect,uint size);
void __cdecl lego::front::Panel_TextWindow_PrintF(PanelTextWindow *panelWnd,char *msg,...);
void __cdecl lego::front::Panel_TextWindow_Update(PanelTextWindow *textWnd,uint posFromEnd,float elapsed);
void __cdecl lego::front::Panel_TextWindow_Clear(PanelTextWindow *panelWnd);
void __cdecl lego::front::Panel_TextWindow_GetInfo(PanelTextWindow *panelWnd,uint *out_linesCount,uint *out_linesCapacity);
void __cdecl lego::front::Panel_SetSlidingPositions(Panel_Type panelType,int xOpen,int yOpen,int xClosed,int yClosed);
void __cdecl lego::front::Panel_SetPosition(Panel_Type panelType,float x,float y);
void __cdecl lego::front::Panel_GetPosition(Panel_Type panelType,float *out_x,float *out_y);
void __cdecl lego::front::Panel_Draw(Panel_Type panelType,float elapsedAbs);
void __cdecl lego::front::Panel_DrawButtons(Panel_Type panelType);
void __cdecl lego::front::Panel_Button_Hide(Panel_Type panelType,PanelButtonType buttonType,BOOL hide);
void __cdecl lego::front::Panel_ToggleOpenClosed(Panel_Type panelType);
BOOL __cdecl lego::front::Panel_IsFullyClosed(Panel_Type panelType);
BOOL __cdecl lego::front::Panel_IsFullyOpen(Panel_Type panelType);
BOOL __cdecl lego::front::Panel_IsSliding(Panel_Type panelType);
void __cdecl lego::front::Panel_Button_SetToggleable(Panel_Type panelType,PanelButtonType buttonType,BOOL toggleable);
void __cdecl lego::front::Panel_Button_SetToggled(Panel_Type panelType,PanelButtonType buttonType,BOOL checked);
void __cdecl lego::front::Panel_CreateButtons(Panel_Type panelType,uint count,PanelButton_Type *buttonTypes,Area2F *areas,char **imageNames,char **imageHoverNames,char **imagePressedNames,ToolTip_Type *toolTips);
BOOL __cdecl lego::front::Panel_CheckCollision(float elapsedAbs,uint mouseX,uint mouseY,BOOL leftButton,BOOL leftButtonLast,BOOL *out_panelCollision);
BOOL __cdecl lego::front::Panel_CheckButtonCollision(Panel_Type *out_panelType,PanelButtonType *out_panelButton,int mouseX,int mouseY,BOOL leftButton,BOOL leftButtonLast,BOOL *optout_param_7,BOOL *optout_panelCollision);
BOOL __cdecl lego::front::Panel_TestPointInsideRect(PanelData *panel,Rect2F *rect,int mouseX,int mouseY);
void __cdecl lego::front::Panel_PriorityList_ResetButtons(void);
void __cdecl lego::front::Panel_PriorityList_HandleButton(PanelButtonPriorityList buttonType);
void __cdecl lego::front::Panel_ScrollInfo_Initialise(void);
void __cdecl lego::front::Panel_Encyclopedia_Initialise(void);
BOOL __cdecl lego::front::Panel_TestPointInsideCircle(int x,int y,int centerX,int centerY,int radius);
void __cdecl lego::front::Panel_RotationControl_NormalizePointRadius(int x,int y,int radius,float *out_x,float *out_y);
void __cdecl lego::front::Panel_RotationControl_ClampPointInsideCircle(int *ref_mouseX,int *ref_mouseY,int centerX,int centerY,int radius);
void __cdecl lego::front::Panel_RotationControl_Initialise(Config *config,char *gameName);
BOOL __cdecl lego::front::Panel_RotationControl_HandleRotation(int mouseX,int mouseY,float elapsedAbs);
void __cdecl lego::front::Panel_RotationControl_HandleButtons(PanelButton_Type buttonType,float elapsedAbs);
void __cdecl lego::front::Panel_Button_GetArea(Panel_Type panelType,PanelButtonType buttonType,Area2F *out_area);
void __cdecl lego::front::Panel_Crystals_Initialise(char *smallCrystal,char *usedCrystal,char *noSmallCrystal);
void __cdecl lego::front::Panel_Crystals_LoadRewardQuota(Config *config,char *gameName,char *levelName);
void __cdecl lego::front::Panel_Crystals_Draw(uint crystals,uint usedCrystals,float elapsedGame_unused);
void __cdecl lego::front::Panel_AirMeter_Initialise(char *airJuiceName,uint juiceX,uint juiceY,uint juiceLength,char *noAirName,uint noAirX,uint noAirY);
void __cdecl lego::front::Panel_AirMeter_DrawJuice(Panel_Type panelType,float oxygen);
void __cdecl lego::front::Panel_AirMeter_SetOxygenLow(BOOL o2Low);
void __cdecl lego::front::Panel_AirMeter_DrawOxygenLow(Panel_Type panelType);
void __cdecl lego::front::Panel_CryOreSideBar_Initialise(char *sidebarName,uint xPos,uint yPos,uint meterOffset);
void __cdecl lego::front::Panel_CryOreSideBar_ChangeOreMeter(BOOL increment,uint amount);
void __cdecl lego::front::Panel_CryOreSideBar_Draw(void);
BOOL __cdecl lego::front::Panel_SetCurrentAdvisorFromButton(Panel_Type panelType,PanelButtonType buttonType,BOOL setFlag2);
BOOL __cdecl lego::front::Panel_GetAdvisorTypeFromButton(Panel_Type panelType,PanelButtonType buttonType,Advisor_Type *out_advisorType);
void __cdecl lego::front::Pointer_Initialise(void);
void __cdecl lego::front::Pointer_Load(Config *config);
BOOL __cdecl lego::front::Pointer_GetType(char *name,Pointer_Type *out_pointerType);
Image * __cdecl lego::front::Pointer_GetImage(Pointer_Type pointerType);
void __cdecl lego::front::Pointer_SetCurrent_IfTimerFinished(Pointer_Type pointerType);
void __cdecl lego::front::Pointer_SetCurrent(Pointer_Type pointerType,float timer);
Pointer_Type __cdecl lego::front::Pointer_GetCurrentType(void);
void __cdecl lego::front::Pointer_DrawPointer(uint mouseX,uint mouseY);
void __cdecl lego::front::Pointer_Update(float elapsedAbs);
void __cdecl lego::ai::Priorities_LoadImages(Config *config,char *gameName);
void __cdecl lego::ai::Priorities_Reset(void);
BOOL __cdecl lego::ai::Priorities_LoadLevel(Config *config,char *gameName,char *levelName);
void __cdecl lego::ai::Priorities_LoadPositions(Config *config,char *gameName);
BOOL __cdecl lego::ai::Priorities_HandleInput(uint mouseX,uint mouseY,BOOL leftButton,BOOL leftButtonLast,BOOL leftReleased);
BOOL __cdecl lego::ai::Priorities_ChangePriorityPressed(uint orderIndex,BOOL leftButton,BOOL leftButtonLast);
void __cdecl lego::ai::Priorities_SetHoverArea(Point2F *point,uint widthM1,uint heightM1);
void __cdecl lego::ai::Priorities_MovePriorityUpOrTop(uint orderIndex);
void __cdecl lego::ai::Priorities_MovePriorityTop(uint orderIndex);
void __cdecl lego::ai::Priorities_MovePriorityUp(uint orderIndex);
void __cdecl lego::ai::Priorities_TurnPriorityOff(uint orderIndex);
void __cdecl lego::ai::Priorities_MoveCursorToPriorityUpButton(uint orderIndex);
void __cdecl lego::ai::Priorities_MoveCursorToPriorityImage(uint orderIndex);
void __cdecl lego::ai::Priorities_Draw(void);
BOOL __cdecl lego::game::PTL_Initialise(char *filename,char *gameName);
void __cdecl lego::game::PTL_TranslateEvent(Message_Event *ref_message);
void __cdecl lego::game::RadarMap_SetZoom(RadarMap *radarMap,float zoom);
void __cdecl lego::game::RadarMap_Initialise(void);
RadarMap * __cdecl lego::game::RadarMap_Create(Map3D *map,Area2F *screenRect,float zoom);
void __cdecl lego::game::RadarMap_Free_UnwindMultiUse(RadarMap *radarMap);
void __cdecl lego::game::RadarMap_DrawSurveyDotCircle(RadarMap *radarMap,Point2F *center,float radius,float brightness);
void __cdecl lego::game::RadarMap_Draw(RadarMap *radarMap,Point2F *position);
BOOL __cdecl lego::game::RadarMap_CanShowObject(LegoObject *liveObj);
BOOL __cdecl lego::game::RadarMap_Callback_AddObjectDrawRect(LegoObject *liveObj,RadarMap *radarMap);
BOOL __cdecl lego::game::RadarMap_InsideRadarScreen(RadarMap *radarMap,uint mouseX,uint mouseY);
BOOL __cdecl lego::game::RadarMap_ScreenToWorldBlockPos(RadarMap *radarMap,uint mouseX,uint mouseY,Point2F *optout_worldPos,int *out_bx,int *out_by);
BOOL __cdecl lego::game::RadarMap_TrySelectObject(RadarMap *radarMap,uint mouseX,uint mouseY,LegoObject **out_liveObj,Point2F *optout_objPosition);
BOOL __cdecl lego::game::RadarMap_Callback_FindObjectInClickArea(LegoObject *liveObj,SearchRadarObjectInArea *search);
void __cdecl lego::game::RadarMap_TransformRect(RadarMap *radarMap,Area2F *ref_rect);
BOOL __cdecl lego::game::RadarMap_GetBlockColour(Draw_Rect *drawRect,uint bx,uint by);
BOOL __cdecl lego::reward::Reward_Initialise(void);
void __cdecl lego::reward::Reward_LoadItemSounds(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_LoadItemFonts(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_LoadItemBoxImages(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_LoadItemImages(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_LoadItemText(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_LoadItemFlics(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_Shutdown(void);
void __cdecl lego::reward::Reward_FreeItemImage(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_FreeItemFont(RewardLevelItem *rewardItem);
BOOL __cdecl lego::reward::Reward_LoadGraphics(Config *config,char *gameName);
BOOL __cdecl lego::reward::Reward_LoadButtons(Config *config,char *gameName);
BOOL __cdecl lego::reward::Reward_CreateLevel(void);
void __cdecl lego::reward::Reward_LoadLevelItemImportance(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_LoadLevelItemQuota(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_FreeLevel(void);
RewardLevel * __cdecl lego::reward::GetRewardLevel2(undefined4 unused_rewardID);
RewardLevel * __cdecl lego::reward::GetRewardLevel(void);
void __cdecl lego::reward::RewardQuota_CountUnits(void);
RewardBuildingCounts * __cdecl lego::reward::RewardQuota_CountBuildings(RewardBuildingCounts *out_buildingCounts);
BOOL __cdecl lego::reward::RewardQuota_LiveObjectCallback_CountBuildings(LegoObject *liveObj,RewardBuildingCounts *search);
BOOL __cdecl lego::reward::Reward_Prepare(void);
uint __cdecl lego::reward::Reward_GetLevelObjectsBuilt(char *objName,int objLevel,BOOL currentLevel);
BOOL __cdecl lego::reward::Reward_PrepareCalculate(void);
BOOL __cdecl lego::reward::Reward_PrepareScroll(void);
BOOL __cdecl lego::reward::Reward_PrepareValueText(void);
BOOL __cdecl lego::reward::Reward_Show(void);
void __cdecl lego::reward::Reward_DrawItem(RewardLevelItem *rewardItem,RewardItemFlags flags,Reward_Type rewardType);
void __cdecl lego::reward::Reward_DrawScore(Reward_Type rewardType);
void __cdecl lego::reward::Reward_HandleButtons(RewardUIState *out_state,BOOL *out_saved);
void __cdecl lego::reward::Reward_GotoSaveMenu(void);
void __cdecl lego::reward::Reward_GotoAdvance(void);
void __cdecl lego::reward::Reward_HandleDebugKeys(Reward_Type *ref_rewardType,RewardUIState *ref_state,BOOL *ref_finished,float *ref_timer);
void __cdecl lego::reward::Reward_PlayFlic(RewardLevelItem *rewardItem);
void __cdecl lego::reward::Reward_UpdateState(Reward_Type *ref_rewardType,RewardUIState *ref_state,float *ref_timer);
void __cdecl lego::reward::Reward_DrawAllValues(Reward_Type *in_rewardType,BOOL *out_finished);
void __cdecl lego::reward::Reward_LoopUpdate(float elapsedSeconds);
BOOL __cdecl lego::reward::Reward_LoopBegin(void);
void __cdecl lego::reward::RewardQuota_UpdateTimers(float elapsedGame);
void __cdecl lego::reward::RewardQuota_WallDestroyed(void);
void __cdecl lego::reward::RewardQuota_CavernDiscovered(void);
void __cdecl lego::reward::RewardQuota_RockMonsterGenerated(void);
void __cdecl lego::reward::RewardQuota_RockMonsterDestroyed(void);
void __cdecl lego::reward::RewardQuota_RockMonsterAttacked(void);
void __cdecl lego::reward::RewardQuota_RockMonsterDamageDealt(float damage);
void __cdecl lego::reward::RewardQuota_MiniFigureDamageTaken(float damage);
RewardScroll * __cdecl lego::reward::RewardScroll_Create(RewardScroll **out_scroll,float zero,float heightDiv20,float width,float bottomSubDiv3pt5,float scrollSpeed);
BOOL __cdecl lego::reward::RewardScroll_Free(RewardScroll **ref_scroll);
RewardScrollLabel * __cdecl lego::reward::RewardScroll_AddLabel(RewardScroll *scroll,char *text,Font *font,float xPos,float yPos,RewardScrollLabelFlags labelFlags);
void __cdecl lego::reward::RewardScroll_SetDelay_Unk(RewardScroll *scroll,float curScrollY);
void __cdecl lego::reward::RewardScroll_AddFlags(RewardScroll *scroll,RewardScrollFlags flags);
BOOL __cdecl lego::reward::RewardScroll_DrawLabels(RewardScroll *scroll);
BOOL __cdecl lego::game::Roof_Initialise(Container *root,uint width,uint height);
BOOL __cdecl lego::game::Roof_SetTexture(char *filename);
void __cdecl lego::game::Roof_Shutdown(void);
void __cdecl lego::game::Roof_SetBlockRoofVertices(uint bx,uint by,Vector3F *vertPos0,Vector3F *vertPos1,Vector3F *vertPos2,Vector3F *vertPos3);
void __cdecl lego::game::Roof_Update(void);
void __cdecl lego::game::Roof_Hide(BOOL hide);
void __cdecl lego::game::Roof_AddVisibleBlock(uint bx,uint by);
void __cdecl lego::game::Roof_HideAllVisibleBlocks(void);
BOOL __cdecl lego::game::Roof_GetBlockPlaneNormal(uint bx,uint by,Vector3F *out_normal);
void __cdecl lego::front::ScrollInfo_Initialise(char *filename,BOOL index,uint unkFlags,int param_4,int param_5);
void __cdecl lego::front::ScrollInfo_SetXYOrSize_Unk(BOOL index,uint x_or_width,uint y_or_height);
void __cdecl lego::front::ScrollInfo_AddStruct1C(BOOL index,BOOL use50InsteadOf4c,Area2F *rect,char *opt_filename1,char *opt_filename2);
void __cdecl lego::front::ScrollInfo_AddCreateStruct28(BOOL index,Area2F *area,int number,int param_4,char *filename);
BOOL __cdecl lego::front::ScrollInfo_Mouse_FUN_00463b60(int *out_param_1,uint mouseX,uint mouseY,BOOL param_4,BOOL param_5);
BOOL __cdecl lego::front::ScrollInfo_FUN_00463ec0(ScrollInfoStruct_20 *param_1,ScrollInfoSubStruct_1c *param_2,int mouseX,int mouseY);
BOOL __cdecl lego::front::ScrollInfo_FUN_00463f50(ScrollInfoStruct_20 *param_1,int mouseX,int mouseY);
void __cdecl lego::front::ScrollInfo_Update(BOOL index);
longlong __cdecl lego::math::ScrollInfo_MathX_RoundToLL(float x);
void __cdecl lego::front::ScrollInfo_GetSubStruct28_Fields1C_20(BOOL index,int *out_field1c,int *out_field20);
void __cdecl lego::front::ScrollInfo_SetSubStruct28_Fields1C_20(BOOL index,int field1c,int field20);
SelectPlace * __cdecl lego::gfx::SelectPlace_Create(Container *root,float tileDepth);
Point2I * __cdecl lego::gfx::SelectPlace_TransformShapePoints(Point2I *translation,Point2I *shapePoints,uint shapeCount,Direction rotation);
Point2I * __cdecl lego::gfx::SelectPlace_CheckAndUpdate(SelectPlace *selectPlace,Point2I *blockPos,Point2I *shapePoints,uint shapeCount,Direction direction,Map3D *map,int waterEntrances);
void __cdecl lego::gfx::SelectPlace_Hide(SelectPlace *selectPlace,BOOL hide);
void __cdecl lego::snd::SFX_Initialise(void);
void __cdecl lego::snd::SFX_Container_SoundTriggerCallback(char *sfxName,Container *cont,void *data);
void __cdecl lego::snd::SFX_SetSamplePopulateMode(BOOL on);
BOOL __cdecl lego::snd::SFX_GetType(char *sfxName,SFX_ID *out_sfxID);
BOOL __cdecl lego::snd::SFX_LoadSampleProperty(char *value,SFX_ID sfxID);
int __cdecl lego::snd::SFX_Random_GetSound3DHandle(SFX_ID sfxID);
void __cdecl lego::snd::SFX_StopGlobalSample(void);
BOOL __cdecl lego::snd::SFX_SetGlobalSampleDurationIfLE0_AndNullifyHandle(float duration);
BOOL __cdecl lego::snd::SFX_Random_SetAndPlayGlobalSample(SFX_ID sfxID,int *optout_handle);
void __cdecl lego::snd::SFX_AddToQueue(SFX_ID sfxID,SoundMode mode);
int __cdecl lego::snd::SFX_Random_PlaySoundNormal(SFX_ID sfxID,BOOL loop);
void __cdecl lego::snd::SFX_Random_SetBufferVolume(SFX_ID sfxID,int volume);
int __cdecl lego::snd::SFX_Random_GetBufferVolume(SFX_ID sfxID);
int __cdecl lego::snd::SFX_Random_PlaySound3DOnContainer(Container *cont,SFX_ID sfxID,BOOL loop,BOOL onCont,Vector3F *opt_wPos);
int __cdecl lego::snd::SFX_Random_PlaySound3DOnFrame(IDirect3DRMFrame3 *frame,SFX_ID sfxID,BOOL loop,BOOL onFrame,Vector3F *opt_wPos);
float10 __cdecl lego::snd::SFX_Random_GetSamplePlayTime(SFX_ID sfxID);
void __cdecl lego::snd::SFX_Sound3D_StopSound(int sound3DHandle);
void __cdecl lego::snd::SFX_Update(float elapsed);
void __cdecl lego::snd::SFX_Sound3D_Update(void);
void __cdecl lego::snd::SFX_SetSoundOn(BOOL soundOn,BOOL stopAll);
void __cdecl lego::snd::SFX_SetSoundOn_AndStopAll(BOOL soundOn);
BOOL __cdecl lego::snd::SFX_IsQueueMode(void);
void __cdecl lego::snd::SFX_SetQueueMode_AndFlush(BOOL on);
void __cdecl lego::snd::SFX_SetQueueMode(BOOL on,BOOL flushQueued);
BOOL __cdecl lego::snd::SFX_IsSoundOn(void);
BOOL __cdecl lego::effect::Smoke_Initialise(void);
void __cdecl lego::effect::Smoke_LoadTextures(char *dirname,char *basename,uint textureCount);
Smoke * __cdecl lego::effect::Smoke_CreateSmokeArea(Container *optin_attachedCont,uint bx,uint by,Vector3F *dirVec,float r,float g,float b,float thickness,float animSpeed,Smoke_Type smokeType,uint randomness,SFX_ID sfxID);
void __cdecl lego::effect::Smoke_RemoveAll(void);
void __cdecl lego::effect::Smoke_Remove(Smoke *smoke,Container *attachedCont);
void __cdecl lego::effect::Smoke_HideAll(BOOL hide);
void __cdecl lego::effect::Smoke_Hide(Smoke *smoke,BOOL hide);
void __cdecl lego::effect::Smoke_Update(float elapsedGame);
void __cdecl lego::effect::Smoke_Group_Show(Smoke *smoke,uint groupID);
void __cdecl lego::effect::Smoke_Group_Update(Smoke *smoke,uint groupID,float elapsedGame);
void __cdecl lego::effect::Smoke_MeshRenderCallback(Mesh *mesh,Smoke *data,Viewport *view);
void __cdecl lego::effect::Smoke_Group_MeshRenderCallback(Smoke *smoke,uint groupID,Viewport *view,Vector3F *lightPos);
void __cdecl lego::game::SpiderWeb_Initialise(Lego_Level *level);
void __cdecl lego::game::SpiderWeb_Shutdown(void);
void __cdecl lego::game::SpiderWeb_Restart(Lego_Level *level);
BOOL __cdecl lego::game::SpiderWeb_SpawnAt(uint bx,uint by);
void __cdecl lego::game::SpiderWeb_Add(int bx,int by,LegoObject *webObj);
BOOL __cdecl lego::game::SpiderWeb_GetAngle(int bx,int by,float *out_theta);
BOOL __cdecl lego::game::SpiderWeb_CheckCollision(LegoObject *liveObj);
BOOL __cdecl lego::game::SpiderWeb_Update(float elapsedGame);
BOOL __cdecl lego::game::SpiderWeb_LiveObjectCallback(LegoObject *liveObj,float *pElapsedGame);
void __cdecl lego::game::SpiderWeb_Remove(int bx,int by);
BOOL __cdecl lego::stats::Stats_Initialise(Config *config,char *gameName);
void __cdecl lego::stats::Stats_AddToolTaskType(LegoObject_ToolType toolType,AITask_Type taskType);
uint __cdecl lego::stats::Stats_GetCostOre(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
uint __cdecl lego::stats::Stats_GetCostCrystal(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
uint __cdecl lego::stats::Stats_GetCostRefinedOre(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
int __cdecl lego::stats::StatsObject_GetCrystalDrain(LegoObject *liveObj);
uint __cdecl lego::stats::StatsObject_GetCapacity(LegoObject *liveObj);
uint __cdecl lego::stats::StatsObject_GetMaxCarry(LegoObject *liveObj);
uint __cdecl lego::stats::StatsObject_GetCarryStart(LegoObject *liveObj);
BOOL __cdecl lego::stats::StatsObject_SetObjectLevel(LegoObject *liveObj,uint newLevel);
float10 __cdecl lego::stats::StatsObject_GetRouteSpeed(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetDrillTimeType(LegoObject *liveObj,Lego_SurfaceType surfaceType);
float10 __cdecl lego::stats::StatsObject_GetRubbleCoef(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetWakeRadius(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetPathCoef(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetCollRadius(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetCollHeight(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetPickSphere(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetPainThreshold(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetAlertRadius(LegoObject *liveObj);
Size2F * __cdecl lego::stats::StatsObject_GetCollBox(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetTrackDist(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetHealthDecayRate(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetEnergyDecayRate(LegoObject *liveObj);
float10 __cdecl lego::stats::Stats_GetOxygenCoef(LegoObject_Type objType,LegoObject_ID objID);
float10 __cdecl lego::stats::StatsObject_GetOxygenCoef(LegoObject *liveObj);
uint __cdecl lego::stats::StatsObject_GetSurveyRadius(LegoObject *liveObj);
StatsFlags1 __cdecl lego::stats::StatsObject_GetStatsFlags1(LegoObject *liveObj);
StatsFlags2 __cdecl lego::stats::StatsObject_GetStatsFlags2(LegoObject *liveObj);
StatsFlags3 __cdecl lego::stats::StatsObject_GetStatsFlags3(LegoObject *liveObj);
StatsFlags1 __cdecl lego::stats::Stats_GetStatsFlags1(LegoObject_Type objType,LegoObject_ID objID);
StatsFlags2 __cdecl lego::stats::Stats_GetStatsFlags2(LegoObject_Type objType,LegoObject_ID objID);
StatsFlags3 __cdecl lego::stats::Stats_GetStatsFlags3(LegoObject_Type objType,LegoObject_ID objID);
float10 __cdecl lego::stats::StatsObject_GetRepairValue(LegoObject *liveObj);
uint __cdecl lego::stats::Stats_GetLevels(LegoObject_Type objType,LegoObject_ID objID);
uint __cdecl lego::stats::Stats_GetWaterEntrances(LegoObject_Type objType,LegoObject_ID objID,uint objLevel);
SFX_ID __cdecl lego::stats::StatsObject_GetDrillSoundType(LegoObject *liveObj,BOOL fade);
SFX_ID __cdecl lego::stats::StatsObject_GetEngineSound(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetRestPercent(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetCarryMinHealth(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetAttackRadius(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetStampRadius(LegoObject *liveObj);
uint __cdecl lego::stats::StatsObject_GetNumOfToolsCanCarry(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetUpgradeTime(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFunctionCoef(LegoObject *liveObj);
uint __cdecl lego::stats::Stats_GetUpgradeCostOre(LegoObject_Type objType,LegoObject_ID objID,LegoObject_UpgradeType upgradeType);
uint __cdecl lego::stats::Stats_GetUpgradeCostStuds(LegoObject_Type objType,LegoObject_ID objID,LegoObject_UpgradeType upgradeType);
BOOL __cdecl lego::stats::Stats_FindToolFromTaskType(AITask_Type taskType,LegoObject_ToolType *out_toolType);
float10 __cdecl lego::stats::StatsObject_GetFlocks_Height(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFlocks_Randomness(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFlocks_Turn(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFlocks_Tightness(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFlocks_Speed(LegoObject *liveObj);
uint __cdecl lego::stats::StatsObject_GetFlocks_Size(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFlocks_GoalUpdate(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFlocks_AttackTime(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetAwarenessRange(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetPusherDist(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetPusherDamage(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetLaserDamage(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFreezerDamage(LegoObject *liveObj);
float10 __cdecl lego::stats::StatsObject_GetFreezerTime(LegoObject *liveObj);
void __cdecl lego::debug::StatsObject_Debug_ToggleSelfPowered(LegoObject *liveObj);
void __cdecl lego::unk::Teleporter_RemoveAll(TeleporterService *teleporter);
void __cdecl lego::unk::Teleporter_Restart(void);
BOOL __cdecl lego::unk::Teleporter_LiveObjectCallback_Service(LegoObject *liveObj,SearchTeleporter_10 *search);
Point2F __cdecl lego::unk::Teleporter_GetCameraPosition(void);
void __cdecl lego::unk::Teleporter_Add(TeleporterService *teleporter);
BOOL __cdecl lego::unk::Teleporter_LiveObjectCallback_Unk(LegoObject *liveObj,TeleportObjectType teleportObjType);
BOOL __cdecl lego::unk::Teleporter_ServiceAll(TeleportObjectType teleportObjTypes);
void __cdecl lego::unk::Teleporter_Start(TeleportObjectType teleportObjType,uint modeFlags,uint teleportFlags);
BOOL __cdecl lego::unk::Teleporter_LiveObjectCallback_Update(LegoObject *liveObj,void *data_unused);
BOOL __cdecl lego::unk::Teleporter_UpdateService(TeleporterService *teleporter,float elapsedGame);
void __cdecl lego::unk::Teleporter_Update(float elapsedGame);
LegoObject_Type __cdecl lego::unk::Teleporter_GetServiceObjectType(TeleportObjectType teleportObjType);
void __cdecl lego::front::Text_Load(TextWindow *param_1,TextWindow *param_2,int imageX,int imageY,float pauseTime);
void __cdecl lego::front::Text_Initialise(char *filename,uint param_2,uint param_3,uint unused_int,Area2F *param_5,Area2F *unused_rect,float param_7);
void __cdecl lego::front::Text_UpdatePositionAndSize(void);
void __cdecl lego::front::Text_Clear(void);
BOOL __cdecl lego::front::Text_GetTextType(char *textName,Text_Type *out_textType);
void __cdecl lego::front::Text_SetMessage(Text_Type textType,char *textMessage);
void __cdecl lego::front::Text_SetMessageWithImage(Text_Type textType,char *message,char *filename,char *sfxName);
void __cdecl lego::front::Text_SetNERPsMessage(char *text,uint unusedCounter);
void __cdecl lego::front::Text_DisplayMessage(Text_Type textType,BOOL changeTiming,BOOL setFlag4);
void __cdecl lego::front::Text_Update(float elapsedAbs);
void __cdecl lego::front::ToolTip_Initialise(Font *font,uint borderThickness,uint paddingThickness,float delaySeconds,uint appWidth,uint appHeight,int offsetY,float red,float green,float blue);
BOOL __cdecl lego::front::ToolTip_GetType(char *toolTipName,ToolTip_Type *out_toolTipType);
void __cdecl lego::front::ToolTip_SetContent(ToolTip_Type toolTipType,char *msg,...);
void __cdecl lego::front::ToolTip_AddIcon(ToolTip_Type toolTipType,Image *opt_image);
void __cdecl lego::front::ToolTip_SetSFX(ToolTip_Type toolTipType,SFX_ID sfxType);
void __cdecl lego::front::ToolTip_SetRightAlign(ToolTip_Type toolTipType,BOOL on);
void __cdecl lego::front::ToolTip_Activate(ToolTip_Type toolTipType);
void __cdecl lego::front::ToolTip_ShowInstant(ToolTip_Type toolTipType);
void __cdecl lego::front::ToolTip_Update(uint mouseX,uint mouseY,float elapsedAbsMS);
void __cdecl lego::front::ToolTip_DrawBox(Area2F valueRect,float rcRed,float rcGreen,float rcBlue,float ln1Red,float ln1Green,float ln1Blue,float ln2Red,float ln2Green,float ln2Blue,BOOL halfTrans);
void __cdecl lego::front::ToolTip_Draw(ToolTip *toolTip,uint mouseX,uint mouseY);
void __cdecl lego::gfx::Upgrade_Part_Load(Upgrade_PartModel *upgradePart,int objID,Container *root,char *filename);
void __cdecl lego::gfx::Upgrade_Part_Clone(Upgrade_PartModel *srcUpgradePart,Upgrade_PartModel *destUpgradePart);
void __cdecl lego::gfx::Upgrade_Part_Remove(Upgrade_PartModel *upgradePart);
float10 __cdecl lego::gfx::Upgrade_Part_MoveAnimation(Upgrade_PartModel *upgradePart,float elapsed,uint unused_repeatCount);
BOOL __cdecl lego::gfx::Upgrade_Part_SetActivity(Upgrade_PartModel *upgradePart,char *activityName);
void __cdecl lego::gfx::Upgrade_Load(UpgradesModel *upgrades,Config *act,char *gameName);
void __cdecl lego::gfx::Upgrade_SetUpgradeLevel(UpgradesModel *upgrades,uint objLevel);
BOOL __cdecl lego::gfx::Vehicle_IsCameraFlipDir(VehicleModel *vehicle);
BOOL __cdecl lego::gfx::Vehicle_SetActivity(VehicleModel *vehicle,char *activityName,float elapsed);
void __cdecl lego::gfx::Vehicle_SetUpgradeActivity(VehicleModel *vehicle,char *activityName);
BOOL __cdecl lego::gfx::Vehicle_Load(VehicleModel *vehicle,int objID,Container *root,char *aeFilename,char *gameName);
void __cdecl lego::gfx::Vehicle_Remove(VehicleModel *vehicle);
void __cdecl lego::gfx::Vehicle_SwapPolyMedium(VehicleModel *vehicle,BOOL swap);
void __cdecl lego::gfx::Vehicle_SwapPolyHigh(VehicleModel *vehicle,BOOL swap);
BOOL __cdecl lego::gfx::Vehicle_CanUpgradeType(VehicleModel *vehicle,LegoObject_UpgradeType upgradeType,BOOL current);
uint __cdecl lego::gfx::Vehicle_GetUpgradeLevel(VehicleModel *vehicle);
void __cdecl lego::gfx::Vehicle_SetUpgradeLevel(VehicleModel *vehicle,uint objLevel);
void __cdecl lego::gfx::Vehicle_HideWheels(VehicleModel *vehicle,BOOL hide);
BOOL __cdecl lego::gfx::Vehicle_Clone(VehicleModel *srcVehicle,VehicleModel *destVehicle);
void __cdecl lego::gfx::Vehicle_SetOwnerObject(VehicleModel *vehicle,LegoObject *liveObj);
float10 __cdecl lego::gfx::Vehicle_GetAnimationTime(VehicleModel *vehicle);
float10 __cdecl lego::gfx::Vehicle_MoveAnimation(VehicleModel *vehicle,float elapsed1,float elapsed2,uint repeatCount);
void __cdecl lego::gfx::Vehicle_PopulateWheelNulls(VehicleModel *vehicle);
void __cdecl lego::gfx::Vehicle_Hide(VehicleModel *vehicle,BOOL hide);
BOOL __cdecl lego::gfx::Vehicle_IsHidden(VehicleModel *vehicle);
void __cdecl lego::gfx::Vehicle_SetOrientation(VehicleModel *vehicle,float xDir,float yDir,float zDir);
void __cdecl lego::gfx::Vehicle_SetPosition(VehicleModel *vehicle,float xPos,float yPos,GetWorldZCallback zCallback,Map3D *map);
Container * __cdecl lego::gfx::Vehicle_GetActivityContainer(VehicleModel *vehicle);
Container * __cdecl lego::gfx::Vehicle_FindNull(VehicleModel *vehicle,char *nullName,uint nullFrameNo);
Container * __cdecl lego::gfx::Vehicle_GetCameraNull(VehicleModel *vehicle,uint frameNo);
Container * __cdecl lego::gfx::Vehicle_GetDrillNull(VehicleModel *vehicle);
Container * __cdecl lego::gfx::Vehicle_GetDepositNull(VehicleModel *vehicle);
Container * __cdecl lego::gfx::Vehicle_GetDriverNull(VehicleModel *vehicle);
Container * __cdecl lego::gfx::Vehicle_GetCarryNull(VehicleModel *vehicle,uint frameNo);
uint __cdecl lego::gfx::Vehicle_GetCarryNullFrames(VehicleModel *vehicle);
float10 __cdecl lego::gfx::Vehicle_GetTransCoef(VehicleModel *vehicle);
void __cdecl lego::game::Water_Initialise(Container *root,Lego_Level *level);
void __cdecl lego::game::Water_InitPoolDrains(Container *root,Lego_Level *level);
void __cdecl lego::game::Water_InitVertices(Container *root,Lego_Level *level);
void __cdecl lego::debug::Water_ChangeViewMode_removed(BOOL isFPViewMode);
void __cdecl lego::game::Water_DestroyWallComplete(Lego_Level *level,uint bx,uint by);
void __cdecl lego::game::Water_DamBlock(uint bx,uint by);
void __cdecl lego::game::Water_Update(Lego_Level *level,float elapsedGame);
void __cdecl lego::game::Water_UpdateNotHotBlocks(Lego_Level *level);
Water_Pool * __cdecl lego::game::Water_FindPoolDrain(uint bx,uint by,uint *optout_drainIndex);
int __cdecl lego::game::Water_QsortComparePools(Water_Pool *a,Water_Pool *b);
Water_Pool * __cdecl lego::game::Water_FindPoolAndMergeRows(uint by,uint bxRowStart,uint bxRowEnd);
void __cdecl lego::game::Water_AddPoolRowBlocks(Water_Pool *pool,uint by,uint bxRowStart,uint bxRowEnd);
void __cdecl lego::game::Water_AddPool(uint by,uint bxRowStart,uint bxRowEnd);
BOOL __cdecl lego::tools::Weapon_Initialise(Config *config,char *gameName);
uint __cdecl lego::tools::Weapon_GetWeaponIDByName(char *weaponName);
float10 __cdecl lego::tools::Weapon_GetRechargeTime(uint weaponID);
float10 __cdecl lego::tools::Weapon_GetDischargeRate(uint weaponID);
float10 __cdecl lego::tools::Weapon_GetWeaponRange(uint weaponID);
float10 __cdecl lego::tools::Weapon_GetWallDestroyTime(uint weaponID,Lego_SurfaceType surfaceType);
float10 __cdecl lego::tools::Weapon_GetDamageForObject(uint weaponID,LegoObject *liveObj);
void __cdecl lego::tools::Weapon_GenericDamageObject(LegoObject *liveObj,uint weaponID,BOOL hit,float elapsed,Point2F *dir);
void __cdecl lego::tools::Weapon_GunDamageObject(LegoObject *liveObj,float damage,BOOL reactToHit);
void __cdecl lego::tools::Weapon_Projectile_FUN_0046f670(Weapon_Projectile *projectile);
void __cdecl lego::tools::Weapon_Update(float elapsedGame);
BOOL __cdecl lego::tools::Weapon_LegoObject_Callback_UpdateObject(LegoObject *liveObj,float *pElapsed);
void __cdecl lego::tools::Weapon_GunHitObject(LegoObject *liveObj,Vector3F *dir,Vector3F *opt_effectSpawnPos,uint weaponID,Weapon_KnownType knownWeapon);
void __cdecl lego::tools::Weapon_Projectile_UpdatePath(Weapon_Projectile *projectile,float elapsed);
BOOL __cdecl lego::tools::Weapon_Projectile_AddStraightPath(LegoObject *liveObj,Vector3F *fromPos,Vector3F *fromToDistance,int weaponID,Weapon_KnownType knownWeapon);
BOOL __cdecl lego::tools::Weapon_Projectile_AddCurvedPath(LegoObject *liveObj,Vector3F *fromPos,Vector3F *toPos,int weaponID,Weapon_KnownType knownWeapon);
void __cdecl lego::tools::Weapon_GetObjectTypeAndID_ByKnownWeaponType(Weapon_KnownType knownWeapon,LegoObject_Type *out_objType,LegoObject_ID *out_objID);
int __cdecl lego::tools::Weapon_Projectile_GetNextAvailable(void);
int __cdecl lego::tools::Weapon_Lazer_GetNextAvailable(void);
LegoObject * __cdecl lego::tools::Weapon_FireLazer(Vector3F *fromPos,Vector3F *dir,LegoObject *liveObj,float elapsed,float weaponRange,int weaponID,float coef);
BOOL __cdecl lego::tools::Weapon_LegoObject_Collision_FUN_00470520(LegoObject *liveObj,Point2F *fromPos,Point2F *faceDir,BOOL doTestCollision);
BOOL __cdecl lego::tools::Weapon_LegoObject_CollisionBox_FUN_00470570(LegoObject *liveObj,Point2F *fromPos,Point2F *faceDir,Point2F *optout_intersection,BOOL doTestCollision);
BOOL __cdecl lego::tools::Weapon_LegoObject_CollisionRadius_FUN_00470800(LegoObject *liveObj,Point2F *fromPos,Point2F *faceDir,BOOL doTestCollision);
BOOL __cdecl lego::tools::Weapon_LegoObject_TestCollision_FUN_004708f0(LegoObject *liveObj,Point2F *fromPos,Point2F *faceDir);
void __cdecl lego::tools::Weapon_Lazer_Add(Container *cont,Vector3F *fromPos,Vector3F *toPos);
void __cdecl lego::tools::Weapon_Lazer_InitMesh(Mesh *mesh,float thickness,Vector3F *fromPos,Vector3F *toPos,float red,float green,float blue,float alpha);
WeaponsModel * __cdecl lego::tools::Weapon_LegoObject_GetWeaponsModel(LegoObject *liveObj);
float10 __cdecl lego::tools::Weapon_LegoObject_GetWeaponTimer(LegoObject *liveObj,uint frameNo);
void __cdecl lego::tools::Weapon_LegoObject_SetWeaponTimer(LegoObject *liveObj,float timer,uint frameNo);
BOOL __cdecl lego::tools::Weapon_MathUnk_CheckVectorsZScalar_InRange(Vector3F *vectorPos,Vector3F *vectorScaled,float minZ,float maxZ,float scalar);
BOOL __cdecl lego::tools::Weapon_LegoObject_Callback_FUN_00471630(LegoObject *liveObj,SearchWeapons18_2 *search);
void __cdecl lego::tools::Weapon_LegoObject_FUN_004718f0(SearchWeapons18_2 *search);
BOOL __cdecl lego::tools::Weapon_DoCallbacksSearch_FUN_00471b20(Vector3F *vecCector,Vector3F *vecDistance,LegoObject **out_liveObj,float *ref_float_4,LegoObject *opt_ignoreObj);
BOOL __cdecl lego::tools::Weapon_LegoObject_DoCallbacksSearch_FUN_00471b90(LegoObject *liveObj,LegoObject *otherObj);
BOOL __cdecl lego::tools::Weapon_LegoObject_SeeThroughWalls_FUN_00471c20(LegoObject *liveObj,LegoObject *otherObj);
Container * __cdecl lego::tools::Weapon_GetFireNull(WeaponsModel *weapons,uint frameNo,uint pairNo);
Container * __cdecl lego::tools::Weapon_GetXPivotNull(WeaponsModel *weapons,uint frameNo);
Container * __cdecl lego::tools::Weapon_GetYPivotNull(WeaponsModel *weapons,uint frameNo);
void __cdecl lego::tools::Weapon_PivotTracker(WeaponsModel *weapons,Vector3F *targetWorldPos,float elapsed,BOOL assignTarget,uint frameNo);
void __cdecl lego::tools::Weapon_GetFireDirection(WeaponsModel *weapons,Vector3F *out_dir,uint frameNo);
BOOL __cdecl lego::tools::Weapon_LegoObject_GetCollCenterPosition(LegoObject *liveObj,Vector3F *out_vector);
BOOL __cdecl lego::tools::Weapon_LegoObject_IsActiveWithTracker(LegoObject *liveObj);
BOOL __cdecl lego::tools::Weapon_LegoObject_UpdateSelectedTracker(LegoObject *liveObj,float elapsed,uint frameNo);
BOOL __cdecl lego::tools::Weapon_LegoObject_UpdateUnselectedTracker(LegoObject *liveObj,float elapsed,uint frameNo);
BOOL __cdecl lego::tools::Weapon_LegoObject_UpdateTracker(LegoObject *liveObj,float elapsed);
BOOL __cdecl lego::tools::Weapon_Callback_RemoveProjectileReference(LegoObject *liveObj,LegoObject *projectileObj);
BOOL __cdecl lego::tools::Weapon_LegoObject_WithinWeaponRange(LegoObject *liveObj,LegoObject *otherObj);
BOOL __cdecl lego::tools::Weapon_LegoObject_WithinAwarenessRange(LegoObject *liveObj,LegoObject *otherObj);
bool __thiscall lego::video::G98CMovie__InitSample(G98CMovie *this,IAMMultiMediaStream *lpAMMMStream);
bool __thiscall lego::video::G98CMovie__OpenAMStream(G98CMovie *this,char *fName,IAMMultiMediaStream **lplpAMMMStream,IDirectDraw2 *ddraw2);
G98CMovie * __thiscall lego::video::G98CMovie___ctor(G98CMovie *this,char *fName,IDirectDrawSurface3 *bSurf3,IDirectDraw2 *ddraw2);
void __thiscall lego::video::G98CMovie___dtor(G98CMovie *this);
bool __thiscall lego::video::G98CMovie__Update(G98CMovie *this,float speed,RECT *destRect);
longlong __thiscall lego::video::G98CMovie__GetDuration(G98CMovie *this);
Movie_t * __cdecl lego::video::Movie_Load(char *fName);
void __cdecl lego::video::Movie_GetSize(Movie_t *mov,uint *out_width,uint *out_height);
longlong __cdecl lego::video::Movie_GetDuration(Movie_t *mov);
BOOL __cdecl lego::video::Movie_Update(Movie_t *mov,float speed,RECT *destRect);
void __cdecl lego::video::Movie_Free(Movie_t *mov);
Container * __cdecl lego::gfx::Container_Initialise(char *gameName);
void __cdecl lego::gfx::Container_Shutdown(void);
void __cdecl lego::gfx::Container_SetSharedTextureDirectory(char *path);
void __cdecl lego::gfx::Container_EnableSoundTriggers(BOOL on);
void __cdecl lego::gfx::Container_SetTriggerFrameCallback(ContainerTriggerFrameCallback callback,void *data);
void __cdecl lego::gfx::Container_SetSoundTriggerCallback(ContainerSoundTriggerCallback callback,void *data);
Container * __cdecl lego::gfx::Container_GetRoot(void);
Container * __cdecl lego::gfx::Container_Create(Container *opt_parent);
void __cdecl lego::gfx::Container_Remove(Container *cont);
void __cdecl lego::gfx::Container_Remove2(Container *in_cont,BOOL kill);
Container * __cdecl lego::gfx::Container_Load(Container *parent,char *filename,char *typestr,BOOL looping);
BOOL __cdecl lego::gfx::Container_IsCurrentActivity(Container *cont,char *actname);
BOOL __cdecl lego::gfx::Container_SetActivity(Container *cont,char *actname);
BOOL __cdecl lego::gfx::Container_Light_SetSpotPenumbra(Container *spotlight,float angle);
BOOL __cdecl lego::gfx::Container_Light_SetSpotUmbra(Container *spotlight,float angle);
BOOL __cdecl lego::gfx::Container_Light_SetSpotRange(Container *spotlight,float dist);
void __cdecl lego::gfx::Container_Light_SetEnableContainer(Container *light,Container *enable);
Container * __cdecl lego::gfx::Container_MakeLight(Container *parent,D3DRMLightType type,float r,float g,float b);
Container * __cdecl lego::gfx::Container_MakeMesh2(Container *parent,Container_MeshType type);
IDirect3DRMFrame3 * __cdecl lego::gfx::Container_GetMasterFrame(Container *cont);
Container * __cdecl lego::gfx::Container_Clone(Container *orig);
void __cdecl lego::gfx::Container_Hide2(Container *cont,BOOL hide);
void __cdecl lego::gfx::Container_Hide(Container *cont,BOOL hide);
BOOL __cdecl lego::gfx::Container_IsHidden(Container *cont);
Container * __cdecl lego::gfx::Container_SearchTree(Container *root,char *name,Container_SearchMode mode,uint *ref_count);
char * __cdecl lego::gfx::Container_FormatPartName(Container *cont,char *partname,int *opt_instance);
void __cdecl lego::gfx::Container_SetUserData(Container *cont,void *data);
void * __cdecl lego::gfx::Container_GetUserData(Container *cont);
void __cdecl lego::gfx::Container_EnableFog(BOOL on);
void __cdecl lego::gfx::Container_SetFogColour(float r,float g,float b);
void __cdecl lego::gfx::Container_SetFogMode(D3DRMSceneFogMethod mode);
void __cdecl lego::gfx::Container_SetFogParams(float start,float end,float density);
void __cdecl lego::gfx::Container_SetPerspectiveCorrection(Container *cont,BOOL on);
BOOL __cdecl lego::gfx::Container_SetPerspectiveCorrectionCallback(IDirect3DRMFrame3 *frame,BOOL *lpArg_on);
IDirectDrawSurface4 * __cdecl lego::gfx::Container_LoadTextureSurface(char *fname,BOOL managed,uint *out_width,uint *out_height,BOOL *out_trans);
BOOL __cdecl lego::gfx::Container_GetDecalColour(char *fname,uint *out_colour);
Container_Texture * __cdecl lego::gfx::Container_LoadTexture2(char *fname,BOOL immediate,uint *out_width,uint *out_height);
void __cdecl lego::gfx::Container_FreeTexture(Container_Texture *text);
void __cdecl lego::gfx::Container_Mesh_Swap(Container *target,Container *origin,BOOL restore);
uint __cdecl lego::gfx::Container_Mesh_AddGroup(Container *cont,uint vertexCount,uint faceCount,uint vPerFace,uint *faceData);
uint __cdecl lego::gfx::Container_Mesh_GetGroupCount(Container *cont);
void __cdecl lego::gfx::Container_Mesh_SetQuality(Container *cont,D3DRMGroupIndex groupID,Graphics_Quality quality);
BOOL __cdecl lego::gfx::Container_Mesh_IsGroupHidden(Container *cont,D3DRMGroupIndex group);
void __cdecl lego::gfx::Container_Mesh_HideGroup(Container *cont,D3DRMGroupIndex group,BOOL hide);
BOOL __cdecl lego::gfx::Container_Mesh_HandleSeperateMeshGroups(IDirect3DRMMesh **ref_mesh,D3DRMGroupIndex *ref_groupID);
BOOL __cdecl lego::gfx::Container_Mesh_GetGroup(Container *cont,D3DRMGroupIndex groupID,uint *out_vertexCount,uint *out_faceCount,uint *out_vPerFace,uint *out_faceDataSize,uint *out_faceData);
uint __cdecl lego::gfx::Container_Mesh_GetVertices(Container *cont,D3DRMGroupIndex groupID,uint index,uint count,Vertex *out_retArray);
uint __cdecl lego::gfx::Container_Mesh_SetVertices(Container *cont,D3DRMGroupIndex groupID,uint index,uint count,Vertex *values);
void __cdecl lego::gfx::Container_Mesh_SetTexture(Container *cont,D3DRMGroupIndex groupID,Container_Texture *ref_itext);
void __cdecl lego::gfx::Container_Mesh_SetPerspectiveCorrection(Container *cont,D3DRMGroupIndex groupID,BOOL on);
BOOL __cdecl lego::gfx::Container_Mesh_Scale(Container *cont,float x,float y,float z);
BOOL __cdecl lego::gfx::Container_Mesh_GetBox(Container *cont,Box3F *out_box);
void __cdecl lego::gfx::Container_Mesh_SetEmissive(Container *cont,D3DRMGroupIndex groupID,float r,float g,float b);
void __cdecl lego::gfx::Container_Mesh_SetColourAlpha(Container *cont,D3DRMGroupIndex groupID,float r,float g,float b,float a);
void __cdecl lego::gfx::Container_Transform(Container *cont,Vector3F *out_vector,Vector3F *in_vector);
void __cdecl lego::gfx::Container_InverseTransform(Container *cont,Vector3F *out_vector,Vector3F *in_vector);
void __cdecl lego::gfx::Container_SetColourAlpha(Container *cont,float r,float g,float b,float a);
float10 __cdecl lego::gfx::Container_MoveAnimation(Container *cont,float delta);
float10 __cdecl lego::gfx::Container_SetAnimationTime(Container *cont,float time);
void __cdecl lego::gfx::Container_ForceAnimationUpdate(Container *cont);
float10 __cdecl lego::gfx::Container_GetAnimationTime(Container *cont);
uint __cdecl lego::gfx::Container_GetAnimationFrames(Container *cont);
void __cdecl lego::gfx::Container_SetPosition(Container *cont,Container *opt_ref,float x,float y,float z);
void __cdecl lego::gfx::Container_SetOrientation(Container *cont,Container *opt_ref,float dirx,float diry,float dirz,float upx,float upy,float upz);
void __cdecl lego::gfx::Container_GetPosition(Container *cont,Container *opt_ref,Vector3F *out_pos);
void __cdecl lego::gfx::Container_GetOrientation(Container *cont,Container *opt_ref,Vector3F *out_dir,Vector3F *out_up);
void __cdecl lego::gfx::Container_AddRotation(Container *cont,Container_Combine combine,float x,float y,float z,float angle);
void __cdecl lego::gfx::Container_AddScale(Container *cont,Container_Combine combine,float x,float y,float z);
void __cdecl lego::gfx::Container_AddTranslation(Container *cont,Container_Combine combine,float x,float y,float z);
void __cdecl lego::gfx::Container_ClearTransform(Container *cont);
void __cdecl lego::gfx::Container_AddTransform(Container *cont,Container_Combine combine,Matrix4F *mat);
float10 __cdecl lego::gfx::Container_GetZXRatio(Container *cont);
void __cdecl lego::gfx::Container_SetParent(Container *child,Container *parent);
Container * __cdecl lego::gfx::Container_GetParent(Container *cont);
float10 __cdecl lego::gfx::Container_GetTransCoef(Container *cont);
Container * __cdecl lego::gfx::Container_SearchOwner(IDirect3DRMFrame3 *in_frame);
Container * __cdecl lego::gfx::Container_Frame_GetContainer(IDirect3DRMFrame3 *frame);
void __cdecl lego::gfx::Container_GetFrames(Container *cont,Container *opt_ref,IDirect3DRMFrame3 **out_contFrame,IDirect3DRMFrame3 **out_refFrame);
Container_Type __cdecl lego::gfx::Container_ParseTypeString(char *str,BOOL *out_noTexture);
void __cdecl lego::gfx::Container_AddList(void);
uint __cdecl lego::gfx::Container_GetActivities(Container *cont,IDirect3DRMFrame3 **out_frameList,AnimClone **out_acList,char **out_nameList);
void __cdecl lego::gfx::Container_SetTypeData(Container *cont,char *name,IDirect3DRMLight *light,IDirect3DRMMesh *mesh,Mesh *transMesh);
void __cdecl lego::gfx::Container_FreeTypeData(Container *cont);
BOOL __cdecl lego::gfx::Container_AddActivity2(Container *cont,char *filename,char *actname,float transCo,uint trigger,char *sample,AnimClone *origClone,BOOL lws,BOOL looping);
void __cdecl lego::gfx::Container_Frame_ReferenceDestroyCallback(IDirect3DRMFrame3 *lpD3DRMobj,void *lpArg);
IDirect3DRMFrame3 * __cdecl lego::gfx::Container_Frame_Find(Container *cont,char *findName,BOOL hidden);
void __cdecl lego::gfx::Container_Frame_SetAppData(IDirect3DRMFrame3 *frame,Container *owner,AnimClone *animClone,char *asfname,uint *frameCount,char *frameName,float *currTime,float *transCo,char *actSample,Sound3D_SoundFrameRecord *soundRecord,uint *trigger);
void __cdecl lego::gfx::Container_Frame_RemoveAppData(IDirect3DRMFrame3 *frame);
Container * __cdecl lego::gfx::Container_Frame_GetOwner(IDirect3DRMFrame3 *frame);
char * __cdecl lego::gfx::Container_Frame_GetAnimSetFileName(IDirect3DRMFrame3 *frame);
AnimClone * __cdecl lego::gfx::Container_Frame_GetAnimClone(IDirect3DRMFrame3 *frame);
uint __cdecl lego::gfx::Container_Frame_GetFrameCount(IDirect3DRMFrame3 *frame);
float10 __cdecl lego::gfx::Container_Frame_GetCurrTime(IDirect3DRMFrame3 *frame);
float10 __cdecl lego::gfx::Container_Frame_GetTransCo(IDirect3DRMFrame3 *frame);
char * __cdecl lego::gfx::Container_Frame_GetSample(IDirect3DRMFrame3 *frame);
uint __cdecl lego::gfx::Container_Frame_GetTrigger(IDirect3DRMFrame3 *frame);
void __cdecl lego::gfx::Container_Frame_SafeAddChild(IDirect3DRMFrame3 *parent,IDirect3DRMFrame3 *child);
void __cdecl lego::gfx::Container_Frame_FormatName(IDirect3DRMFrame3 *frame,char *msg,...);
void __cdecl lego::gfx::Container_Frame_FreeName(IDirect3DRMFrame3 *frame);
char * __cdecl lego::gfx::Container_Frame_GetName(IDirect3DRMFrame3 *frame);
BOOL __cdecl lego::gfx::Container_Frame_WalkTree(IDirect3DRMFrame3 *frame,uint level,ContainerWalkTreeCallback Callback,void *data);
BOOL __cdecl lego::gfx::Container_Frame_SearchCallback(IDirect3DRMFrame3 *frame,Container_SearchData *search);
AnimClone * __cdecl lego::gfx::Container_LoadAnimSet(char *fname,IDirect3DRMFrame3 *frame,uint *out_frameCount,BOOL lws,BOOL looping);
uint __cdecl lego::gfx::Container_GetAnimFileFrameCount(char *fileData);
BOOL __cdecl lego::gfx::Container_FrameLoad(char *fname,IDirect3DRMFrame3 *frame);
IDirect3DRMMesh * __cdecl lego::gfx::Container_MeshLoad(void *file_data,uint file_size,char *file_name,IDirect3DRMFrame3 *frame,BOOL noTexture);
HRESULT __cdecl lego::gfx::Container_TextureLoadCallback(char *name,Container_TextureData *textureData,IDirect3DRMTexture3 **texture);
void __cdecl lego::gfx::Container_YFlipTexture(IDirect3DRMTexture3 *texture);
int __cdecl lego::gfx::Container_TextureSetSort(Container_TextureRef *a,Container_TextureRef *b);
void __cdecl lego::gfx::Container_TextureDestroyCallback(IDirect3DRMTexture3 *lpD3DRMobj,Container_TextureRef *textRef);
void __cdecl lego::view::Viewport_Initialise(void);
void __cdecl lego::view::Viewport_Shutdown(void);
Viewport * __cdecl lego::view::Viewport_Create(float xposf,float yposf,float widthf,float heightf,Container *contCamera);
Viewport * __cdecl lego::view::Viewport_CreatePixel(int xPos,int yPos,uint width,uint height,Container *contCamera);
void __cdecl lego::view::Viewport_GetSize(Viewport *view,uint *out_width,uint *out_height);
void __cdecl lego::view::Viewport_SetCamera(Viewport *view,Container *contCamera);
Container * __cdecl lego::view::Viewport_GetCamera(Viewport *view);
void __cdecl lego::view::Viewport_SetBackClip(Viewport *view,float dist);
float10 __cdecl lego::view::Viewport_GetBackClip(Viewport *view);
float10 __cdecl lego::view::Viewport_GetFrontClip(Viewport *view);
void __cdecl lego::view::Viewport_Clear(Viewport *view,BOOL full);
void __cdecl lego::view::Viewport_Render(Viewport *view,Container *root,float delta);
void __cdecl lego::view::Viewport_Remove(Viewport *view);
void __cdecl lego::view::Viewport_SmoothSetField(Viewport *view,float fov);
void __cdecl lego::view::Viewport_SetField(Viewport *view,float fov);
float10 __cdecl lego::view::Viewport_GetField(Viewport *view);
void __cdecl lego::view::Viewport_InverseTransform(Viewport *view,Vector3F *out_vector,Vector4F *transform4d);
void __cdecl lego::view::Viewport_Transform(Viewport *view,Vector4F *out_transform4d,Vector3F *vector);
Point2F * __cdecl lego::view::Viewport_WorldToScreen(Viewport *view,Point2F *out_screenPt,Vector3F *in_worldVec);
IDirect3DRMFrame3 * __cdecl lego::view::Viewport_GetScene(Viewport *view);
void __cdecl lego::view::Viewport_AddList(void);
void __cdecl lego::view::Viewport_RemoveAll(void);
int __cdecl lego::util::Util_Tokenise(char *input,char **out_parts,char *delimiter);
int __cdecl lego::util::Util_WSTokenise(char *input,char **out_parts);
char * __cdecl lego::util::Util_StrCpy(char *strSource);
char * __cdecl lego::util::Util_RemoveUnderscores(char *text,...);
char * __cdecl lego::util::Util_StrIStr(char *str,char *strSearch);
uint __cdecl lego::util::Util_HashString(char *str,BOOL bIgnoreBlanks,BOOL upperCase);
BoolTri __cdecl lego::util::Util_GetBoolFromString(char *str);
int lego::WinMain(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPSTR lpCmdLine,int nShowCmd);
void __cdecl lego::main::Main_DisableTextureManagement(void);
void __cdecl lego::main::Main_ParseCommandLine(char *lpszCmdLine,BOOL *out_nosound,BOOL *out_insistOnCD);
void __cdecl lego::main::Main_LoopUpdate(BOOL clear);
MainCLFlags __cdecl lego::main::Main_GetCLFlags(void);
int __cdecl lego::main::Main_GetWindowsBitDepth(void);
void __cdecl lego::main::Main_Finalise3D(void);
BOOL __cdecl lego::main::Main_SetState(Main_State *state);
uint __cdecl lego::main::Main_GetTime(void);
BOOL __cdecl lego::main::Main_DispatchMessage(MSG *msg);
void __cdecl lego::main::Main_HandleIO(void);
void __cdecl lego::main::Main_SetupDisplay(BOOL fullScreen,uint xPos,uint yPos,uint width,uint height);
BOOL __cdecl lego::main::Main_SetupDirect3D(Graphics_Device *dev,IDirectDraw *ddraw1,IDirectDrawSurface4 *backSurf,BOOL doubleBuffered);
void __cdecl lego::main::Main_AdjustWindowRect(LPRECT lpRect);
void __cdecl lego::main::Main_Setup3D(Graphics_Quality renderQuality,BOOL dither,BOOL linearFilter,BOOL mipMap,BOOL mipMapLinear,BOOL blendTransparency,BOOL sortTransparency);
void __cdecl lego::main::Main_SetTitle(char *title);
BOOL __cdecl lego::main::Main_InitApp(HINSTANCE hInstance);
LRESULT __cdecl lego::main::Main_WndProc_Fullscreen(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
LRESULT __cdecl lego::main::Main_WndProc_Windowed(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
LRESULT lego::main::Main_WndProc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
void __cdecl lego::main::Main_ChangeRenderState(D3DRenderStateType dwRenderStateType,D3DRenderStateType dwRenderState);
void __cdecl lego::main::Main_RestoreStates(void);
BOOL __cdecl lego::main::Main_SetCDVolume(float leftVolume,float rightVolume);
BOOL __cdecl lego::main::Main_GetCDVolume(float *out_leftVolume,float *out_rightVolume);
BOOL __cdecl lego::main::Main_CDVolume(float *ref_leftVolume,float *ref_rightVolume,BOOL set);
void __cdecl lego::cfg::Config_Initialise(void);
void __cdecl lego::cfg::Config_Shutdown(void);
Config * __cdecl lego::cfg::Config_Load(char *filename);
char * __cdecl lego::cfg::Config_BuildStringID(char *keyPath1,...);
Config * __cdecl lego::cfg::Config_FindArray(Config *prop,char *keyPath);
Config * __cdecl lego::cfg::Config_GetNextItem(Config *prop);
char * __cdecl lego::cfg::Config_GetStringValue(Config *prop,char *keyPath);
char * __cdecl lego::cfg::Config_GetTempStringValue(Config *prop,char *keyPath);
BoolTri __cdecl lego::cfg::Config_GetBoolValue(Config *prop,char *keyPath);
float10 __cdecl lego::cfg::Config_GetAngle(Config *prop,char *keyPath);
BOOL __cdecl lego::cfg::Config_GetRGBValue(Config *prop,char *keyPath,float *out_r,float *out_g,float *out_b);
void __cdecl lego::cfg::Config_Free(Config *root);
Config * __cdecl lego::cfg::Config_Create(Config *prev);
void __cdecl lego::cfg::Config_Remove(Config *prop);
Config * __cdecl lego::cfg::Config_FindItem(Config *prop,char *keyPath);
void __cdecl lego::cfg::Config_AddList(void);
Vector3F * __cdecl lego::math::Maths_Vector3DRandom(Vector3F *out_vector);
Vector3F * __cdecl lego::math::Maths_Vector3DRotate(Vector3F *out_vector,Vector3F *v,Vector3F *axis,float theta);
Vector3F * __cdecl lego::math::Maths_PlaneNormal(Vector3F *out_vector,Vector3F *p1,Vector3F *p2,Vector3F *p3);
float10 __cdecl lego::math::Maths_TriangleAreaZ(Vector3F *p1,Vector3F *p2,Vector3F *p3,BOOL bfc);
short __cdecl lego::math::Maths_Rand(void);
float10 __cdecl lego::math::Maths_RandRange(float low,float high);
BOOL __cdecl lego::math::Maths_RayPlaneIntersection(Vector3F *out_endPoint,Vector3F *rayOrigin,Vector3F *ray,Vector3F *planePoint,Vector3F *planeNormal);
BOOL __cdecl lego::math::Maths_RayPlaneDistance(float *out_dist,Vector3F *rayOrigin,Vector3F *ray,Vector3F *planePoint,Vector3F *planeNormal);
Vector3F * __cdecl lego::math::Maths_RayEndPoint(Vector3F *out_endPoint,Vector3F *rayOrigin,Vector3F *ray,float dist);
Point2F * __cdecl lego::math::Maths_Vector2DIntersection(Point2F *out_intersection,Point2F *start1,Point2F *vector1,Point2F *start2,Point2F *vector2);
BOOL __cdecl lego::math::Maths_PointInsidePoly(Point2F *point,Point2F *fromList,Point2F *toList,uint count);
BOOL __cdecl lego::math::Maths_RaySphereIntersection(Vector3F *center,float radius,Vector3F *camera,Vector3F *line);
void __cdecl lego::math::Matrix_Mult(Matrix4F *out_matrix,Matrix4F *right,Matrix4F *left);
void __cdecl lego::math::Matrix_RotX(Matrix4F *out_matrix,float rot);
void __cdecl lego::math::Matrix_RotY(Matrix4F *out_matrix,float rot);
void __cdecl lego::math::Matrix_RotZ(Matrix4F *out_matrix,float rot);
void __cdecl lego::math::Matrix_Translate(Matrix4F *out_matrix,Vector3F *trans);
void __cdecl lego::math::Matrix_Identity(Matrix4F *out_matrix);
void __cdecl lego::math::Matrix_Zero(Matrix4F *out_matrix);
void __cdecl lego::math::Matrix_Copy(Matrix4F *out_matrix,Matrix4F *src);
Font * __cdecl lego::image::Font_Load(char *fname);
void __cdecl lego::image::Font_VGetStringInfo(Font *font,uint *out_width,uint *out_lineCount,char *msg,va_list argptr);
uint __cdecl lego::image::Font_PrintF(Font *font,int x,int y,char *msg,...);
uint __cdecl lego::image::Font_VPrintF(Font *font,int x,int y,char *msg,va_list argptr);
uint __cdecl lego::image::Font_VPrintF2(Font *font,int x,int y,BOOL render,uint *out_lineCount,char *msg,va_list argptr);
uint __cdecl lego::image::Font_OutputChar(Font *font,int x,int y,char c,BOOL render);
uint __cdecl lego::image::Font_GetCharWidth(Font *font,char c);
uint __cdecl lego::image::Font_GetHeight(Font *font);
void __cdecl lego::image::Font_Remove(Font *font);
Font * __cdecl lego::image::Font_Create(Image *image);
void __cdecl lego::image::Font_AddList(void);
BOOL __cdecl lego::snd::Sound3D_Initialise(HWND hWnd);
void __cdecl lego::snd::Sound3D_ShutDown(void);
BOOL __cdecl lego::snd::Sound3D_CheckVolumeLimits(int vol);
int __cdecl lego::snd::Sound3D_Load(char *fName,BOOL stream,BOOL simultaneous,int volume);
BOOL __cdecl lego::snd::Sound3D_GetFreeSoundIndex(uint *out_soundTableIndex);
BOOL __cdecl lego::snd::Sound3D_Remove(int soundTableIndex);
void __cdecl lego::snd::Sound3D_MakeListener(IDirect3DRMFrame3 *frame);
void __cdecl lego::snd::Sound3D_UpdateListener(void);
void __cdecl lego::snd::Sound3D_ListenerCallback(IDirect3DRMFrame3 *obj,void *arg,float delta);
void __cdecl lego::snd::Sound3D_SetWorldPos(IDirectSound3DBuffer *sound3DBuff,Vector3F *wPos,Vector3F *vel);
BOOL __cdecl lego::snd::Sound3D_CheckAlreadyExists(IDirect3DRMFrame3 *frame,IDirectSound3DBuffer *sound3DBuff);
int __cdecl lego::snd::Sound3D_Play2(Sound3DPlay mode,IDirect3DRMFrame3 *frame,int soundTableIndex,BOOL loop,Vector3F *opt_wPos);
void __cdecl lego::snd::Sound3D_AddSoundRecord(IDirect3DRMFrame3 *frame,IDirectSoundBuffer *soundBuff,IDirectSound3DBuffer *sound3DBuff);
void __cdecl lego::snd::Sound3D_SetBufferVolume(int handle,int newvolume);
int __cdecl lego::snd::Sound3D_GetBufferVolume(int handle);
IDirectSoundBuffer * __cdecl lego::snd::Sound3D_GetSoundBuffer(int handle);
void __cdecl lego::snd::Sound3D_StopSound(int handle);
void __cdecl lego::snd::Sound3D_StopAllSounds(void);
void __cdecl lego::gfx::Sound3D_AttachSound(IDirect3DRMFrame3 *frame,IDirectSound3DBuffer *sound3DBuff);
void __cdecl lego::snd::Sound3D_RemoveSound(IDirect3DRMFrame3 *frame,IDirectSound3DBuffer *sound3DBuff);
void __cdecl lego::snd::Sound3D_RemoveSoundRecord(IDirect3DRMFrame3 *frame,IDirectSound3DBuffer *sound3DBuff);
BOOL __cdecl lego::snd::Sound3D_RecurseRemoveSoundRecord(IDirect3DRMFrame3 *owner,IDirectSound3DBuffer *sound3DBuff,Sound3D_SoundRecord *record);
BOOL __cdecl lego::snd::Sound3D_RecurseRemoveSound(IDirect3DRMFrame3 *owner,IDirectSound3DBuffer *sound3DBuff,Sound3D_SoundFrameRecord *record);
void __cdecl lego::snd::Sound3D_Update(void);
void __cdecl lego::snd::Sound3D_SoundCallback(IDirect3DRMFrame3 *tFrame,void *arg,float delay);
void __cdecl lego::snd::Sound3D_SetMinDistForAtten(float dist);
void __cdecl lego::snd::Sound3D_SetMaxDist(float dist);
void __cdecl lego::snd::Sound3D_SetGlobalVolume(int vol);
void __cdecl lego::snd::Sound3D_SetGlobalVolumePrescaled(int vol_0_10);
void __cdecl lego::snd::Sound3D_SetVolumeToDefault(void);
BOOL __cdecl lego::snd::Sound3D_LoadSample(Sound3D_SoundData *out_sound,char *fName,BOOL simultaneous);
BOOL __cdecl lego::snd::Sound3D_CreateSoundBuffer(Sound3D_SoundData *sound);
BOOL __cdecl lego::snd::Sound3D_SendSoundToBuffer(Sound3D_SoundData *sound);
float10 __cdecl lego::snd::Sound3D_GetSamplePlayTime(int handle);
BOOL __cdecl lego::snd::Sound3D_Stream_Play(char *fName,BOOL loop,int volume);
BOOL __cdecl lego::snd::Sound3D_Stream_Stop(BOOL looping);
BOOL __cdecl lego::snd::Sound3D_Stream_BufferSetup(char *waveFName,BOOL loop,int volume);
BOOL __cdecl lego::snd::Sound3D_Stream_FillDataBuffer(BOOL looping);
void __cdecl lego::snd::Sound3D_Stream_CheckPosition(BOOL looping);
BOOL __cdecl lego::snd::Sound3D_D3DVectorEqual(Vector3F *a,Vector3F *b);
float10 __cdecl lego::snd::Sound3D_SetRollOffFactor(float rollOff);
int __cdecl lego::snd::Sound3D_MinVolume(void);
void __cdecl lego::ddraw::DirectDraw_Initialise(HWND hWnd);
BOOL __cdecl lego::ddraw::DirectDraw_EnumDrivers(Graphics_Driver *ref_list,uint *out_count);
BOOL lego::ddraw::DirectDraw_EnumDriverCallback(LPGUID lpGUID,LPSTR lpDriverDescription,LPSTR lpDriverName,LPVOID lpContext);
BOOL __cdecl lego::ddraw::DirectDraw_EnumDevices(Graphics_Driver *driver,Graphics_Device *ref_list,uint *out_count);
HRESULT lego::ddraw::DirectDraw_EnumDeviceCallback(LPGUID lpGuid,LPSTR lpDeviceDescription,LPSTR lpDeviceName,D3DDEVICEDESC_V1 *lpHWDesc,D3DDEVICEDESC_V1 *lpHELDesc,LPVOID lpContext);
BOOL __cdecl lego::ddraw::DirectDraw_EnumModes(Graphics_Driver *driver,BOOL fullScreen,Graphics_Mode *ref_list,uint *out_count);
HRESULT lego::ddraw::DirectDraw_EnumModeCallback(DDSURFACEDESC2 *lpDDSurfaceDesc,LPVOID lpContext);
BOOL __cdecl lego::ddraw::DirectDraw_Setup(BOOL fullscreen,Graphics_Driver *driver,Graphics_Device *device,Graphics_Mode *screen,uint xPos,uint yPos,uint width,uint height);
void __cdecl lego::ddraw::DirectDraw_Flip(void);
BOOL __cdecl lego::ddraw::DirectDraw_SaveBMP(IDirectDrawSurface4 *surface,char *fname);
void __cdecl lego::ddraw::DirectDraw_ReturnFrontBuffer(void);
void __cdecl lego::ddraw::DirectDraw_BlitBuffers(void);
void __cdecl lego::ddraw::DirectDraw_Shutdown(void);
void __cdecl lego::ddraw::DirectDraw_AdjustTextureUsage(uint *ref_textureUsage);
BOOL __cdecl lego::ddraw::DirectDraw_GetAvailTextureMem(uint *out_total,uint *out_avil);
HRESULT __cdecl lego::ddraw::DirectDraw_Clear(Area2F *window,uint colour);
BOOL __cdecl lego::ddraw::DirectDraw_CreateClipper(BOOL fullscreen,uint width,uint height);
void __cdecl lego::ddraw::DirectDraw_Blt8ToSurface(IDirectDrawSurface4 *target,IDirectDrawSurface4 *source,D3DRMPaletteEntry *palette);
uint __cdecl lego::ddraw::DirectDraw_GetColour(IDirectDrawSurface4 *surf,uint colour);
uint __cdecl lego::ddraw::DirectDraw_CountMaskBits(uint mask);
void __cdecl lego::image::Image_Initialise(void);
void __cdecl lego::image::Image_Shutdown(void);
void __cdecl lego::image::Image_Remove(Image *image);
BOOL __cdecl lego::image::Image_CopyToDataToSurface(IDirectDrawSurface4 *surface,D3DRMImage *image);
BOOL __cdecl lego::image::Image_8BitSourceCopy(DDSURFACEDESC2 *desc,D3DRMImage *image);
uint __cdecl lego::image::Image_CountMaskBits(uint mask);
uint __cdecl lego::image::Image_CountMaskBitShift(uint mask);
void __cdecl lego::image::Image_FlipSurface(DDSURFACEDESC2 *desc);
BOOL __cdecl lego::image::Image_24BitSourceCopy(DDSURFACEDESC2 *desc,D3DRMImage *image);
Image * __cdecl lego::image::Image_LoadBMPScaled(char *fileName,uint width,uint height);
COLORREF __cdecl lego::image::Image_RGB2CR(byte red,byte green,byte blue);
void __cdecl lego::image::Image_SetPenZeroTrans(Image *image);
void __cdecl lego::image::Image_SetupTrans(Image *image,float red_low,float green_low,float blue_low,float red_high,float green_high,float blue_high);
void __cdecl lego::image::Image_DisplayScaled(Image *image,Area2F *src,Point2F *destPos,Size2F *destSize);
void * __cdecl lego::image::Image_LockSurface(Image *image,uint *out_pitch,uint *out_bpp);
void __cdecl lego::image::Image_UnlockSurface(Image *image);
uint __cdecl lego::image::Image_GetPen255BigEndian(Image *image);
uint __cdecl lego::image::Image_GetPixelMaskBigEndian(Image *image);
BOOL __cdecl lego::image::Image_GetPixel(Image *image,uint x,uint y,uint *out_colour);
Image * __cdecl lego::image::Image_Create(IDirectDrawSurface4 *surface,uint width,uint height,COLORREF penZero,COLORREF pen255);
void __cdecl lego::image::Image_AddList(void);
void __cdecl lego::image::Image_RemoveAll(void);
DWORD __cdecl lego::image::Image_DDColorMatch(IDirectDrawSurface4 *pdds,DWORD rgb);
void __cdecl lego::image::Image_CR2RGB(COLORREF cr,byte *out_r,byte *out_g,byte *out_b);
void __cdecl lego::image::Image_GetScreenshot(Image *ref_image,uint xsize,uint ysize);
void __cdecl lego::image::Image_InitFromSurface(Image *ref_newImage,IDirectDrawSurface4 *surface,uint width,uint height,COLORREF penZero,COLORREF pen255);
BOOL __cdecl lego::image::Image_SaveBMP(Image *image,char *fname);
G98CSurface * __thiscall lego::video::G98CSurface___deletor(void *this,G98CSurface *This,byte flag);
void __thiscall lego::video::G98CSurface___dtor(G98CSurface *this);
G98CSurface * __thiscall lego::video::G98CSurface___ctor(G98CSurface *this,int width,int height,int bpp,bool vram,bool fullScreen);
bool __thiscall lego::video::G98CSurface__Init(G98CSurface *this,int width,int height,int bpp,bool vram);
void __thiscall lego::video::G98CSurface__PreInit(G98CSurface *this,bool fullscreen);
int __thiscall lego::video::G98CSurface__Width(void *this,G98CSurface *This);
int __thiscall lego::video::G98CSurface__Height(void *this,G98CSurface *This);
bool __thiscall lego::video::G98CSurface__Lock(G98CSurface *this);
bool __thiscall lego::video::G98CSurface__Unlock(G98CSurface *this);
int __thiscall lego::video::G98CSurface__CountMaskBits(G98CSurface *this,uint mask);
G98CAnimation * __thiscall lego::video::G98CAnimation___ctor(G98CAnimation *this,char *filename);
G98CAnimation * __thiscall lego::video::G98CAnimation___deletor(void *this,G98CAnimation *This,byte flag);
void __thiscall lego::video::G98CAnimation___dtor(G98CAnimation *this);
void __thiscall lego::video::G98CAnimation__BMICopy(G98CAnimation *this,BITMAPINFO *bmi);
bool __thiscall lego::video::G98CAnimation__Update(G98CAnimation *this);
uint __thiscall lego::video::G98CAnimation__Length(G98CAnimation *this);
void __thiscall lego::video::G98CAnimation__SetTime(G98CAnimation *this,uint time);
uint __thiscall lego::video::G98CAnimation__GetTime(G98CAnimation *this);
void __cdecl lego::video::Animation_Initialise(IDirectDraw4 *directDraw);
Animation_t * __cdecl lego::video::Animation_Load(char *fName);
BOOL __cdecl lego::video::Animation_Update(Animation_t *anim);
void __cdecl lego::video::Animation_BlitToBackBuffer(Animation_t *anim,RECT *destRect);
void __cdecl lego::video::Animation_SetTime(Animation_t *anim,uint time);
uint __cdecl lego::video::Animation_GetTime(Animation_t *anim);
uint __cdecl lego::video::Animation_GetLength(Animation_t *anim);
void __cdecl lego::video::Animation_Free(Animation_t *anim);
BOOL __cdecl lego::video::Animation_IsOk(Animation_t *anim);
BOOL __cdecl lego::input::Input_InitKeysAndDI(void);
void __cdecl lego::input::Input_ReadKeys(void);
uint __cdecl lego::input::Input_AnyKeyPressed(void);
void __cdecl lego::input::Input_ReleaseKeysAndDI(void);
void __cdecl lego::input::Input_ReadMouse2(void);
BOOL __cdecl lego::input::Input_SetCursorPos(int x,int y);
void __cdecl lego::io::File_Initialise(char *programName,BOOL insistOnCD,char *registryLocation);
BOOL __cdecl lego::io::File_FindDataCD(void);
BOOL __cdecl lego::io::File_SetBaseSearchPath(char *basePath);
void __cdecl lego::io::File_Error(char *msg,...);
int __cdecl lego::io::File_LoadWad(char *fName);
BOOL __cdecl lego::io::File_GetCDFilePath(char *out_path,char *fname);
int __cdecl lego::io::File_MakeDir(char *path);
File * __cdecl lego::io::File_Open(char *fName,char *mode);
int __cdecl lego::io::File_Seek(File *f,int pos,int origin);
int __cdecl lego::io::File_Read(void *out_buffer,int size,int count,File *f);
int __cdecl lego::io::File_Write(void *buffer,int size,int count,File *f);
int __cdecl lego::io::File_Close(File *f);
int __cdecl lego::io::File_Tell(File *f);
BOOL __cdecl lego::io::File_Exists(char *fName);
int __cdecl lego::io::File_GetC(File *f);
int __cdecl lego::io::File_Length(File *f);
char * __cdecl lego::io::File_InternalFGetS(char *out_str,int num,File *f);
char * __cdecl lego::io::File_GetS(char *out_str,int num,File *f);
int __cdecl lego::io::File_PrintF(File *f,char *msg,...);
FileSys __cdecl lego::io::_File_GetSystem(File *f);
FileSys __cdecl lego::io::_File_CheckSystem(char *fName,char *mode);
BOOL __cdecl lego::io::_File_OpenWad(WADFILE *wad,char *fName);
File * __cdecl lego::io::_File_Alloc(FileSys fType);
void * __cdecl lego::io::_File_Malloc(int size);
void __cdecl lego::io::_File_Free(void *ptr);
void __cdecl lego::io::_File_Dealloc(File *file);
char * __cdecl lego::io::_File_GetWadName(char *fName);
char * __cdecl lego::io::File_GetLine(char *out_str,uint size,File *file);
byte * __cdecl lego::io::File_LoadBinary(char *filename,uint *out_size);
void * __cdecl lego::io::File_Load(char *filename,uint *out_size,BOOL binary);
uint __cdecl lego::io::File_LoadBinaryHandle(char *filename,uint *out_size);
char * __cdecl lego::io::File_VerifyFilename(char *filename);
void __cdecl lego::io::File_SetLoadCallback(FileLoadCallback callback,void *data);
void __cdecl lego::io::File_CheckRedundantFiles(char *logName);
void __cdecl lego::io::File_CheckDirectory(char *dirName);
void __cdecl lego::io::File_CheckFile(char *fileName);
BOOL __cdecl lego::gfx::Mesh_Initialise(char *sharedTextureDir);
BOOL __cdecl lego::gfx::Mesh_CreateGlobalMaterial(void);
BOOL __cdecl lego::gfx::Mesh_SetMaterial(D3DMaterial *newMaterial);
Mesh * __cdecl lego::gfx::Mesh_ObtainFromList(void);
void __cdecl lego::gfx::Mesh_ReturnToList(Mesh *mesh);
void __cdecl lego::gfx::Mesh_AddList(void);
Mesh * __cdecl lego::gfx::Mesh_CreateOnFrame(IDirect3DRMFrame3 *frame,MeshRenderCallback renderFunc,uint renderFlags,void *data,Mesh_Type type);
Mesh * __cdecl lego::gfx::Mesh_Clone(Mesh *mesh,IDirect3DRMFrame3 *frame);
Mesh * __cdecl lego::gfx::Mesh_Load(char *filename,IDirect3DRMFrame3 *frame,BOOL noTextures);
BOOL __cdecl lego::gfx::Mesh_ParseLWO(char *basePath,Mesh *mesh,APPOBJ *lightWaveObject,BOOL noTextures);
void __cdecl lego::gfx::Mesh_GetSurfInfo(char *basePath,APPOBJ *lightWaveObject,Mesh_LightWave_Surface *lightWaveSurf,BOOL noTextures);
BOOL __cdecl lego::gfx::Mesh_GetTextureSeqInfo(char *tname,char *out_tfname,int *out_tstart,int *out_tnumlen);
void __cdecl lego::gfx::Mesh_GetNextInSequence(char *baseName,char *out_nextTextName,uint *ref_texNum,uint tnumlen);
void __cdecl lego::gfx::Mesh_UViewMesh(APPOBJ *lightWaveObject,Point2F *textCoords);
void __cdecl lego::gfx::Mesh_GetTextureUVsWrap(uint vertexCount,Vector3F *vertices,Point2F *coords,float sx,float sy,float sz,float px,float py,float pz,LWTEXFLAGS flags);
BOOL __cdecl lego::gfx::Mesh_SetTextureTime2(Mesh *mesh,float frame);
void __cdecl lego::gfx::Mesh_Remove(Mesh *mesh,IDirect3DRMFrame3 *frame);
Mesh_Group * __cdecl lego::gfx::Mesh_GetGroup(Mesh *mesh,D3DRMGroupIndex groupID,uint *out_vertexCount,uint *unused_out_faceCount,uint *out_vPerFace,uint *out_faceDataSize,uint *out_faceData);
uint __cdecl lego::gfx::Mesh_GetGroupCount(Mesh *mesh);
int __cdecl lego::gfx::Mesh_AddGroup(Mesh *mesh,uint vertexCount,uint faceCount,uint vPerFace,uint *faceData);
void __cdecl lego::gfx::Mesh_AlterGroupRenderFlags(Mesh *mesh,D3DRMGroupIndex groupID,uint newFlags);
void __cdecl lego::gfx::Mesh_Scale(Mesh *mesh,float x,float y,float z);
void __cdecl lego::gfx::Mesh_SetVertices(Mesh *mesh,D3DRMGroupIndex groupID,uint index,uint count,Vertex *vertices);
void __cdecl lego::gfx::Mesh_GetVertices(Mesh *mesh,D3DRMGroupIndex groupID,uint index,uint count,Vertex *out_vertices);
void __cdecl lego::gfx::Mesh_SetVertices_PointNormalAt(Mesh *mesh,D3DRMGroupIndex groupID,uint index,uint count,Vector3F *vertices,Vector3F *position,Point2F *textCoords);
void __cdecl lego::gfx::Mesh_SetVertices_SameNormal(Mesh *mesh,D3DRMGroupIndex groupID,uint index,uint count,Vector3F *vertices,Vector3F *normal,Point2F *textCoords);
void __cdecl lego::gfx::Mesh_SetVertices_VNT(Mesh *mesh,D3DRMGroupIndex groupID,uint index,uint count,Vector3F *vertices,Vector3F **normal,Point2I *textCoords);
BOOL __cdecl lego::gfx::Mesh_IsGroupHidden(Mesh *mesh,D3DRMGroupIndex groupID);
void __cdecl lego::gfx::Mesh_HideGroup(Mesh *mesh,D3DRMGroupIndex groupID,BOOL hide);
void __cdecl lego::gfx::Mesh_Hide(Mesh *mesh,BOOL hide);
BOOL __cdecl lego::gfx::Mesh_RenderCallback(IDirect3DRMUserVisual *lpD3DRMUV,Mesh *lpArg,D3DRMUserVisualReason lpD3DRMUVreason,IUnknown *lpD3DRMDev,IDirect3DRMViewport *lpD3DRMview);
void __cdecl lego::gfx::Mesh_SetMeshRenderDesc(Mesh *mesh,Viewport *view,Matrix4F *matWorld,BOOL alphaBlend);
void __cdecl lego::gfx::Mesh_SetRenderDesc(uint flags,Matrix4F *matWorld,BOOL alphaBlend);
void __cdecl lego::gfx::Mesh_SetAlphaRender(D3DBlend src,D3DBlend dest);
void __cdecl lego::gfx::Mesh_AddToPostRenderList(Mesh *mesh,Matrix4F *matWorld);
void __cdecl lego::gfx::Mesh_ClearPostRenderList(void);
void __cdecl lego::gfx::Mesh_PostRenderAll(Viewport *view);
Container_Texture * __cdecl lego::gfx::Mesh_LoadTexture(char *baseDir,char *name,uint *out_width,uint *out_height);
Mesh_TextureReference * __cdecl lego::gfx::Mesh_SearchTexturePathList(Mesh_TextureReference *list,uint count,char *path);
void __cdecl lego::gfx::Mesh_AddTexturePathEntry(Mesh_TextureReference *list,uint *ref_count,char *path,IDirectDrawSurface4 *surface,BOOL trans);
void __cdecl lego::gfx::Mesh_SetGroupTexture(Mesh *mesh,D3DRMGroupIndex groupID,Container_Texture *mt);
void __cdecl lego::gfx::Mesh_RemoveGroupTexture(Mesh *mesh,D3DRMGroupIndex groupID);
BOOL __cdecl lego::gfx::Mesh_CreateGroupMaterial(Mesh *mesh,D3DRMGroupIndex groupID);
BOOL __cdecl lego::gfx::Mesh_SetGroupMaterial(Mesh *mesh,D3DRMGroupIndex groupID,D3DMaterial *mat);
BOOL __cdecl lego::gfx::Mesh_SetGroupColour(Mesh *mesh,D3DRMGroupIndex groupID,float r,float g,float b,Mesh_Colour type);
D3DMaterial * __cdecl lego::gfx::Mesh_GetGroupMaterial(Mesh *mesh,D3DRMGroupIndex groupID);
BOOL __cdecl lego::gfx::Mesh_SetGroupMaterialValues(Mesh *mesh,D3DRMGroupIndex groupID,float value,Mesh_Colour matType);
void __cdecl lego::gfx::Mesh_SetIdentityMatrix(Matrix4F *out_matrix);
BOOL __cdecl lego::gfx::Mesh_SetCurrentViewport(IDirect3DRMViewport *rmViewport);
BOOL __cdecl lego::gfx::Mesh_SetCurrentGODSViewport(Viewport *view);
BOOL __cdecl lego::gfx::Mesh_SetTransform(D3DTransformStateType state,Matrix4F *matrix);
BOOL __cdecl lego::gfx::Mesh_ChangeTextureStageState(D3DTextureStageStateType dwRenderStateType,DWORD dwRenderState);
void __cdecl lego::gfx::Mesh_StoreTextureAndMat(void);
void __cdecl lego::gfx::Mesh_RestoreTextureAndMat(void);
BOOL __cdecl lego::gfx::Mesh_RenderMesh(Mesh *mesh,Matrix4F *matWorld,BOOL alphaBlend);
BOOL __cdecl lego::gfx::Mesh_CanRenderGroup(Mesh_Group *group);
BOOL __cdecl lego::gfx::Mesh_RenderGroup(Mesh *mesh,Mesh_Group *group,Matrix4F *matWorld,BOOL alphaBlend);
BOOL __cdecl lego::gfx::Mesh_SetGroupRenderDesc(Mesh *mesh,Mesh_Group *group,Matrix4F *matWorld,BOOL alphaBlend);
BOOL __cdecl lego::gfx::Mesh_RenderTriangleList(DWORD matHandle,IDirect3DTexture2 *texture,DWORD renderFlags,Mesh_Vertex *vertices,DWORD vertexCount,WORD *faceData,DWORD indexCount);
BOOL __cdecl lego::image::Flic_Setup(char *filename,Flic **out_fsp,FlicUserFlags flags);
BOOL __cdecl lego::image::Flic_Close(Flic *fsp);
BOOL __cdecl lego::image::Flic_LoadHeader(char *filename,Flic **fsp);
BOOL __cdecl lego::image::Flic_Animate(Flic *fsp,Area2F *destArea,BOOL advance,BOOL trans);
FlicError __cdecl lego::image::Flic_Memory(Flic *fsp);
FlicError __cdecl lego::image::Flic_Load(Flic *fsp);
FlicError __cdecl lego::image::Flic_FindChunk(Flic *fsp);
BOOL __cdecl lego::image::Flic_FrameChunk(Flic *fsp);
FlicError __cdecl lego::image::Flic_DoChunk(Flic *fsp);
FlicError __cdecl lego::image::Flic_LoadPointers(Flic *fsp);
FlicError __cdecl lego::image::Flic_LoadPalette64(Flic *fsp);
BOOL __cdecl lego::image::Flic_Copy(Flic *fsp);
BOOL __cdecl lego::image::FlicBRunDepackHiColor(Flic *fsp);
BOOL __cdecl lego::image::FlicBRunDepackHiColorFlic32k(Flic *fsp);
BOOL __cdecl lego::image::Flic_BrunDepack(Flic *fsp);
int __cdecl lego::nerps::funcs::NERPFunc__True(int *stack);
void __cdecl lego::image::FlicCreateHiColorTable(Flic *fsp);
BOOL __cdecl lego::image::Flic_Palette256(Flic *fsp);
void __cdecl lego::util::logf_removed(char *message,...);
void __cdecl lego::image::FlicDeltaWordHiColor(Flic *fsp);
void __cdecl lego::image::FlicDeltaWordHiColorFlic32k(Flic *fsp);
BOOL __cdecl lego::image::Flic_DeltaWord(Flic *fsp);
ushort __cdecl lego::image::getFlicCol(byte n,Flic *fsp);
uint __cdecl lego::image::Flic_GetHeight(Flic *fsp);
TextWindow * __cdecl lego::front::TextWindow_Create(Font *font,Area2F *area,uint size);
void __cdecl lego::front::TextWindow_EnableCentering(TextWindow *textWnd,BOOL enable);
void __cdecl lego::front::TextWindow_Remove(TextWindow *textWnd);
void __cdecl lego::front::TextWindow_ChangePosition(TextWindow *textWnd,int xpos,int ypos);
void __cdecl lego::front::TextWindow_ChangeSize(TextWindow *textWnd,uint width,uint height);
void __cdecl lego::front::TextWindow_PagePrintF(TextWindow *textWnd,int page,char *format,...);
void __cdecl lego::front::TextWindow_PrintF(TextWindow *textWnd,char *format,...);
void __cdecl lego::front::TextWindow_VPrintF(TextWindow *textWnd,int page,char *format,va_list argptr);
void __cdecl lego::front::TextWindow_PrintFOverlay(TextWindow *textWnd,BOOL oneFrame,char *format,...);
BOOL __cdecl lego::front::TextWindow_Update(TextWindow *textWnd,uint posFromEnd,float elapsed,int *out_lowestPoint);
BOOL __cdecl lego::front::TextWindow_UpdateOverlay(TextWindow *textWnd,float elapsed,int *out_lowestPoint);
void __cdecl lego::front::TextWindow_Clear(TextWindow *textWnd);
void __cdecl lego::front::TextWindow_GetInfo(TextWindow *textWnd,uint *out_linesCount,uint *out_linesCapacity);
void __cdecl lego::input::Keys_Initialise(void);
BOOL __cdecl lego::input::Key_Find(char *name,Keys8 *out_keyCode);
void __cdecl lego::draw::Draw_Initialise(Area2F *window);
void __cdecl lego::draw::Draw_SetClipWindow(Area2F *window);
void __cdecl lego::draw::Draw_GetClipWindow(Area2F *out_window);
void __cdecl lego::draw::Draw_LineListEx(Point2F *fromList,Point2F *toList,uint count,float r,float g,float b,DrawEffect effect);
void __cdecl lego::draw::Draw_RectListEx(Area2F *rectList,uint count,float r,float g,float b,DrawEffect effect);
void __cdecl lego::draw::Draw_RectList2Ex(Draw_Rect *rectList,uint count,DrawEffect effect);
float10 __cdecl lego::draw::Draw_DotCircle(Point2F *pos,uint radius,uint dots,float r,float g,float b,DrawEffect effect);
uint __cdecl lego::draw::Draw_GetColour(float r,float g,float b);
BOOL __cdecl lego::draw::Draw_LockSurface(IDirectDrawSurface4 *surface,DrawEffect effect);
void __cdecl lego::draw::Draw_UnlockSurface(IDirectDrawSurface4 *surface);
BOOL __cdecl lego::draw::Draw_SetDrawPixelFunc(DrawEffect effect);
void __cdecl lego::draw::Draw_LineActual(int x1,int y1,int x2,int y2,uint colour);
void __cdecl lego::draw::Draw_Pixel8(int x,int y,uint value);
void __cdecl lego::draw::Draw_Pixel16(int x,int y,uint value);
void __cdecl lego::draw::Draw_Pixel16XOR(int x,int y,uint value);
void __cdecl lego::draw::Draw_Pixel16HalfTrans(int x,int y,uint value);
void __cdecl lego::draw::Draw_Pixel24(int x,int y,uint value);
void __cdecl lego::draw::Draw_Pixel32(int x,int y,uint value);
Lws_Info * __cdecl lego::gfx::Lws_Parse(char *fname,BOOL looping);
void __cdecl lego::gfx::Lws_Initialise(char *sharedDir,LwsFindSFXIDFunc FindSFXID,LwsPlaySample3DFunc PlaySample3D,LwsSoundEnabledFunc SoundEnabled);
void __cdecl lego::gfx::Lws_Shutdown(void);
uint __cdecl lego::gfx::Lws_GetFrameCount(Lws_Info *scene);
void __cdecl lego::gfx::Lws_SetupSoundTriggers(Lws_Info *scene);
void __cdecl lego::gfx::Lws_LoadMeshes(Lws_Info *scene,IDirect3DRMFrame3 *parent);
Lws_Info * __cdecl lego::gfx::Lws_Clone(Lws_Info *scene,IDirect3DRMFrame3 *parent);
void __cdecl lego::gfx::Lws_SetTime(Lws_Info *scene,float time);
float10 __cdecl lego::gfx::Lws_FindPrevKey(Lws_Node *node,float time,ushort *prev);
void __cdecl lego::gfx::Lws_AnimateTextures(Lws_Info *scene,Lws_Node *node);
void __cdecl lego::gfx::Lws_HandleTrigger(Lws_Info *scene,Lws_Node *node);
BOOL __cdecl lego::gfx::Lws_KeyPassed(Lws_Info *scene,uint key);
float10 __cdecl lego::gfx::Lws_FindPrevDissolve(Lws_Node *node,float time,ushort *prev);
void __cdecl lego::gfx::Lws_InterpolateDissolve(Lws_Info *scene,Lws_Node *node,ushort prev,float delta);
void __cdecl lego::gfx::Lws_SetDissolveLevel(Lws_Info *scene,Lws_Node *node,float level);
void __cdecl lego::gfx::Lws_InterpolateKeys(Lws_Info *scene,Lws_Node *node,ushort key,float delta);
void __cdecl lego::gfx::Lws_SetupNodeTransform(Lws_Info *scene,Lws_Node *node,Vector3F *pos,Vector3F *hpb,Vector3F *scale);
Mesh * __cdecl lego::gfx::Lws_LoadMesh(char *baseDir,char *fname,IDirect3DRMFrame3 *frame,BOOL noTextures);
Mesh * __cdecl lego::gfx::Lws_SearchMeshPathList(Lws_MeshPath *list,uint count,char *path);
void __cdecl lego::gfx::Lws_AddMeshPathEntry(Lws_MeshPath *ref_list,uint *ref_count,char *path,Mesh *mesh);
void __cdecl lego::gfx::Lws_CreateFrames(Lws_Info *scene,Lws_Node *node,IDirect3DRMFrame3 *parent,ushort *ref_frameCount);
void __cdecl lego::gfx::Lws_LoadNodes(Lws_Info *scene,Lws_Node *node);
void __cdecl lego::gfx::Lws_SetAbsoluteKey(Lws_Info *scene,Lws_Node *node,ushort key);
void __cdecl lego::gfx::Lws_Free(Lws_Info *scene);
void __cdecl lego::gfx::Lws_FreeNode(Lws_Info *scene,Lws_Node *node);
BOOL __cdecl lego::snd::Sound_Initialise(BOOL nosound);
BOOL __cdecl lego::snd::Sound_IsInitialised(void);
BOOL __cdecl lego::snd::Sound_PlayCDTrack(uint track,SoundMode mode,SoundCDStopCallback stopCallback);
BOOL __cdecl lego::snd::Sound_StopCD(void);
void __cdecl lego::snd::Sound_Update(BOOL cdtrack);
int __cdecl lego::snd::WaveOpenFile(void *fileData,uint fileSize,HMMIO *out_phmmioIn,WAVEFORMATEX **out_ppwfxInfo,MMCKINFO *out_pckInRIFF);
uint __cdecl lego::snd::GetWaveAvgBytesPerSec(char *pszFileName);
int __cdecl lego::snd::WaveOpenFile2(char *pszFileName,HMMIO *out_phmmioIn,WAVEFORMATEX **out_ppwfxInfo,MMCKINFO *out_pckInRIFF);
int __cdecl lego::snd::WaveStartDataRead(HMMIO *phmmioIn,MMCKINFO *pckIn,MMCKINFO *pckInRIFF);
int __cdecl lego::snd::WaveReadFile(HMMIO hmmioIn,uint cbRead,byte *pbDest,MMCKINFO *pckIn,uint *cbActualRead);
int __cdecl lego::snd::WaveCloseReadFile(HMMIO *phmmio,WAVEFORMATEX **ppwfxSrc);
BOOL __cdecl lego::snd::Restart_CDTrack(int track);
void __cdecl lego::snd::ReportCDError(void);
BOOL __cdecl lego::snd::Status_CDTrack(int track);
BOOL __cdecl lego::snd::Play_CDTrack(int track);
BOOL __cdecl lego::snd::Stop_CDTrack(void);
void __cdecl lego::io::Mem_Initialise(void);
uint __cdecl lego::io::Mem_AllocHandle(uint size);
void __cdecl lego::io::Mem_FreeHandle(uint handle);
void * __cdecl lego::io::Mem_AddressHandle(uint handle);
IDirect3DRMMaterial2 * __cdecl lego::gfx::Material_Create(float emissiveRed,float emissiveGreen,float emissiveBlue,float specularRed,float specularGreen,float specularBlue,float power);
AnimClone * __cdecl lego::gfx::AnimClone_Register(IDirect3DRMAnimationSet2 *animSet,IDirect3DRMFrame3 *root,uint frameCount);
AnimClone * __cdecl lego::gfx::AnimClone_RegisterLws(void *struct38,IDirect3DRMFrame3 *rmFrame3,undefined4 field1c);
AnimClone * __cdecl lego::gfx::AnimClone_Make(AnimClone *lastActFrameRes,IDirect3DRMFrame3 *parent,uint *out_frameCount);
void __cdecl lego::gfx::AnimClone_Remove(AnimClone *actFrameRes);
BOOL __cdecl lego::gfx::AnimClone_IsLws__Flic_GetWidth(AnimClone *clone);
void __cdecl lego::gfx::AnimClone_SetTime(AnimClone *clone,float time,float *out_oldTime);
BOOL __cdecl lego::gfx::AnimClone_FrameCountCallback(IDirect3DRMFrame3 *frame,int *lpFramesCount);
BOOL __cdecl lego::gfx::AnimClone_SetupFrameArrayCallback(IDirect3DRMFrame3 *frame,AnimClone *actFrameRes);
BOOL __cdecl lego::gfx::AnimClone_WalkTree(IDirect3DRMFrame3 *frame,uint level,AnimCloneWalkTreeCallback Callback,IDirect3DRMFrame3 *data);
void __cdecl lego::gfx::AnimClone_CreateCopy(IDirect3DRMFrame3 *orig,IDirect3DRMFrame3 *clone,BOOL lws);
void __cdecl lego::gfx::AnimClone_CloneLwsMesh(IDirect3DRMFrame3 *rmFrame3,IDirect3DRMFrame3 *param_2);
void __cdecl lego::gfx::AnimClone_ReferenceVisuals(IDirect3DRMFrame3 *orig,IDirect3DRMFrame3 *clone);
void __cdecl lego::image::BMP_Parse(BITMAP_FILE_INFO_STRUCT *data,uint size,D3DRMImage *istruct);
void __cdecl lego::image::BMP_Cleanup(D3DRMImage *istruct);
void __cdecl lego::debug::SE(char *error,char *errorDesc);
HRESULT __cdecl lego::debug::Error_SetDXError(HRESULT err,int DXModule,char *File,int Line);
void __cdecl lego::debug::Error_Initialise(void);
void __cdecl lego::debug::Error_FullScreen(BOOL on);
void __cdecl lego::debug::Error_CloseLog(void);
void __cdecl lego::debug::Error_Shutdown(void);
char * __cdecl lego::registry::Registry_GetKeyFromPath(char *path,char *out_str);
BOOL __cdecl lego::registry::Registry_GetValue(char *path,char *key,RegistryType dataType,char *out_data,uint dataSize);
BOOL __cdecl lego::registry::Registry_GetValue_Recursive(HKEY parent,char *path,char *key,RegistryType dataType,char *out_data,uint dataSize);
BOOL __cdecl lego::wad::GetFileName(FILE *f,char *out_str);
int __cdecl lego::wad::Wad_Load(char *fName);
Wad * __cdecl lego::wad::Wad_Get(int wadNo);
int __cdecl lego::wad::Wad_FileLength(int wadNo,int fileNo);
int __cdecl lego::wad::Wad_FileCompressedLength(int wadNo,int fileNo);
int __cdecl lego::wad::Wad_FindFreeFileHandle(void);
int __cdecl lego::wad::Wad_IsFileInWad(char *fName,int opt_wadNo);
int __cdecl lego::wad::_Wad_IsFileInWad(char *fName,int wadNo);
int __cdecl lego::wad::Wad_GetFreeWadSlot(void);
int __cdecl lego::wad::_Wad_FileOpen(char *fName,int wadNo);
int __cdecl lego::wad::Wad_FileOpen(char *fName,int opt_wadNo);
void __cdecl lego::wad::Wad_FileClose(int handle);
void * __cdecl lego::wad::Wad_FileGetPointer(int handle);
int __cdecl lego::wad::Wad_hLength(int handle);
void * __cdecl lego::wad::Wad_hData(int handle);
char * __cdecl lego::lw::lwExtractString(char *str1,char *str2,uint *out_pos,uint *out_len);
char * __cdecl lego::lw::stringAlloc(char *str);
uint __cdecl lego::lw::texMapType(char *shapeName);
void __cdecl lego::lw::surfFree(LWSURFACE *srf,BOOL flag);
BOOL __cdecl lego::lw::LWD3D(byte **p,float *f);
BOOL __cdecl lego::lw::PNTSprc(File *file,LWSIZE *sizeData,int csize,float **verts,BOOL dflag);
BOOL __cdecl lego::lw::CRVSprc(File *file,int csize,BOOL dflag);
BOOL __cdecl lego::lw::POLSprc(File *file,LWSIZE *sizeData,LWPOLY **polys,int csize,BOOL dflag);
BOOL __cdecl lego::lw::SRFSprc(File *file,LWSIZE *sizeData,LWSURFLIST **srfl,int csize,uint *srflCount,BOOL dflag);
BOOL __cdecl lego::lw::SURFprc(File *file,LWSIZE *sizeData,LWSURFACE **surf,int csize,BOOL dflag);
BOOL __cdecl lego::lw::LoadLWOB(char *fn,LWSIZE *sd,float **verts,LWPOLY **polys,LWSURFACE **surfs,File **out_fileUV,BOOL dflag);
BOOL __cdecl lego::lw::LoadAppObj(char *fn,APPOBJ **out_ao,BOOL flag);
BOOL __cdecl lego::lw::FreeLWOB(APPOBJ *ao);
float10 __cdecl std::atof(char *str);
int __cdecl std::sprintf(char *out_buffer,char *format,...);
char * __cdecl std::strstr(char *str,char *strSearch);
int __cdecl std::atoi(char *str);
void __cdecl lego::io::Mem_Free(void *buffer);
void * __cdecl lego::io::Mem_Alloc(uint size);
void * __cdecl lego::io::Mem_ReAlloc(void *memblock,uint size);
void __cdecl std::qsort(void *base,uint number,uint width,QsortCompare compare);
longlong __ftol(float10 param_1);
float10 __cdecl std::acos(float10 x);
void __cdecl std::srand(uint seed);
int __cdecl std::rand(void);
float10 __cdecl std::fmod(float10 x,float10 y);
int __cdecl std::vsprintf(char *buffer,char *format,va_list argptr);
void * std::_alloca4k(uint size);
float10 __cdecl std::floor(double x);
int __cdecl std::toupper(int c);
void __cdecl std::exit(int status);
float10 __cdecl std::sqrt(double x);
float10 __cdecl std::fabs(double x);
char * __cdecl std::strncpy(char *_Dest,char *_Source,size_t _Count);
int __cdecl std::_finite(double x);
int __cdecl std::sscanf(char *buffer,char *format,...);
float10 __cdecl std::ceil(double x);
longlong __alldiv(longlong param_1,longlong param_2);
void * __cdecl std::operator_new(uint size);
int __cdecl std::fclose(FILE *stream);
FILE * __cdecl std::fopen(LPCSTR filename,char *mode);
BOOL __cdecl std::_isctype(int c,uint desc);
int __cdecl std::strncmp(char *_Str1,char *_Str2,size_t _MaxCount);
long __cdecl std::ftell(FILE *stream);
int __cdecl std::fseek(FILE *stream,long offset,int origin);
size_t __cdecl std::fwrite(void *out_buffer,size_t size,size_t count,FILE *stream);
int __cdecl std::remove(LPCSTR filename);
int __cdecl std::_chmod(LPCSTR filename,int pmode);
int __cdecl std::_mkdir(LPCSTR dirname);
HANDLE __cdecl std::_findfirst32(LPCSTR filename,_finddata32_t *fileinfo);
int __cdecl std::_findnext32(HANDLE handle,_finddata32_t *fileinfo);
int __cdecl std::_findclose(HANDLE handle);
char * __cdecl std::_getcwd(char *out_buffer,int maxlen);
size_t __cdecl std::fread(void *out_buffer,size_t size,size_t count,FILE *stream);
int __cdecl std::fgetc(FILE *stream);
char * __cdecl std::fgets(char *str,int numChars,FILE *stream);
int __cdecl std::vfprintf(FILE *stream,char *format,va_list argptr);
int __cdecl std::_stricmp(char *_Str1,char *_Str2);
char * __cdecl std::_fullpath(char *out_absPath,LPCSTR relPath,uint maxLength);
int __cdecl std::fscanf(FILE *stream,char *format,...);
void __cdecl std::_splitpath(char *path,char *drive,char *dir,char *fname,char *ext);
int __cdecl std::vfscanf(FILE *stream,char *format,va_list argptr);
int __cdecl std::tolower(int c);
int __cdecl std::isspace(int c);
HRESULT Direct3DRMCreate(IUnknown **lplpIDirect3DRM);
Vector3F * D3DRMVectorRandom(Vector3F *d);
Vector3F * D3DRMVectorRotate(Vector3F *r,Vector3F *v,Vector3F *axis,float theta);
HRESULT DirectDrawEnumerateA(DDENUMCALLBACKA *lpCallback,LPVOID lpContext);
HRESULT DirectDrawCreate(LPGUID lpGUID,IDirectDraw **lplpIDirectDraw,LPUNKNOWN pUnkOuter);
HRESULT AVIStreamInfoA(IAVIStream *pIAVIStream,AVISTREAMINFOA *pAVIStreamInfoA,LONG lSize);
IGetFrame * AVIStreamGetFrameOpen(IAVIStream *pIAVIStream,BITMAPINFOHEADER *lpbiWanted);
HRESULT AVIStreamOpenFromFileA(IAVIStream **lplpIAVIStream,LPCSTR szFile,DWORD fccType,LONG lParam,UINT mode,CLSID *pclsidHandler);
ULONG AVIStreamRelease(IAVIStream *pIAVIStream);
LPVOID AVIStreamGetFrame(IGetFrame *pIGetFrame,LONG lPos);
void AVIFileInit(void);
HRESULT DirectInputCreateA(HINSTANCE hInst,DWORD dwVersion,IUnknown **lplpIDirectInput,IUnknown *pUnkOuter);
HRESULT DirectSoundCreate(LPGUID lpGuid,IDirectSound **lplpIDirectSound,IUnknown *pUnkOuter);
uint __cdecl lego::rnc::RNC_Uncompress(void *bufferIn,void **out_bufferOut);
RNCError __cdecl lego::rnc::_RNC_Uncompress(RNC_HeaderInfo *bufferIn,byte *bufferOut);
RNCError __cdecl lego::rnc::RNC_M1_Uncompress(RNC_HeaderInfo *bufferIn,byte *bufferOut);
RNCError __cdecl lego::rnc::RNC_M2_Uncompress(RNC_HeaderInfo *bufferIn,byte *bufferOut);
void __cdecl lego::rnc::RNC_BitStreamInit(RNC_HeaderInfo *bufferIn,byte *bufferOut);
uint __cdecl lego::rnc::RNC_M1_BitStreamAdvance(byte bits);
uint __cdecl lego::rnc::RNC_M2_BitStreamAdvance(byte bits);
void __cdecl lego::rnc::RNC_M1_ReadHuffmanTable(HuffmanLeaf *table,byte bits);
ushort __cdecl lego::rnc::RNC_M1_ReadHuffman(HuffmanLeaf *table);
ushort __cdecl lego::rnc::RNC_M2_ReadLengthCode(void);
ushort __cdecl lego::rnc::RNC_M2_ReadOffsetCode(void);
void __cdecl lego::rnc::RNC_M1_HuffmanReset(HuffmanLeaf *table,byte bits);
void __cdecl lego::rnc::RNC_M1_HuffmanAssignValues(HuffmanLeaf *table,byte bits);
uint __cdecl lego::rnc::RNC_M1_MirrorBits(uint value,byte bits);
BOOL __cdecl lego::setup::Init_Initialise(BOOL setup,BOOL debug,BOOL best,BOOL window,char *noHALMsg);
INT_PTR lego::setup::Init_DialogProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
void __cdecl lego::setup::Init_SetFullScreen(HWND hDlg,BOOL on);
void __cdecl lego::setup::Init_SetModeList(HWND hDlg);
void __cdecl lego::setup::Init_SetDeviceList(HWND hDlg);
void __cdecl lego::setup::Init_AddValidMode(uint width,uint height,uint depth);
BOOL __cdecl lego::setup::Init_IsValidMode(uint modeIndex);
BOOL __cdecl lego::setup::Init_GetMode(char *name,uint *out_modeIndex);
void __cdecl lego::setup::Init_HandleWindowButton(HWND hDlg);
int __cdecl std::_strnicmp(char *_Str1,char *_Str2,size_t _MaxCount);
char * __cdecl std::itoa(int value,char *buffer,int radix);
char * __cdecl std::_strlwr(char *str);
char * __cdecl std::_strupr(char *str);

