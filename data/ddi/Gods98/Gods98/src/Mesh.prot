extern unsigned __int64 __stdcall Int64ShllMod32(unsigned __int64 Value,unsigned long ShiftCount);
extern __int64 __stdcall Int64ShraMod32(__int64 Value,unsigned long ShiftCount);
extern unsigned __int64 __stdcall Int64ShrlMod32(unsigned __int64 Value,unsigned long ShiftCount);
extern void *__cdecl GetFiberData(void );
extern void *__cdecl GetCurrentFiber(void );
extern float __cdecl Maths_InterpolationDelta(float start,float end,float current);
extern float __cdecl Maths_Interpolate(float start,float end,float delta);
extern struct VECTOR3D *__cdecl Maths_Vector2DMake3D(struct VECTOR3D *r,struct VECTOR2D *v);
extern struct VECTOR2D *__cdecl Maths_Vector3DMake2D(struct VECTOR2D *r,struct VECTOR3D *v);
extern float __cdecl Maths_Vector2DModulus(struct VECTOR2D *v);
extern float __cdecl Maths_Vector2DDistance(struct VECTOR2D *a,struct VECTOR2D *b);
extern float __cdecl Maths_Vector2DDotProduct(struct VECTOR2D *a,struct VECTOR2D *b);
extern struct VECTOR2D *__cdecl Maths_Vector2DSubtract(struct VECTOR2D *r,struct VECTOR2D *a,struct VECTOR2D *b);
extern struct VECTOR2D *__cdecl Maths_Vector2DAdd(struct VECTOR2D *r,struct VECTOR2D *a,struct VECTOR2D *b);
extern struct VECTOR2D *__cdecl Maths_Vector2DScale(struct VECTOR2D *r,struct VECTOR2D *a,float f);
extern struct VECTOR2D *__cdecl Maths_Vector2DNormalize(struct VECTOR2D *r);
extern struct VECTOR2D *__cdecl Maths_Vector2DSetLength(struct VECTOR2D *r,struct VECTOR2D *a,float l);
extern struct VECTOR2D *__cdecl Maths_Vector2DRandom(struct VECTOR2D *r);
extern float __cdecl Maths_Vector2DCrossProductZ(struct VECTOR2D *a,struct VECTOR2D *b);
extern float __cdecl Maths_Vector3DModulus(struct VECTOR3D *v);
extern float __cdecl Maths_Vector3DDistance(struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DCrossProduct(struct VECTOR3D *r,struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DAdd(struct VECTOR3D *r,struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DSubtract(struct VECTOR3D *r,struct VECTOR3D *a,struct VECTOR3D *b);
extern float __cdecl Maths_Vector3DDotProduct(struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DScale(struct VECTOR3D *r,struct VECTOR3D *a,float f);
extern struct VECTOR3D *__cdecl Maths_Vector3DNormalize(struct VECTOR3D *r);
extern struct VECTOR3D *__cdecl Maths_Vector3DInterpolate(struct VECTOR3D *result,struct VECTOR3D *start,struct VECTOR3D *end,float delta);
extern int __cdecl Block_Compare(struct Block *a,struct Block *b);
extern int __cdecl Block_Adjacent(struct Block *a,struct Block *b);
extern struct Block *__cdecl Block_FromString(struct Block *b,unsigned char *str);
extern struct Block *__cdecl Block_Rotate(struct Block *b,long dir);
extern struct Block *__cdecl Block_Random(struct Block *b,struct Block *size);
extern void __cdecl Error_SetWarn(void );
extern void __cdecl Error_CheckWarn(int check);
extern struct IDirect3DRM3 *__cdecl lpD3DRM(void);
extern struct IDirect3DRMDevice3 *__cdecl lpDevice(void);
extern struct IDirect3DDevice3 *__cdecl lpIMDevice(void);
extern int __cdecl Main_VideoTexture(void);
extern int __cdecl Main_MIPMapEnabled(void);
extern int __cdecl Main_FullScreen(void);
extern unsigned long __cdecl Main_GetFogMethod(void);
extern void __cdecl Main_SetFogMethod(unsigned long m);
extern unsigned long __cdecl Main_ProgrammerMode(void );
extern unsigned char *__cdecl Main_GetStartLevel(void );
extern void *__cdecl hWnd(void );
extern void *__cdecl hInst(void );
extern int __cdecl appWidth(void );
extern int __cdecl appHeight(void );
extern int __cdecl Main_AppActive(void);
extern unsigned long __cdecl Main_GetFlags(void);
extern struct IDirectSound *__cdecl lpDSnd(void);
extern struct IDirectSoundBuffer *__cdecl lpDSBuff(void);
extern struct IDirectSound3DListener *__cdecl lp3DListenerInfo(void);
extern struct IDirectSoundBuffer *__cdecl lpDSStreamBuff(int looping);
extern struct IDirect3DRMFrame3 *__cdecl Debug_Scene(void);
extern struct IDirect3DRMViewport2 *__cdecl Debug_View(void);
extern struct IDirectDraw4 *__cdecl DirectDraw(void);
extern struct IDirectDrawSurface4 *__cdecl DirectDraw_fSurf(void);
extern struct IDirectDrawSurface4 *__cdecl DirectDraw_bSurf(void);
extern int __cdecl DirectDraw_FullScreen(void);
extern int __cdecl DirectDraw_SetupFullScreen(struct DirectDraw_Driver *driver,struct DirectDraw_Device *device,struct DirectDraw_Mode *mode);
extern int __cdecl DirectDraw_SetupWindowed(struct DirectDraw_Device *device,unsigned long xPos,unsigned long yPos,unsigned long width,unsigned long height);
extern int __cdecl Mesh_Initialise(unsigned char *sharedTextureDir);
extern struct Mesh *__cdecl Mesh_ObtainFromList(void );
extern void __cdecl Mesh_ReturnToList(struct Mesh *dead);
static void __cdecl Mesh_AddList(void );
static void __cdecl Mesh_RunThroughLists(void );
extern struct Mesh *__cdecl Mesh_CreateOnFrame(struct IDirect3DRMFrame3 *frame,void (__cdecl *renderFunc)(struct Mesh *,void *,struct Viewport *),unsigned long renderFlags,void *data,unsigned long type);
extern struct Mesh *__cdecl Mesh_Clone(struct Mesh *mesh,struct IDirect3DRMFrame3 *frame);
extern void __cdecl Mesh_AddToContainer(struct Container *cont,struct Mesh *mesh);
extern struct Mesh *__cdecl Mesh_Load(unsigned char *fname,struct IDirect3DRMFrame3 *frame,int noTextures);
extern int __cdecl Mesh_ParseLWO(unsigned char *basePath,struct Mesh *mesh,struct APPOBJTAG *lightWaveObject,int noTextures);
static void __cdecl Mesh_GetSurfInfo(unsigned char *basePath,struct APPOBJTAG *lightWaveObject,struct lpMesh_LightWave_SurfaceTAG *lightWaveSurf,int noTextures);
extern void __cdecl Mesh_UpdateBoundingBox(struct BOX3D *box,struct VECTOR3D *pos);
extern int __cdecl Mesh_GetTextureSeqInfo(unsigned char *tname,unsigned char *tfname,unsigned long *tstart,unsigned long *tnumlen);
extern void __cdecl Mesh_GetNextInSequence(unsigned char *baseName,unsigned char *nextTextName,unsigned long *texNum,unsigned long tnumlen);
extern void __cdecl Mesh_UViewMesh(struct APPOBJTAG *lightWaveObject,struct VECTOR2D *textCoords);
extern void __cdecl Mesh_GetTextureUVsWrap(unsigned long vertexCount,struct VECTOR3D *vertices,struct VECTOR2D *coords,float sx,float sy,float sz,float px,float py,float pz,unsigned long flags);
extern int __cdecl Mesh_SetTextureTime(struct Mesh *mesh,float frame);
extern void __cdecl Mesh_Remove(struct Mesh *mesh,struct IDirect3DRMFrame3 *frame);
extern void __cdecl Mesh_GetGroup(struct Mesh *mesh,unsigned long groupID,unsigned long *vertexCount,unsigned long *faceCount,unsigned long *vPerFace,unsigned long *faceDataSize,unsigned long *faceData);
extern unsigned long __cdecl Mesh_GetGroupCount(struct Mesh *mesh);
extern long __cdecl Mesh_AddGroup(struct Mesh *mesh,unsigned long vertexCount,unsigned long faceCount,unsigned long vPerFace,unsigned long *faceData);
extern void __cdecl Mesh_AlterGroupRenderFlags(struct Mesh *mesh,unsigned long groupID,unsigned long newFlags);
extern void __cdecl Mesh_Scale(struct Mesh *mesh,float x,float y,float z);
extern void __cdecl Mesh_SetVertices(struct Mesh *mesh,unsigned long groupID,unsigned long index,unsigned long count,struct VERTEX3D *vertices);
extern void __cdecl Mesh_GetVertices(struct Mesh *mesh,unsigned long groupID,unsigned long index,unsigned long count,struct VERTEX3D *vertices);
extern void __cdecl Mesh_SetVertices_PointNormalAt(struct Mesh *mesh,unsigned long groupID,unsigned long index,unsigned long count,struct VECTOR3D *vertices,struct VECTOR3D *position,float (*textCoords)[2]);
extern void __cdecl Mesh_SetVertices_SameNormal(struct Mesh *mesh,unsigned long groupID,unsigned long index,unsigned long count,struct VECTOR3D *vertices,struct VECTOR3D *normal,float (*textCoords)[2]);
extern void __cdecl Mesh_SetVertices_VNT(struct Mesh *mesh,unsigned long groupID,unsigned long index,unsigned long count,struct VECTOR3D *vertices,struct VECTOR3D **normal ,struct VECTOR2D *textCoords);
extern int __cdecl Mesh_IsGroupHidden(struct Mesh *mesh,unsigned long groupID);
extern void __cdecl Mesh_HideGroup(struct Mesh *mesh,unsigned long groupID,int hide);
extern void __cdecl Mesh_Hide(struct Mesh *mesh,int hide);
static int __cdecl Mesh_RenderCallback(struct IDirect3DRMUserVisual *lpD3DRMUV,void *lpArg,int lpD3DRMUVreason,struct IDirect3DRMDevice *lpD3DRMDev,struct IDirect3DRMViewport *lpD3DRMview);
static void __cdecl Mesh_SetMeshRenderDesc(struct Mesh *mesh,struct Viewport *vp,struct _D3DMATRIX *matWorld,int alphaBlend);
static void __cdecl Mesh_SetRenderDesc(unsigned long flags,struct _D3DMATRIX *matWorld,int alphaBlend);
static void __cdecl Mesh_SetAlphaRender(int src,int dest);
static int __cdecl Mesh_SetGroupRenderDesc(struct Mesh *mesh,struct Mesh_GroupTAG *group,struct _D3DMATRIX *matWorld,int alphaBlend);
static void __cdecl Mesh_AddToPostRenderList(struct Mesh *mesh,struct _D3DMATRIX *matWorld);
static void __cdecl Mesh_ClearPostRenderList(void );
extern void __cdecl Mesh_PostRenderAll(struct Viewport *vp);
extern struct Container_Texture *__cdecl Mesh_LoadTexture(unsigned char *baseDir,unsigned char *name,unsigned long *width,unsigned long *height);
static struct Mesh_TextureReference *__cdecl Mesh_SearchTexturePathList(struct Mesh_TextureReference *list,unsigned long count,unsigned char *path);
static void __cdecl Mesh_AddTexturePathEntry(struct Mesh_TextureReference *list,unsigned long *count,unsigned char *path,struct IDirectDrawSurface4 *surface,int trans);
extern void __cdecl Mesh_SetGroupTextureIM(struct Mesh *mesh,unsigned long groupID,struct IDirect3DTexture2 *texture);
extern ULONG __cdecl Mesh_ReplaceTextureImages(LPUCHAR fromDirectory, LPUCHAR toDirectory, LPUCHAR prefix);
extern void __cdecl Mesh_SetGroupTexture(struct Mesh *mesh,unsigned long groupID,struct Container_Texture *mt);
extern void __cdecl Mesh_RemoveGroupTexture(struct Mesh *mesh,unsigned long groupID);
extern int __cdecl Mesh_CreateGroupMaterial(struct Mesh *mesh,unsigned long groupID);
static int __cdecl Mesh_SetGroupMaterial(struct Mesh *mesh,unsigned long groupID,struct _D3DMATERIAL *mat);
static struct _D3DMATERIAL *__cdecl Mesh_GetGroupMaterial(struct Mesh *mesh,unsigned long groupID);
extern int __cdecl Mesh_SetGroupColour(struct Mesh *mesh,unsigned long groupID,float r,float g,float b,unsigned long type);
extern int __cdecl Mesh_SetGroupMaterialValues(struct Mesh *mesh,unsigned long groupID,float value,unsigned long type);
extern void __cdecl Mesh_GetGroupColour(struct Mesh *mesh,unsigned long groupID,float *r,float *g,float *b,unsigned long type);
extern void __cdecl Mesh_GetGroupMaterialValues(struct Mesh *mesh,unsigned long groupID,float *value,unsigned long type);
extern void __cdecl Mesh_SetIdentityMatrix(float (*m)[4]);
extern void __cdecl Mesh_SetTranslationMatrix(float (*m)[4],struct _D3DVECTOR *t);
static int __cdecl Mesh_SetCurrentViewport(struct IDirect3DRMViewport *view);
static int __cdecl Mesh_SetCurrentGODSViewport(struct Viewport *vp);
static int __cdecl Mesh_SetTransform(int state,float (*matrix)[4][4]);
static int __cdecl Mesh_ChangeTextureStageState(int dwRenderStateType,unsigned long dwRenderState);
static void __cdecl Mesh_RestoreTextureStageStates(void );
static void __cdecl Mesh_StoreTextureAndMat(void );
static void __cdecl Mesh_RestoreTextureAndMat(void );
static int __cdecl Mesh_RenderMesh(struct Mesh *mesh,struct _D3DMATRIX *matWorld,int alphaBlend);
static int __cdecl Mesh_RenderGroup(struct Mesh *mesh,struct Mesh_GroupTAG *group,struct _D3DMATRIX *matWorld,int alphaBlend);
static int __cdecl Mesh_RenderTriangleList(unsigned long matHandle,struct IDirect3DTexture2 *texture,unsigned long renderFlags,struct Mesh_VertexTAG *vertices,unsigned long vertexCount,unsigned short *faceData,unsigned long indexCount);
extern VOID __cdecl Mesh_SetAmbientLight(REAL r, REAL g, REAL b);
extern int __cdecl Mesh_SetTextureTime2(struct Mesh *mesh,float frame);
