extern unsigned __int64 __stdcall Int64ShllMod32(unsigned __int64 Value,unsigned long ShiftCount);
extern __int64 __stdcall Int64ShraMod32(__int64 Value,unsigned long ShiftCount);
extern unsigned __int64 __stdcall Int64ShrlMod32(unsigned __int64 Value,unsigned long ShiftCount);
extern void *__cdecl GetFiberData(void );
extern void *__cdecl GetCurrentFiber(void );
extern float __cdecl Maths_InterpolationDelta(float start,float end,float current);
extern float __cdecl Maths_Interpolate(float start,float end,float delta);
extern struct VECTOR3D *__cdecl Maths_Vector2DMake3D(struct VECTOR3D *r,struct VECTOR2D *v);
extern struct VECTOR2D *__cdecl Maths_Vector3DMake2D(struct VECTOR2D *r,struct VECTOR3D *v);
extern float __cdecl Maths_Vector2DModulus(struct VECTOR2D *v);
extern float __cdecl Maths_Vector2DDistance(struct VECTOR2D *a,struct VECTOR2D *b);
extern float __cdecl Maths_Vector2DDotProduct(struct VECTOR2D *a,struct VECTOR2D *b);
extern struct VECTOR2D *__cdecl Maths_Vector2DSubtract(struct VECTOR2D *r,struct VECTOR2D *a,struct VECTOR2D *b);
extern struct VECTOR2D *__cdecl Maths_Vector2DAdd(struct VECTOR2D *r,struct VECTOR2D *a,struct VECTOR2D *b);
extern struct VECTOR2D *__cdecl Maths_Vector2DScale(struct VECTOR2D *r,struct VECTOR2D *a,float f);
extern struct VECTOR2D *__cdecl Maths_Vector2DNormalize(struct VECTOR2D *r);
extern struct VECTOR2D *__cdecl Maths_Vector2DSetLength(struct VECTOR2D *r,struct VECTOR2D *a,float l);
extern struct VECTOR2D *__cdecl Maths_Vector2DRandom(struct VECTOR2D *r);
extern float __cdecl Maths_Vector2DCrossProductZ(struct VECTOR2D *a,struct VECTOR2D *b);
extern float __cdecl Maths_Vector3DModulus(struct VECTOR3D *v);
extern float __cdecl Maths_Vector3DDistance(struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DCrossProduct(struct VECTOR3D *r,struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DAdd(struct VECTOR3D *r,struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DSubtract(struct VECTOR3D *r,struct VECTOR3D *a,struct VECTOR3D *b);
extern float __cdecl Maths_Vector3DDotProduct(struct VECTOR3D *a,struct VECTOR3D *b);
extern struct VECTOR3D *__cdecl Maths_Vector3DScale(struct VECTOR3D *r,struct VECTOR3D *a,float f);
extern struct VECTOR3D *__cdecl Maths_Vector3DNormalize(struct VECTOR3D *r);
extern struct VECTOR3D *__cdecl Maths_Vector3DInterpolate(struct VECTOR3D *result,struct VECTOR3D *start,struct VECTOR3D *end,float delta);
extern int __cdecl Block_Compare(struct Block *a,struct Block *b);
extern int __cdecl Block_Adjacent(struct Block *a,struct Block *b);
extern struct Block *__cdecl Block_FromString(struct Block *b,unsigned char *str);
extern struct Block *__cdecl Block_Rotate(struct Block *b,long dir);
extern struct Block *__cdecl Block_Random(struct Block *b,struct Block *size);
extern struct VECTOR3D *__cdecl Maths_Vector3DRandom(struct VECTOR3D *r);
extern struct VECTOR3D *__cdecl Maths_Vector3DReflect(struct VECTOR3D *d,struct VECTOR3D *ray,struct VECTOR3D *norm);
extern struct VECTOR3D *__cdecl Maths_Vector3DRotate(struct VECTOR3D *r,struct VECTOR3D *v,struct VECTOR3D *axis,float theta);
extern struct VECTOR3D *__cdecl Maths_PlaneNormal(struct VECTOR3D *n,struct VECTOR3D *p1,struct VECTOR3D *p2,struct VECTOR3D *p3);
extern float __cdecl Maths_TriangleAreaZ(struct VECTOR3D *p1,struct VECTOR3D *p2,struct VECTOR3D *p3,int bfc);
extern short __cdecl Maths_Rand(void );
extern float __cdecl Maths_RandRange(float low,float high);
extern int __cdecl Maths_RayPlaneIntersection(struct VECTOR3D *endPoint,struct VECTOR3D *rayOrigin,struct VECTOR3D *ray,struct VECTOR3D *planePoint,struct VECTOR3D *planeNormal);
extern int __cdecl Maths_RayPlaneDistance(float *dist,struct VECTOR3D *rayOrigin,struct VECTOR3D *ray,struct VECTOR3D *planePoint,struct VECTOR3D *planeNormal);
extern void __cdecl Maths_RayEndPoint(struct VECTOR3D *endPoint,struct VECTOR3D *rayOrigin,struct VECTOR3D *ray,float dist);
extern struct VECTOR2D *__cdecl Maths_Vector2DIntersection(struct VECTOR2D *intersection,struct VECTOR2D *start1,struct VECTOR2D *vector1,struct VECTOR2D *start2,struct VECTOR2D *vector2);
extern int __cdecl Maths_PointInsidePoly(struct VECTOR2D *point,struct VECTOR2D *fromList,struct VECTOR2D *toList,unsigned long count);
extern struct VECTOR3D *__cdecl Maths_Vector3DApplyMatrixXYZ(struct VECTOR3D *result,float (*matrix)[4],float x,float y,float z);
extern int __cdecl Maths_RaySphereIntersection(struct VECTOR3D *center,float radius,struct VECTOR3D *camera,struct VECTOR3D *ray);
extern void __cdecl Matrix_Mult(float (*ans)[4],float (*a)[4],float (*b)[4]);
extern void __cdecl Matrix_RotX(float (*ans)[4],float rot);
extern void __cdecl Matrix_RotY(float (*ans)[4],float rot);
extern void __cdecl Matrix_RotZ(float (*ans)[4],float rot);
extern void __cdecl Matrix_Translate(float (*ans)[4],struct VECTOR3D *trans);
extern void __cdecl Matrix_Identity(float (*ans)[4]);
extern void __cdecl Matrix_Zero(float (*ans)[4]);
extern void __cdecl Matrix_Copy(float (*to)[4],float (*from)[4]);
extern int __cdecl Matrix_Invert(float (*q)[4],float (*a)[4]);
